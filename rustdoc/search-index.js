var searchIndex = JSON.parse('{\
"libnotcurses_sys":{"doc":"<code>libnotcurses-sys</code> is a low-level Rust wrapper for the …","tn":["APPEND_ONLY","APPEND_READ","FILE_LIBC","FILE_NC","NCALIGN_CENTER","NCALIGN_LEFT","NCALIGN_RIGHT","NCALIGN_UNALIGNED","NCALPHA_BGDEFAULT_MASK","NCALPHA_BG_ALPHA_MASK","NCALPHA_BG_PALETTE","NCALPHA_BG_RGB_MASK","NCALPHA_BLEND","NCALPHA_FGDEFAULT_MASK","NCALPHA_FG_ALPHA_MASK","NCALPHA_FG_PALETTE","NCALPHA_FG_RGB_MASK","NCALPHA_HIGHCONTRAST","NCALPHA_OPAQUE","NCALPHA_TRANSPARENT","NCBLIT_1x1","NCBLIT_2x1","NCBLIT_2x2","NCBLIT_3x2","NCBLIT_4x1","NCBLIT_8x1","NCBLIT_BRAILLE","NCBLIT_DEFAULT","NCBLIT_PIXEL","NCBOXCORNER_MASK","NCBOXCORNER_SHIFT","NCBOXGRAD_BOTTOM","NCBOXGRAD_LEFT","NCBOXGRAD_RIGHT","NCBOXGRAD_TOP","NCBOXMASK_BOTTOM","NCBOXMASK_LEFT","NCBOXMASK_RIGHT","NCBOXMASK_TOP","NCCHANNEL_ALPHA_MASK","NCDIRECT_OPTION_INHIBIT_CBREAK","NCDIRECT_OPTION_INHIBIT_SETLOCALE","NCDIRECT_OPTION_NO_QUIT_SIGHANDLERS","NCDIRECT_OPTION_VERBOSE","NCDIRECT_OPTION_VERY_VERBOSE","NCKEY_BACKSPACE","NCKEY_BEGIN","NCKEY_BUTTON1","NCKEY_BUTTON10","NCKEY_BUTTON11","NCKEY_BUTTON2","NCKEY_BUTTON3","NCKEY_BUTTON4","NCKEY_BUTTON5","NCKEY_BUTTON6","NCKEY_BUTTON7","NCKEY_BUTTON8","NCKEY_BUTTON9","NCKEY_CANCEL","NCKEY_CENTER","NCKEY_CLOSE","NCKEY_CLS","NCKEY_COMMAND","NCKEY_COPY","NCKEY_DEL","NCKEY_DLEFT","NCKEY_DOWN","NCKEY_DRIGHT","NCKEY_END","NCKEY_ENTER","NCKEY_ESC","NCKEY_EXIT","NCKEY_F00","NCKEY_F01","NCKEY_F02","NCKEY_F03","NCKEY_F04","NCKEY_F05","NCKEY_F06","NCKEY_F07","NCKEY_F08","NCKEY_F09","NCKEY_F10","NCKEY_F11","NCKEY_F12","NCKEY_F13","NCKEY_F14","NCKEY_F15","NCKEY_F16","NCKEY_F17","NCKEY_F18","NCKEY_F19","NCKEY_F20","NCKEY_F21","NCKEY_F22","NCKEY_F23","NCKEY_F24","NCKEY_F25","NCKEY_F26","NCKEY_F27","NCKEY_F28","NCKEY_F29","NCKEY_F30","NCKEY_F31","NCKEY_F32","NCKEY_F33","NCKEY_F34","NCKEY_F35","NCKEY_F36","NCKEY_F37","NCKEY_F38","NCKEY_F39","NCKEY_F40","NCKEY_F41","NCKEY_F42","NCKEY_F43","NCKEY_F44","NCKEY_F45","NCKEY_F46","NCKEY_F47","NCKEY_F48","NCKEY_F49","NCKEY_F50","NCKEY_F51","NCKEY_F52","NCKEY_F53","NCKEY_F54","NCKEY_F55","NCKEY_F56","NCKEY_F57","NCKEY_F58","NCKEY_F59","NCKEY_F60","NCKEY_HOME","NCKEY_INS","NCKEY_INVALID","NCKEY_LEFT","NCKEY_PGDOWN","NCKEY_PGUP","NCKEY_PRINT","NCKEY_REFRESH","NCKEY_RELEASE","NCKEY_RESIZE","NCKEY_RETURN","NCKEY_RIGHT","NCKEY_SCROLL_DOWN","NCKEY_SCROLL_UP","NCKEY_SPACE","NCKEY_ULEFT","NCKEY_UP","NCKEY_URIGHT","NCLOGLEVEL_DEBUG","NCLOGLEVEL_ERROR","NCLOGLEVEL_FATAL","NCLOGLEVEL_INFO","NCLOGLEVEL_PANIC","NCLOGLEVEL_SILENT","NCLOGLEVEL_TRACE","NCLOGLEVEL_VERBOSE","NCLOGLEVEL_WARNING","NCMETRIC_BPREFIXCOLUMNS","NCMETRIC_BPREFIXSTRLEN","NCMETRIC_IPREFIXCOLUMNS","NCMETRIC_IPREFIXSTRLEN","NCMETRIC_PREFIXCOLUMNS","NCMETRIC_PREFIXSTRLEN","NCOPTION_INHIBIT_SETLOCALE","NCOPTION_NO_ALTERNATE_SCREEN","NCOPTION_NO_CLEAR_BITMAPS","NCOPTION_NO_FONT_CHANGES","NCOPTION_NO_QUIT_SIGHANDLERS","NCOPTION_NO_WINCH_SIGHANDLER","NCOPTION_PRESERVE_CURSOR","NCOPTION_SUPPRESS_BANNERS","NCPALETTESIZE","NCPLANE_OPTION_HORALIGNED","NCPLANE_OPTION_MARGINALIZED","NCPLANE_OPTION_VERALIGNED","NCRESULT_ERR","NCRESULT_MAX","NCRESULT_OK","NCSCALE_NONE","NCSCALE_NONE_HIRES","NCSCALE_SCALE","NCSCALE_SCALE_HIRES","NCSCALE_STRETCH","NCSTYLE_BLINK","NCSTYLE_BOLD","NCSTYLE_ITALIC","NCSTYLE_MASK","NCSTYLE_NONE","NCSTYLE_STRUCK","NCSTYLE_UNDERCURL","NCSTYLE_UNDERLINE","NCVISUAL_OPTION_ADDALPHA","NCVISUAL_OPTION_BLEND","NCVISUAL_OPTION_CHILDPLANE","NCVISUAL_OPTION_HORALIGNED","NCVISUAL_OPTION_NODEGRADE","NCVISUAL_OPTION_NOINTERPOLATE","NCVISUAL_OPTION_VERALIGNED","Nc","NcAlign","NcAlphaBits","NcBlitter","NcBoxMask","NcCapabilities","NcCell","NcChannel","NcChannelMethods","NcChannels","NcChannelsMethods","NcComponent","NcDim","NcDirect","NcDirectF","NcDirectFlags","NcEgcBackstop","NcError","NcFadeCb","NcFadeCtx","NcFdPlane","NcFdPlaneOptions","NcFile","NcInput","NcIntResult","NcLogLevel","NcOffset","NcOptions","NcPalette","NcPaletteIndex","NcPixel","NcPixelGeometry","NcPixelMethods","NcPlane","NcPlaneOptions","NcResizeCb","NcResizeCbMethods","NcResizeCbUnsafe","NcResult","NcRgb","NcRgba","NcScale","NcStats","NcStyle","NcStyleMethods","NcTime","NcVGeom","NcVisual","NcVisualOptions","RANDOM_ACCESS_MODE","READ_ONLY","TRUNCATE_RANDOM_ACCESS_MODE","UPDATE","WRITE_ONLY","a","a","above","abs_x","abs_y","abs_yx","add","add","align","alpha","alpha","as_libc_ptr","as_nc_ptr","as_rgba","at_cursor","at_cursor_cell","at_yx","at_yx","at_yx","at_yx_cell","b","b","b","b","base","bchannel","bchannel","bchannel","bcombine","bcombine","below","bg_alpha","bg_alpha","bg_alpha","bg_alpha","bg_b","bg_b","bg_default","bg_default_p","bg_default_p","bg_default_p","bg_g","bg_g","bg_palindex","bg_palindex_p","bg_palindex_p","bg_palindex_p","bg_r","bg_r","bg_rgb","bg_rgb","bg_rgb","bg_rgb","bg_rgb8","bg_rgb8","bg_rgb8","bg_rgb8","bg_set_b","bg_set_b","bg_set_g","bg_set_g","bg_set_r","bg_set_r","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","box","box","box_sized","canbraille","canbraille","canchangecolor","canchangecolor","canfade","canfade","canget_cursor","canhalfblock","canhalfblock","canopen_images","canopen_images","canopen_videos","canopen_videos","canquadrant","canquadrant","cansextant","cansextant","cantruecolor","cantruecolor","canutf8","canutf8","capabilities","cell_x","cell_y","center_abs","channels","channels","check_pixel_support","check_pixel_support","clear","clone","clone","clone_into","clone_into","cols","combine","combine","compare","contents","current_pos","cursor_disable","cursor_disable","cursor_down","cursor_enable","cursor_enable","cursor_home","cursor_left","cursor_move_cols","cursor_move_rel","cursor_move_rows","cursor_move_x","cursor_move_y","cursor_move_yx","cursor_pop","cursor_push","cursor_right","cursor_set_x","cursor_set_y","cursor_set_yx","cursor_up","cursor_x","cursor_y","cursor_yx","cursor_yx","debug","decode","decode_loop","default","default","default","default_p","default_p","description","destroy","destroy","detected_terminal","detected_terminal","dim_x","dim_x","dim_y","dim_y","dim_yx","dim_yx","double_box","double_box","double_box","double_box_sized","double_wide_p","drop","drop_planes","dup","duplicate","egc","erase","extract","fadein","fadein_iteration","fadeout","fadeout_iteration","fchannel","fchannel","fchannel","fcombine","fcombine","ffi","fg_alpha","fg_alpha","fg_alpha","fg_alpha","fg_b","fg_b","fg_default","fg_default_p","fg_default_p","fg_default_p","fg_g","fg_g","fg_palindex","fg_palindex_p","fg_palindex_p","fg_palindex_p","fg_r","fg_r","fg_rgb","fg_rgb","fg_rgb","fg_rgb","fg_rgb8","fg_rgb8","fg_rgb8","fg_rgb8","fg_set_b","fg_set_b","fg_set_g","fg_set_g","fg_set_r","fg_set_r","flush","fmt","fmt","fmt","fmt","format","free","free","from","from","from","from_bgra","from_char","from_char7b","from_file","from_libc","from_nc","from_plane","from_rgb","from_rgb","from_rgb","from_rgb","from_rgb8","from_rgb8","from_rgb8","from_rgb8","from_rgb8_alpha","from_rgb8_alpha","from_rgb8_alpha","from_rgb8_alpha","from_rgb8_alpha_both","from_rgb8_alpha_both","from_rgb8_both","from_rgb8_both","from_rgb_alpha","from_rgb_alpha","from_rgb_alpha","from_rgb_alpha","from_rgb_alpha_both","from_rgb_alpha_both","from_rgb_both","from_rgb_both","from_rgb_loose","from_rgb_packed","from_rgba","from_str","fullsize_pixel_without_plane","g","g","g","g","geom","get_rgb","get_rgb8","getc","getc","getc_blocking","getc_blocking","getc_nblock","getc_nblock","gradient","gradient_sized","greyscale","halign","has","has","highgradient","highgradient_sized","hline_interp","init","inputready_fd","inputready_fd","int","into","into","into","iterations","lex_blitter","lex_margins","lex_scalemode","lex_styles","linesigs_disable","linesigs_enable","load","load_box","max_bitmap_x","max_bitmap_y","media_defblitter","mergedown","mergedown_simple","mouse_disable","mouse_enable","move_above","move_below","move_bottom","move_rel","move_top","move_yx","msg","ncblit_bgrx","ncblit_rgb_loose","ncblit_rgb_packed","ncblit_rgba","nccapability_canchangecolor","nccell_bg_alpha","nccell_bg_default_p","nccell_bg_palindex","nccell_bg_palindex_p","nccell_bg_rgb","nccell_bg_rgb8","nccell_cols","nccell_double_wide_p","nccell_duplicate","nccell_extended_gcluster","nccell_extract","nccell_fg_alpha","nccell_fg_default_p","nccell_fg_palindex","nccell_fg_palindex_p","nccell_fg_rgb","nccell_fg_rgb8","nccell_init","nccell_load","nccell_off_styles","nccell_on_styles","nccell_prime","nccell_release","nccell_set_bg_alpha","nccell_set_bg_default","nccell_set_bg_palindex","nccell_set_bg_rgb","nccell_set_bg_rgb8","nccell_set_fg_alpha","nccell_set_fg_default","nccell_set_fg_palindex","nccell_set_fg_rgb","nccell_set_fg_rgb8","nccell_set_styles","nccell_strdup","nccell_styles","nccell_wide_left_p","nccell_wide_right_p","nccell_width","nccellcmp","nccells_double_box","nccells_load_box","nccells_rounded_box","ncchannel_alpha","ncchannel_b","ncchannel_default_p","ncchannel_g","ncchannel_palindex_p","ncchannel_r","ncchannel_rgb","ncchannel_rgb8","ncchannel_set","ncchannel_set_alpha","ncchannel_set_b","ncchannel_set_default","ncchannel_set_g","ncchannel_set_not_default","ncchannel_set_r","ncchannel_set_rgb8","ncchannels_bchannel","ncchannels_bg_alpha","ncchannels_bg_default_p","ncchannels_bg_palindex_p","ncchannels_bg_rgb","ncchannels_bg_rgb8","ncchannels_combine","ncchannels_fchannel","ncchannels_fg_alpha","ncchannels_fg_default_p","ncchannels_fg_palindex_p","ncchannels_fg_rgb","ncchannels_fg_rgb8","ncchannels_set_bchannel","ncchannels_set_bg_alpha","ncchannels_set_bg_default","ncchannels_set_bg_not_default","ncchannels_set_bg_palindex","ncchannels_set_bg_rgb","ncchannels_set_bg_rgb8","ncchannels_set_default","ncchannels_set_fchannel","ncchannels_set_fg_alpha","ncchannels_set_fg_default","ncchannels_set_fg_not_default","ncchannels_set_fg_palindex","ncchannels_set_fg_rgb","ncchannels_set_fg_rgb8","ncchannels_set_not_default","ncdirect_box","ncdirect_canbraille","ncdirect_canchangecolor","ncdirect_canfade","ncdirect_canget_cursor","ncdirect_canhalfblock","ncdirect_canopen_images","ncdirect_canopen_videos","ncdirect_canquadrant","ncdirect_cansextant","ncdirect_cantruecolor","ncdirect_canutf8","ncdirect_capabilities","ncdirect_check_pixel_support","ncdirect_clear","ncdirect_core_init","ncdirect_cursor_disable","ncdirect_cursor_down","ncdirect_cursor_enable","ncdirect_cursor_left","ncdirect_cursor_move_yx","ncdirect_cursor_pop","ncdirect_cursor_push","ncdirect_cursor_right","ncdirect_cursor_up","ncdirect_cursor_yx","ncdirect_detected_terminal","ncdirect_dim_x","ncdirect_dim_y","ncdirect_double_box","ncdirect_flush","ncdirect_getc","ncdirect_getc_blocking","ncdirect_getc_nblock","ncdirect_hline_interp","ncdirect_init","ncdirect_inputready_fd","ncdirect_off_styles","ncdirect_on_styles","ncdirect_palette_size","ncdirect_putstr","ncdirect_raster_frame","ncdirect_readline","ncdirect_render_frame","ncdirect_render_image","ncdirect_rounded_box","ncdirect_set_bg_default","ncdirect_set_bg_palindex","ncdirect_set_bg_rgb","ncdirect_set_bg_rgb8","ncdirect_set_fg_default","ncdirect_set_fg_palindex","ncdirect_set_fg_rgb","ncdirect_set_fg_rgb8","ncdirect_set_styles","ncdirect_stop","ncdirect_stream","ncdirect_styles","ncdirect_supported_styles","ncdirect_vline_interp","ncdirectf_free","ncdirectf_free","ncdirectf_from_file","ncdirectf_from_file","ncdirectf_geom","ncdirectf_geom","ncdirectf_render","ncdirectf_render","ncdplot_add_sample","ncdplot_create","ncdplot_destroy","ncdplot_plane","ncdplot_sample","ncdplot_set_sample","ncfadectx_free","ncfadectx_iterations","ncfadectx_setup","ncfdplane_create","ncfdplane_destroy","ncfdplane_plane","ncinput_equal_p","ncinput_nomod_p","nckey_mouse_p","nckey_supppuab_p","ncmenu_create","ncmenu_destroy","ncmenu_item_set_status","ncmenu_mouse_selected","ncmenu_nextitem","ncmenu_nextsection","ncmenu_offer_input","ncmenu_plane","ncmenu_previtem","ncmenu_prevsection","ncmenu_rollup","ncmenu_selected","ncmenu_unroll","ncmetric","ncmultiselector_create","ncmultiselector_destroy","ncmultiselector_offer_input","ncmultiselector_plane","ncmultiselector_selected","ncpalette_free","ncpalette_get_rgb8","ncpalette_new","ncpalette_set","ncpalette_set_rgb8","ncpalette_use","ncpile_bottom","ncpile_create","ncpile_rasterize","ncpile_render","ncpile_top","ncpixel","ncpixel_a","ncpixel_b","ncpixel_g","ncpixel_r","ncpixel_set_a","ncpixel_set_b","ncpixel_set_g","ncpixel_set_r","ncpixel_set_rgb8","ncplane_above","ncplane_abs_x","ncplane_abs_y","ncplane_abs_yx","ncplane_as_rgba","ncplane_at_cursor","ncplane_at_cursor_cell","ncplane_at_yx","ncplane_at_yx_cell","ncplane_base","ncplane_bchannel","ncplane_below","ncplane_bg_alpha","ncplane_bg_default_p","ncplane_bg_rgb","ncplane_bg_rgb8","ncplane_box","ncplane_box_sized","ncplane_center_abs","ncplane_channels","ncplane_contents","ncplane_create","ncplane_cursor_move_yx","ncplane_cursor_yx","ncplane_destroy","ncplane_dim_x","ncplane_dim_y","ncplane_dim_yx","ncplane_double_box","ncplane_double_box_sized","ncplane_dup","ncplane_erase","ncplane_erase_region","ncplane_fadein","ncplane_fadein_iteration","ncplane_fadeout","ncplane_fadeout_iteration","ncplane_fchannel","ncplane_fg_alpha","ncplane_fg_default_p","ncplane_fg_rgb","ncplane_fg_rgb8","ncplane_format","ncplane_gradient","ncplane_gradient_sized","ncplane_greyscale","ncplane_halign","ncplane_highgradient","ncplane_highgradient_sized","ncplane_hline","ncplane_hline_interp","ncplane_home","ncplane_mergedown","ncplane_mergedown_simple","ncplane_move_above","ncplane_move_below","ncplane_move_bottom","ncplane_move_top","ncplane_move_yx","ncplane_moverel","ncplane_notcurses","ncplane_notcurses_const","ncplane_off_styles","ncplane_on_styles","ncplane_parent","ncplane_parent_const","ncplane_perimeter","ncplane_perimeter_double","ncplane_perimeter_rounded","ncplane_pixelgeom","ncplane_polyfill_yx","ncplane_pulse","ncplane_putc","ncplane_putc_yx","ncplane_putchar","ncplane_putchar_stained","ncplane_putchar_yx","ncplane_putegc_stained","ncplane_putegc_yx","ncplane_putnstr","ncplane_putnstr_aligned","ncplane_putnstr_yx","ncplane_putstr","ncplane_putstr_aligned","ncplane_putstr_stained","ncplane_putstr_yx","ncplane_puttext","ncplane_putwegc_stained","ncplane_putwstr_stained","ncplane_qrcode","ncplane_reparent","ncplane_reparent_family","ncplane_resize","ncplane_resize_marginalized","ncplane_resize_maximize","ncplane_resize_realign","ncplane_resize_simple","ncplane_resizecb","ncplane_rotate_ccw","ncplane_rotate_cw","ncplane_rounded_box","ncplane_rounded_box_sized","ncplane_scrolling_p","ncplane_set_base","ncplane_set_base_cell","ncplane_set_bchannel","ncplane_set_bg_alpha","ncplane_set_bg_default","ncplane_set_bg_not_default","ncplane_set_bg_palindex","ncplane_set_bg_rgb","ncplane_set_bg_rgb8","ncplane_set_bg_rgb8_clipped","ncplane_set_channels","ncplane_set_default","ncplane_set_fchannel","ncplane_set_fg_alpha","ncplane_set_fg_default","ncplane_set_fg_not_default","ncplane_set_fg_palindex","ncplane_set_fg_rgb","ncplane_set_fg_rgb8","ncplane_set_fg_rgb8_clipped","ncplane_set_not_default","ncplane_set_resizecb","ncplane_set_scrolling","ncplane_set_styles","ncplane_set_userptr","ncplane_stain","ncplane_styles","ncplane_styles_off","ncplane_styles_on","ncplane_styles_set","ncplane_translate","ncplane_translate_abs","ncplane_userptr","ncplane_valign","ncplane_vline","ncplane_vline_interp","ncplane_vprintf_aligned","ncplane_vprintf_stained","ncplane_vprintf_yx","ncplane_x","ncplane_y","ncplane_yx","ncprogbar_create","ncprogbar_destroy","ncprogbar_plane","ncprogbar_progress","ncprogbar_set_progress","ncreader_clear","ncreader_contents","ncreader_create","ncreader_destroy","ncreader_move_down","ncreader_move_left","ncreader_move_right","ncreader_move_up","ncreader_offer_input","ncreader_plane","ncreader_write_egc","ncreel_add","ncreel_create","ncreel_del","ncreel_destroy","ncreel_focused","ncreel_next","ncreel_offer_input","ncreel_plane","ncreel_prev","ncreel_redraw","ncreel_tabletcount","ncresizecb_to_c","ncresizecb_to_rust","ncselector_additem","ncselector_create","ncselector_delitem","ncselector_destroy","ncselector_nextitem","ncselector_offer_input","ncselector_plane","ncselector_previtem","ncselector_selected","ncstrwidth","nctablet_plane","nctablet_userptr","nctree_create","nctree_destroy","nctree_focused","nctree_goto","nctree_next","nctree_offer_input","nctree_plane","nctree_prev","nctree_redraw","ncuplot_add_sample","ncuplot_create","ncuplot_destroy","ncuplot_plane","ncuplot_sample","ncuplot_set_sample","ncvisual_at_yx","ncvisual_blitter_geom","ncvisual_decode","ncvisual_decode_loop","ncvisual_destroy","ncvisual_from_bgra","ncvisual_from_file","ncvisual_from_plane","ncvisual_from_rgb_loose","ncvisual_from_rgb_packed","ncvisual_from_rgba","ncvisual_media_defblitter","ncvisual_polyfill_yx","ncvisual_render","ncvisual_resize","ncvisual_resize_noninterpolative","ncvisual_rotate","ncvisual_set_yx","ncvisual_simple_streamer","ncvisual_stream","ncvisual_subtitle","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_aligned","new_bound","new_empty","new_err","new_msg","notcurses","notcurses_align","notcurses_at_yx","notcurses_bottom","notcurses_canbraille","notcurses_canchangecolor","notcurses_canfade","notcurses_canhalfblock","notcurses_canopen_images","notcurses_canopen_videos","notcurses_canquadrant","notcurses_cansextant","notcurses_cantruecolor","notcurses_canutf8","notcurses_check_pixel_support","notcurses_const","notcurses_core_init","notcurses_cursor_disable","notcurses_cursor_enable","notcurses_cursor_yx","notcurses_debug","notcurses_detected_terminal","notcurses_drop_planes","notcurses_getc","notcurses_getc_blocking","notcurses_getc_nblock","notcurses_init","notcurses_inputready_fd","notcurses_lex_blitter","notcurses_lex_margins","notcurses_lex_scalemode","notcurses_linesigs_disable","notcurses_linesigs_enable","notcurses_mouse_disable","notcurses_mouse_enable","notcurses_palette_size","notcurses_refresh","notcurses_render","notcurses_render_to_buffer","notcurses_render_to_file","notcurses_stats","notcurses_stats_alloc","notcurses_stats_reset","notcurses_stddim_yx","notcurses_stddim_yx_const","notcurses_stdplane","notcurses_stdplane_const","notcurses_stop","notcurses_str_blitter","notcurses_str_scalemode","notcurses_supported_styles","notcurses_term_dim_yx","notcurses_top","notcurses_ucs32_to_utf8","notcurses_version","notcurses_version_components","nrs","off_styles","on_styles","palette_size","palette_size","palindex_p","palindex_p","parent","parent_const","perimeter","perimeter_double","perimeter_rounded","pixelgeom","polyfill_yx","prime","prs","pulse","putc","putc_yx","putchar","putchar_yx","putln","putstr","putstr","putstr_aligned","putstr_stained","putstr_yx","putstrln","r","r","r","r","raster_frame","rasterize","read","read_all","read_exact","read_to_end","read_to_string","readline","refresh","release","render","render","render","render_frame","render_image","render_to_buffer","render_to_file","reparent","reparent_family","reset","resize","resize","resize_marginalized","resize_maximize","resize_noninterpolative","resize_realign","resize_simple","resizecb","rgb","rgb","rgb8","rgb8","rotate","rotate_ccw","rotate_cw","rounded_box","rounded_box","rows","scrolling_p","seek","set","set","set","set_a","set_a","set_alpha","set_alpha","set_b","set_b","set_b","set_b","set_base","set_base_cell","set_bchannel","set_bchannel","set_bchannel","set_bg_alpha","set_bg_alpha","set_bg_alpha","set_bg_alpha","set_bg_default","set_bg_default","set_bg_default","set_bg_default","set_bg_default","set_bg_not_default","set_bg_not_default","set_bg_not_default","set_bg_palindex","set_bg_palindex","set_bg_palindex","set_bg_palindex","set_bg_palindex","set_bg_rgb","set_bg_rgb","set_bg_rgb","set_bg_rgb","set_bg_rgb","set_bg_rgb8","set_bg_rgb8","set_bg_rgb8","set_bg_rgb8","set_bg_rgb8","set_channels","set_default","set_default","set_default","set_default","set_default","set_fchannel","set_fchannel","set_fchannel","set_fg_alpha","set_fg_alpha","set_fg_alpha","set_fg_alpha","set_fg_default","set_fg_default","set_fg_default","set_fg_default","set_fg_default","set_fg_not_default","set_fg_not_default","set_fg_not_default","set_fg_palindex","set_fg_palindex","set_fg_palindex","set_fg_palindex","set_fg_palindex","set_fg_rgb","set_fg_rgb","set_fg_rgb","set_fg_rgb","set_fg_rgb","set_fg_rgb8","set_fg_rgb8","set_fg_rgb8","set_fg_rgb8","set_fg_rgb8","set_g","set_g","set_g","set_g","set_not_default","set_not_default","set_not_default","set_not_default","set_not_default","set_r","set_r","set_r","set_r","set_resizecb","set_rgb8","set_rgb8","set_rgb8","set_rgb8","set_scrolling","set_styles","set_yx","setup","simple_streamer","sleep","stain","stats","stats","stats_alloc","stats_reset","stdplane","stdplane_const","stop","stop","str_blitter","str_scalemode","str_styles","strdup","styles","styles","styles_off","styles_off","styles_on","styles_on","styles_set","styles_set","subtitle","supported_styles","term_dim_yx","term_x","term_y","to_c","to_c","to_c","to_owned","to_owned","to_rust","to_rust","to_rust","to_string","to_vec","to_vec","top","top","translate","translate_abs","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use","valign","version","version_components","vline_interp","wide_left_p","wide_right_p","widgets","with_all_args","with_all_options","with_alt","with_banners","with_ctrl","with_debug","with_default","with_default","with_flags","with_flags","with_flags","with_flags","with_flags_aligned","with_margins","with_msg","with_options","with_options","with_options_bound","with_plane","with_shift","with_termsize","without_altscreen","without_plane","x","y","yx","BC_BASE_MAX","BC_DIM_MAX","BC_SCALE_MAX","BC_STRING_MAX","BPREFIXCOLUMNS","BPREFIXSTRLEN","BUFSIZ","CELL_ALPHA_BLEND","CELL_ALPHA_HIGHCONTRAST","CELL_ALPHA_OPAQUE","CELL_ALPHA_TRANSPARENT","CHARCLASS_NAME_MAX","COLL_WEIGHTS_MAX","EOF","EXIT_FAILURE","EXIT_SUCCESS","EXPR_NEST_MAX","FILE","FILENAME_MAX","FOPEN_MAX","IOV_MAX","IPREFIXCOLUMNS","IPREFIXSTRLEN","NCALPHA_BLEND","NCALPHA_HIGHCONTRAST","NCALPHA_OPAQUE","NCALPHA_TRANSPARENT","NCANGLESBL","NCANGLESBR","NCANGLESTL","NCANGLESTR","NCARROWANTICLOCKW","NCARROWCIRCLEDW","NCARROWDASHEDW","NCARROWDOUBLEW","NCARROWW","NCASTERISKS5","NCASTERISKS6","NCASTERISKS8","NCBLACKARROWHEADSW","NCBLACKTRIANGLESW","NCBOXASCII","NCBOXASCIIW","NCBOXCORNER_MASK","NCBOXCORNER_SHIFT","NCBOXDOUBLE","NCBOXDOUBLEW","NCBOXDRAWHEAVYW","NCBOXDRAWW","NCBOXGRAD_BOTTOM","NCBOXGRAD_LEFT","NCBOXGRAD_RIGHT","NCBOXGRAD_TOP","NCBOXHEAVY","NCBOXHEAVYW","NCBOXLIGHT","NCBOXLIGHTW","NCBOXMASK_BOTTOM","NCBOXMASK_LEFT","NCBOXMASK_RIGHT","NCBOXMASK_TOP","NCBOXOUTER","NCBOXOUTERW","NCBOXROUND","NCBOXROUNDW","NCBRAILLEEGCS","NCCIRCULARARCSW","NCDIAGONALSW","NCDIGITSSUBW","NCDIGITSSUPERW","NCDIRECT_OPTION_INHIBIT_CBREAK","NCDIRECT_OPTION_INHIBIT_SETLOCALE","NCDIRECT_OPTION_NO_QUIT_SIGHANDLERS","NCDIRECT_OPTION_VERBOSE","NCDIRECT_OPTION_VERY_VERBOSE","NCEIGHTHSB","NCEIGHTHSL","NCEIGHTHSR","NCEIGHTHST","NCHALFBLOCKS","NCKEY_ESC","NCKEY_SPACE","NCLIGHTARROWHEADSW","NCMENU_OPTION_BOTTOM","NCMENU_OPTION_HIDING","NCOPTION_INHIBIT_SETLOCALE","NCOPTION_NO_ALTERNATE_SCREEN","NCOPTION_NO_CLEAR_BITMAPS","NCOPTION_NO_FONT_CHANGES","NCOPTION_NO_QUIT_SIGHANDLERS","NCOPTION_NO_WINCH_SIGHANDLER","NCOPTION_PRESERVE_CURSOR","NCOPTION_SUPPRESS_BANNERS","NCPALETTESIZE","NCPLANE_OPTION_FIXED","NCPLANE_OPTION_HORALIGNED","NCPLANE_OPTION_MARGINALIZED","NCPLANE_OPTION_VERALIGNED","NCPLOT_OPTION_DETECTMAXONLY","NCPLOT_OPTION_EXPONENTIALD","NCPLOT_OPTION_LABELTICKSD","NCPLOT_OPTION_NODEGRADE","NCPLOT_OPTION_PRINTSAMPLE","NCPLOT_OPTION_VERTICALI","NCPROGBAR_OPTION_RETROGRADE","NCQUADBLOCKS","NCREADER_OPTION_CURSOR","NCREADER_OPTION_HORSCROLL","NCREADER_OPTION_NOCMDKEYS","NCREADER_OPTION_VERSCROLL","NCREEL_OPTION_CIRCULAR","NCREEL_OPTION_INFINITESCROLL","NCSEXBLOCKS","NCSHADETRIANGLESW","NCSTYLE_BLINK","NCSTYLE_BOLD","NCSTYLE_DIM","NCSTYLE_INVIS","NCSTYLE_ITALIC","NCSTYLE_MASK","NCSTYLE_NONE","NCSTYLE_PROTECT","NCSTYLE_REVERSE","NCSTYLE_STANDOUT","NCSTYLE_STRUCK","NCSTYLE_UNDERCURL","NCSTYLE_UNDERLINE","NCTABBED_OPTION_BOTTOM","NCVISUAL_OPTION_ADDALPHA","NCVISUAL_OPTION_BLEND","NCVISUAL_OPTION_CHILDPLANE","NCVISUAL_OPTION_HORALIGNED","NCVISUAL_OPTION_NODEGRADE","NCVISUAL_OPTION_NOINTERPOLATE","NCVISUAL_OPTION_VERALIGNED","NCWHITECIRCLESW","NCWHITESQUARESW","NCWHITETRIANGLESW","NC_BGDEFAULT_MASK","NC_BG_ALPHA_MASK","NC_BG_PALETTE","NC_BG_RGB_MASK","NC_FGDEFAULT_MASK","NC_FG_ALPHA_MASK","NC_FG_PALETTE","NC_FG_RGB_MASK","NC_NOBACKGROUND_MASK","PATH_MAX","PIPE_BUF","PREFIXCOLUMNS","PREFIXSTRLEN","PTHREAD_DESTRUCTOR_ITERATIONS","PTHREAD_KEYS_MAX","PTHREAD_STACK_MIN","PTRDIFF_MAX","PTRDIFF_MIN","P_tmpdir","_BYTESWAP_H","_CTYPE_H","_ENDIAN_H","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_GETOPT_CORE_H","_GETOPT_POSIX_H","_G_fpos64_t","_G_fpos_t","_IOFBF","_IOLBF","_IONBF","_IO_EOF_SEEN","_IO_ERR_SEEN","_IO_FILE","_IO_USER_LOCK","_IO_backup_base","_IO_buf_base","_IO_buf_end","_IO_codecvt","_IO_lock_t","_IO_marker","_IO_read_base","_IO_read_end","_IO_read_ptr","_IO_save_base","_IO_save_end","_IO_wide_data","_IO_write_base","_IO_write_end","_IO_write_ptr","_LIBC_LIMITS_H_","_NETINET_IN_H","_NSIG","_SS_SIZE","_STDC_PREDEF_H","_STDINT_H","_STDIO_H","_STDLIB_H","_STRING_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SOCKET_H","_SYS_TYPES_H","_TIME_H","_WCHAR_H","_WINT_T","_XOPEN_IOV_MAX","_XOPEN_LIM_H","__IncompleteArrayField","____FILE_defined","_____fpos64_t_defined","_____fpos_t_defined","____mbstate_t_defined","__blkcnt64_t","__blkcnt_t","__blksize_t","__bool_true_false_are_defined","__builtin_va_list","__caddr_t","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__cmsg_data","__compar_fn_t","__count","__daddr_t","__daylight","__dev_t","__fpos64_t","__fpos_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__id_t","__in6_u","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__iovec_defined","__key_t","__ldiv_t_defined","__lldiv_t_defined","__loff_t","__mbstate_t","__mbstate_t__bindgen_ty_1","__mbstate_t_defined","__mode_t","__nlink_t","__off64_t","__off_t","__pad5","__pid_t","__pos","__pos","__quad_t","__rlim64_t","__rlim_t","__sig_atomic_t","__sig_atomic_t_defined","__sighandler_t","__sigset_t","__sigset_t_defined","__socket_type","__socket_type_SOCK_CLOEXEC","__socket_type_SOCK_DCCP","__socket_type_SOCK_DGRAM","__socket_type_SOCK_NONBLOCK","__socket_type_SOCK_PACKET","__socket_type_SOCK_RAW","__socket_type_SOCK_RDM","__socket_type_SOCK_SEQPACKET","__socket_type_SOCK_STREAM","__socklen_t","__ss_align","__ss_padding","__ssize_t","__state","__state","__struct_FILE_defined","__struct_tm_defined","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timezone","__tm_gmtoff","__tm_zone","__tzname","__u6_addr16","__u6_addr32","__u6_addr8","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__value","__wch","__wchb","__wint_t_defined","_chain","_codecvt","_cur_column","_fileno","_flags","_flags2","_freeres_buf","_freeres_list","_lock","_markers","_mode","_offset","_old_offset","_shortbuf","_unused2","_vtable_offset","_wide_data","above","abs_x","abs_y","abs_yx","align","alt","appsync_updates","as_mut_ptr","as_mut_slice","as_ptr","as_rgba","as_slice","at_cursor","at_cursor_cell","at_yx","at_yx","at_yx","at_yx_cell","base","bchannel","begx","begy","below","bg_alpha","bg_alpha","bg_default","bg_default_p","bg_palindex","bg_palindex_p","bg_rgb","bg_rgb","bg_rgb8","bg_rgb8","bgelisions","bgemissions","blchannel","blitter","blitter","blkcnt_t","borderchan","bordermask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","box","box","box_sized","boxchannels","boxchannels","braille","brchannel","can_change_colors","canbraille","canbraille","canchangecolor","canchangecolor","canfade","canfade","canget_cursor","canhalfblock","canhalfblock","canopen_images","canopen_images","canopen_videos","canopen_videos","canquadrant","canquadrant","cansextant","cansextant","cantruecolor","cantruecolor","canutf8","canutf8","capabilities","cdimx","cdimy","cell","cellelisions","cellemissions","center_abs","channels","channels","channels","chans","check_pixel_support","check_pixel_support","clear","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmsg_len","cmsg_level","cmsg_type","cmsghdr","colors","cols","cols","compare","contents","count","ctrl","curry","curry","curry","cursor_disable","cursor_disable","cursor_down","cursor_enable","cursor_enable","cursor_home","cursor_left","cursor_move_cols","cursor_move_rel","cursor_move_rows","cursor_move_x","cursor_move_y","cursor_move_yx","cursor_pop","cursor_push","cursor_right","cursor_set_x","cursor_set_y","cursor_set_yx","cursor_up","cursor_x","cursor_y","cursor_yx","cursor_yx","daylight","debug","decode","decode_loop","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","defaultelisions","defaultemissions","defidx","desc","desc","desc","descchannels","descchannels","desccolumns","destroy","destroy","destroy","destroy","destroy","detected_terminal","detected_terminal","dev_t","dim_x","dim_x","dim_y","dim_y","dim_yx","dim_yx","div_t","double_box","double_box","double_box","double_box_sized","double_wide_p","drop_planes","dup","duplicate","egc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erase","extract","fadecb","fadein","fadein_iteration","fadeout","fadeout_iteration","failed_renders","failed_writeouts","false_","fbbytes","fchannel","fg_alpha","fg_alpha","fg_default","fg_default_p","fg_palindex","fg_palindex_p","fg_rgb","fg_rgb","fg_rgb8","fg_rgb8","fgelisions","fgemissions","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","focusedchan","follow","footchannels","footchannels","footer","footer","format","fp_offset","fpos_t","free","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bgra","from_char","from_char7b","from_file","from_plane","from_rgb_loose","from_rgb_packed","from_rgba","from_str","fsblkcnt_t","fsfilcnt_t","fullsize_pixel_without_plane","gcluster","gcluster_backstop","geom","get_rgb","get_rgb8","getc","getc","getc_blocking","getc_blocking","getc_nblock","getc_nblock","gid_t","gp_offset","gradient","gradient_sized","greyscale","gridtype","halfblocks","halign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdrchan","header_channels","header_channels_mut","headerchannels","highgradient","highgradient_sized","hline_interp","id","id_t","in6_addr","in6_addr__bindgen_ty_1","in6addr_any","in6addr_loopback","in_addr","in_addr_t","in_port_t","indentcols","init","ino_t","input_errors","input_events","inputready_fd","inputready_fd","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iov_base","iov_len","iovec","item_set_status","itemcount","items","items","items","items","iterations","key_t","l_linger","l_onoff","ldiv_t","legendstyle","lenx","leny","lex_blitter","lex_margins","lex_scalemode","lex_styles","linesigs_disable","linesigs_enable","linger","lldiv_t","load","load_box","loglevel","margin_b","margin_b","margin_l","margin_r","margin_r","margin_t","maxchannels","maxdisplay","maxdisplay","maxpixelx","maxpixely","media_defblitter","mergedown","mergedown_simple","minchannels","mouse_disable","mouse_enable","mouse_selected","move_above","move_below","move_bottom","move_rel","move_top","move_yx","n","name","name","ncalign_e","ncalign_e_NCALIGN_CENTER","ncalign_e_NCALIGN_LEFT","ncalign_e_NCALIGN_RIGHT","ncalign_e_NCALIGN_UNALIGNED","ncblit_bgrx","ncblit_rgb_loose","ncblit_rgb_packed","ncblit_rgba","ncblitter_e","ncblitter_e_NCBLIT_1x1","ncblitter_e_NCBLIT_2x1","ncblitter_e_NCBLIT_2x2","ncblitter_e_NCBLIT_3x2","ncblitter_e_NCBLIT_4x1","ncblitter_e_NCBLIT_8x1","ncblitter_e_NCBLIT_BRAILLE","ncblitter_e_NCBLIT_DEFAULT","ncblitter_e_NCBLIT_PIXEL","nccapabilities","nccell","nccell_duplicate","nccell_extended_gcluster","nccell_load","nccell_release","nccell_width","nccells_double_box","nccells_rounded_box","ncdirect","ncdirect_box","ncdirect_canget_cursor","ncdirect_canopen_images","ncdirect_canutf8","ncdirect_capabilities","ncdirect_check_pixel_support","ncdirect_clear","ncdirect_core_init","ncdirect_cursor_disable","ncdirect_cursor_down","ncdirect_cursor_enable","ncdirect_cursor_left","ncdirect_cursor_move_yx","ncdirect_cursor_pop","ncdirect_cursor_push","ncdirect_cursor_right","ncdirect_cursor_up","ncdirect_cursor_yx","ncdirect_detected_terminal","ncdirect_dim_x","ncdirect_dim_y","ncdirect_double_box","ncdirect_flush","ncdirect_get","ncdirect_getc","ncdirect_hline_interp","ncdirect_init","ncdirect_inputready_fd","ncdirect_off_styles","ncdirect_on_styles","ncdirect_palette_size","ncdirect_printf_aligned","ncdirect_putegc","ncdirect_putstr","ncdirect_raster_frame","ncdirect_readline","ncdirect_render_frame","ncdirect_render_image","ncdirect_rounded_box","ncdirect_set_bg_default","ncdirect_set_bg_palindex","ncdirect_set_bg_rgb","ncdirect_set_fg_default","ncdirect_set_fg_palindex","ncdirect_set_fg_rgb","ncdirect_set_styles","ncdirect_stop","ncdirect_stream","ncdirect_styles","ncdirect_styles_off","ncdirect_styles_on","ncdirect_styles_set","ncdirect_supported_styles","ncdirect_vline_interp","ncdirectf","ncdirectf_free","ncdirectf_free","ncdirectf_from_file","ncdirectf_from_file","ncdirectf_geom","ncdirectf_geom","ncdirectf_render","ncdirectf_render","ncdirectv","ncdplot","ncdplot_add_sample","ncdplot_create","ncdplot_destroy","ncdplot_plane","ncdplot_sample","ncdplot_set_sample","ncfadectx","ncfadectx_free","ncfadectx_iterations","ncfadectx_setup","ncfdplane","ncfdplane_callback","ncfdplane_create","ncfdplane_destroy","ncfdplane_done_cb","ncfdplane_options","ncfdplane_plane","ncinput","ncloglevel_e","ncloglevel_e_NCLOGLEVEL_DEBUG","ncloglevel_e_NCLOGLEVEL_ERROR","ncloglevel_e_NCLOGLEVEL_FATAL","ncloglevel_e_NCLOGLEVEL_INFO","ncloglevel_e_NCLOGLEVEL_PANIC","ncloglevel_e_NCLOGLEVEL_SILENT","ncloglevel_e_NCLOGLEVEL_TRACE","ncloglevel_e_NCLOGLEVEL_VERBOSE","ncloglevel_e_NCLOGLEVEL_WARNING","ncmenu","ncmenu_create","ncmenu_destroy","ncmenu_item","ncmenu_item_set_status","ncmenu_mouse_selected","ncmenu_nextitem","ncmenu_nextsection","ncmenu_offer_input","ncmenu_options","ncmenu_plane","ncmenu_previtem","ncmenu_prevsection","ncmenu_rollup","ncmenu_section","ncmenu_selected","ncmenu_unroll","ncmetric","ncmselector_item","ncmultiselector","ncmultiselector_create","ncmultiselector_destroy","ncmultiselector_offer_input","ncmultiselector_options","ncmultiselector_plane","ncmultiselector_selected","ncpalette","ncpalette_free","ncpalette_new","ncpalette_use","ncpile_bottom","ncpile_create","ncpile_rasterize","ncpile_render","ncpile_render_to_buffer","ncpile_render_to_file","ncpile_top","ncplane","ncplane_above","ncplane_abs_x","ncplane_abs_y","ncplane_abs_yx","ncplane_as_rgba","ncplane_at_cursor","ncplane_at_cursor_cell","ncplane_at_yx","ncplane_at_yx_cell","ncplane_base","ncplane_below","ncplane_boundlist","ncplane_box","ncplane_center_abs","ncplane_channels","ncplane_contents","ncplane_create","ncplane_cursor_move_rel","ncplane_cursor_move_yx","ncplane_cursor_yx","ncplane_destroy","ncplane_dim_yx","ncplane_dup","ncplane_erase","ncplane_erase_region","ncplane_fadein","ncplane_fadein_iteration","ncplane_fadeout","ncplane_fadeout_iteration","ncplane_format","ncplane_gradient","ncplane_greyscale","ncplane_highgradient","ncplane_highgradient_sized","ncplane_hline_interp","ncplane_home","ncplane_mergedown","ncplane_mergedown_simple","ncplane_move_above","ncplane_move_below","ncplane_move_bottom","ncplane_move_top","ncplane_move_yx","ncplane_new","ncplane_notcurses","ncplane_notcurses_const","ncplane_off_styles","ncplane_on_styles","ncplane_options","ncplane_parent","ncplane_parent_const","ncplane_pixelgeom","ncplane_polyfill_yx","ncplane_pulse","ncplane_putc_yx","ncplane_putchar_stained","ncplane_putegc_stained","ncplane_putegc_yx","ncplane_putnstr_aligned","ncplane_putnstr_yx","ncplane_putstr_aligned","ncplane_putstr_stained","ncplane_putstr_yx","ncplane_puttext","ncplane_putwegc_stained","ncplane_putwstr_stained","ncplane_qrcode","ncplane_reparent","ncplane_reparent_family","ncplane_resize","ncplane_resize_marginalized","ncplane_resize_maximize","ncplane_resize_realign","ncplane_resizecb","ncplane_rotate_ccw","ncplane_rotate_cw","ncplane_scrolling_p","ncplane_scrollup","ncplane_scrollup_child","ncplane_set_base","ncplane_set_base_cell","ncplane_set_bchannel","ncplane_set_bg_alpha","ncplane_set_bg_default","ncplane_set_bg_palindex","ncplane_set_bg_rgb","ncplane_set_bg_rgb8","ncplane_set_bg_rgb8_clipped","ncplane_set_channels","ncplane_set_fchannel","ncplane_set_fg_alpha","ncplane_set_fg_default","ncplane_set_fg_palindex","ncplane_set_fg_rgb","ncplane_set_fg_rgb8","ncplane_set_fg_rgb8_clipped","ncplane_set_resizecb","ncplane_set_scrolling","ncplane_set_styles","ncplane_set_userptr","ncplane_stain","ncplane_styles","ncplane_styles_off","ncplane_styles_on","ncplane_styles_set","ncplane_translate","ncplane_translate_abs","ncplane_userptr","ncplane_vline_interp","ncplane_vprintf_aligned","ncplane_vprintf_stained","ncplane_vprintf_yx","ncplane_x","ncplane_y","ncplane_yx","ncplot_options","ncprogbar","ncprogbar_create","ncprogbar_destroy","ncprogbar_options","ncprogbar_plane","ncprogbar_progress","ncprogbar_set_progress","ncreader","ncreader_clear","ncreader_contents","ncreader_create","ncreader_destroy","ncreader_move_down","ncreader_move_left","ncreader_move_right","ncreader_move_up","ncreader_offer_input","ncreader_options","ncreader_plane","ncreader_write_egc","ncreel","ncreel_add","ncreel_create","ncreel_del","ncreel_destroy","ncreel_focused","ncreel_next","ncreel_offer_input","ncreel_options","ncreel_plane","ncreel_prev","ncreel_redraw","ncreel_tabletcount","ncscale_e","ncscale_e_NCSCALE_NONE","ncscale_e_NCSCALE_NONE_HIRES","ncscale_e_NCSCALE_SCALE","ncscale_e_NCSCALE_SCALE_HIRES","ncscale_e_NCSCALE_STRETCH","ncselector","ncselector_additem","ncselector_create","ncselector_delitem","ncselector_destroy","ncselector_item","ncselector_nextitem","ncselector_offer_input","ncselector_options","ncselector_plane","ncselector_previtem","ncselector_selected","ncstats","ncstreamcb","ncstrwidth","ncsubproc","ncsubproc_createv","ncsubproc_createvp","ncsubproc_createvpe","ncsubproc_destroy","ncsubproc_options","ncsubproc_plane","nctab","nctab_cb","nctab_move","nctab_move_left","nctab_move_right","nctab_name","nctab_name_width","nctab_next","nctab_prev","nctab_set_cb","nctab_set_name","nctab_set_userptr","nctab_userptr","nctabbed","nctabbed_add","nctabbed_channels","nctabbed_content_plane","nctabbed_create","nctabbed_del","nctabbed_destroy","nctabbed_ensure_selected_header_visible","nctabbed_leftmost","nctabbed_next","nctabbed_options","nctabbed_plane","nctabbed_prev","nctabbed_redraw","nctabbed_rotate","nctabbed_select","nctabbed_selected","nctabbed_separator","nctabbed_separator_width","nctabbed_set_hdrchan","nctabbed_set_selchan","nctabbed_set_separator","nctabbed_set_sepchan","nctabbed_tabcount","nctablet","nctablet_ncplane","nctablet_plane","nctablet_userptr","nctree","nctree_create","nctree_destroy","nctree_focused","nctree_goto","nctree_item","nctree_next","nctree_offer_input","nctree_options","nctree_plane","nctree_prev","nctree_redraw","nctreecb","ncuplot","ncuplot_add_sample","ncuplot_create","ncuplot_destroy","ncuplot_plane","ncuplot_sample","ncuplot_set_sample","ncvgeom","ncvisual","ncvisual_at_yx","ncvisual_blitter_geom","ncvisual_decode","ncvisual_decode_loop","ncvisual_destroy","ncvisual_from_bgra","ncvisual_from_file","ncvisual_from_palidx","ncvisual_from_plane","ncvisual_from_rgb_loose","ncvisual_from_rgb_packed","ncvisual_from_rgba","ncvisual_inflate","ncvisual_media_defblitter","ncvisual_options","ncvisual_polyfill_yx","ncvisual_render","ncvisual_resize","ncvisual_resize_noninterpolative","ncvisual_rotate","ncvisual_set_yx","ncvisual_simple_streamer","ncvisual_stream","ncvisual_subtitle","ncvisual_subtitle_plane","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_aligned","new_bound","new_empty","new_empty","new_separator","next","nextitem","nextsection","nlink_t","notcurses","notcurses","notcurses_accountname","notcurses_at_yx","notcurses_bottom","notcurses_canbraille","notcurses_canchangecolor","notcurses_canfade","notcurses_canhalfblock","notcurses_canopen_images","notcurses_canopen_videos","notcurses_canquadrant","notcurses_cansextant","notcurses_cantruecolor","notcurses_canutf8","notcurses_check_pixel_support","notcurses_const","notcurses_core_init","notcurses_cursor_disable","notcurses_cursor_enable","notcurses_cursor_yx","notcurses_debug","notcurses_debug_caps","notcurses_detected_terminal","notcurses_drop_planes","notcurses_enter_alternate_screen","notcurses_get","notcurses_getc","notcurses_hostname","notcurses_init","notcurses_inputready_fd","notcurses_leave_alternate_screen","notcurses_lex_blitter","notcurses_lex_margins","notcurses_lex_scalemode","notcurses_linesigs_disable","notcurses_linesigs_enable","notcurses_mouse_disable","notcurses_mouse_enable","notcurses_options","notcurses_palette_size","notcurses_refresh","notcurses_render","notcurses_render_to_buffer","notcurses_render_to_file","notcurses_stats","notcurses_stats_alloc","notcurses_stats_reset","notcurses_stdplane","notcurses_stdplane_const","notcurses_stop","notcurses_str_blitter","notcurses_str_scalemode","notcurses_supported_styles","notcurses_top","notcurses_ucs32_to_utf8","notcurses_version","notcurses_version_components","off_styles","off_t","offer_input","offer_input","on_styles","opchannels","opchannels","opcolumns","optarg","opterr","optind","option","option","optopt","overflow_arg_area","palette_size","palette_size","parent","parent_const","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","perimeter","perimeter_double","perimeter_rounded","pid_t","pixelgeom","pixx","pixy","plane","plane","plane","planes","polyfill_yx","prev","previtem","prevsection","prime","progress","pulse","putc","putc_yx","putchar","putchar_yx","putln","putstr","putstr","putstr_aligned","putstr_stained","putstr_yx","putstrln","quadrants","quot","quot","quot","rangex","raster_frame","raster_max_ns","raster_min_ns","raster_ns","rasterize","rcellx","rcelly","readline","redraw","refresh","refreshes","reg_save_area","register_t","release","rem","rem","rem","render","render","render","render_bytes","render_frame","render_image","render_max_bytes","render_max_ns","render_min_bytes","render_min_ns","render_ns","render_to_buffer","render_to_file","renderfp","renders","reparent","reparent_family","reset","resize","resize","resize_marginalized","resize_maximize","resize_noninterpolative","resize_realign","resize_simple","resizecb","resizecb","restart_period","rgb","rollup","rotate","rotate_ccw","rotate_cw","rounded_box","rounded_box","rows","rows","rpixx","rpixy","s_addr","sa_data","sa_family","sa_family_t","sa_flags","sa_handler","sa_mask","sa_restorer","scalex","scaley","scaling","scrolling_p","secondary","secondary","section_channels","section_channels_mut","sectionchannels","sectioncount","sections","selchan","selected","selected","separator","sepchan","seqnum","set","set_base","set_base_cell","set_bchannel","set_bg_alpha","set_bg_alpha","set_bg_default","set_bg_default","set_bg_default","set_bg_not_default","set_bg_palindex","set_bg_palindex","set_bg_palindex","set_bg_rgb","set_bg_rgb","set_bg_rgb","set_bg_rgb8","set_bg_rgb8","set_bg_rgb8","set_channels","set_default","set_fchannel","set_fg_alpha","set_fg_alpha","set_fg_default","set_fg_default","set_fg_default","set_fg_not_default","set_fg_palindex","set_fg_palindex","set_fg_palindex","set_fg_rgb","set_fg_rgb","set_fg_rgb","set_fg_rgb8","set_fg_rgb8","set_fg_rgb8","set_not_default","set_progress","set_resizecb","set_scrolling","set_styles","set_yx","setup","sextants","shift","shortcut","shortcut","sig_atomic_t","sigaction","sigaction","sigaddset","sigdelset","sigemptyset","sigfillset","sigismember","signal","sigpending","sigprocmask","sigset_t","sigsuspend","simple_streamer","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size_t","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","socklen_t","sprixelbytes","sprixelelisions","sprixelemissions","ss_family","ssize_t","stain","stats","stats","stats_alloc","stats_reset","stderr","stdin","stdout","stdplane","stdplane_const","stop","stop","str_blitter","str_scalemode","str_styles","strdup","stylemask","styles","styles","styles_off","styles_off","styles_on","styles_on","styles_set","styles_set","subcount","subs","subtitle","supported_styles","suseconds_t","tabcb","tabletcb","tabletchan","tabletmask","tattrword","tchannels","term_dim_yx","termtype","time_t","timer_t","timespec","timezone","title","title","title","titlechannels","titlechannels","tm","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","transcolor","translate","translate_abs","true_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","tzname","u_int16_t","u_int32_t","u_int64_t","u_int8_t","uid_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulchannel","unroll","urchannel","use","useconds_t","userptr","utf8","va_list","valign","version","version_components","vline_interp","wchar_t","wctype_t","wide_left_p","wide_right_p","width","wint_t","with_all_args","with_all_args","with_all_args","with_all_options","with_alt","with_banners","with_ctrl","with_debug","with_flags","with_flags","with_flags","with_flags","with_flags_aligned","with_margins","with_options","with_options","with_options","with_options","with_options_bound","with_plane","with_shift","with_termsize","without_altscreen","without_plane","writeout_max_ns","writeout_min_ns","writeout_ns","writeouts","x","x","x","x","y","y","y","y","yx","NCMENU_OPTION_BOTTOM","NCMENU_OPTION_HIDING","NCPLOT_OPTION_DETECTMAXONLY","NCPLOT_OPTION_EXPONENTIALD","NCPLOT_OPTION_LABELTICKSD","NCPLOT_OPTION_NODEGRADE","NCPLOT_OPTION_VERTICALI","NCPROGBAR_OPTION_RETROGRADE","NCREADER_OPTION_CURSOR","NCREADER_OPTION_HORSCROLL","NCREADER_OPTION_NOCMDKEYS","NCREADER_OPTION_VERSCROLL","NCREEL_OPTION_CIRCULAR","NCREEL_OPTION_INFINITESCROLL","NcMenu","NcMenuItem","NcMenuOptions","NcMenuSection","NcMultiSelector","NcMultiSelectorItem","NcMultiSelectorOptions","NcPlotF64","NcPlotOptions","NcPlotU64","NcProgBar","NcProgBarOptions","NcReader","NcReaderOptions","NcReel","NcReelOptions","NcSelector","NcSelectorItem","NcSelectorOptions","NcTablet","NcTree","NcTreeItem","NcTreeItemCb","NcTreeItemCbUnsafe","NcTreeOptions","destroy","destroy","destroy","focused","header_channels","header_channels_mut","item_set_status","mouse_selected","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_separator","next","nextitem","nextsection","offer_input","offer_input","plane","plane","plane","prev","previtem","prevsection","progress","redraw","rollup","section_channels","section_channels_mut","selected","set_progress","unroll","with_all_args","with_all_args","with_options","with_options"],"q":["libnotcurses_syslibnotcurses_sys::ffilibnotcurses_sys::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Intended to be passed into the CFile::open method. It …","Intended to be passed into the CFile::open method. It …","See [NcFile]. The <code>libc</code> crate expects this type of <code>*FILE</code> …","See [NcFile]. Notcurses functions expects this type of …","Center alignment within an [<code>NcPlane</code>][crate::NcPlane] or …","Left alignment within an [<code>NcPlane</code>][crate::NcPlane] or …","Right alignment within an [<code>NcPlane</code>][crate::NcPlane] or …","Do not align an [<code>NcPlane</code>][crate::NcPlane] or terminal.","If this bit is set, we are <em>not</em> using the default …","Extract these bits to get the background alpha mask ([…","If this bit <em>and</em> [<code>NCALPHA_BGDEFAULT_MASK</code>] are set, we’re …","Extract these bits to get the background [<code>NcRgb</code>][…","[<code>NcAlphaBits</code>] bits indicating [<code>NcCell</code>]’s foreground or …","If this bit is set, we are <em>not</em> using the default …","Extract these bits to get the foreground alpha mask ([…","If this bit <em>and</em> [<code>NCALPHA_FGDEFAULT_MASK</code>] are set, we’re …","Extract these bits to get the foreground [<code>NcRgb</code>][…","[<code>NcAlphaBits</code>] bits indicating [<code>NcCell</code>]’s foreground …","[<code>NcAlphaBits</code>] bits indicating [<code>NcCell</code>]’s foreground or …","[<code>NcAlphaBits</code>] bits indicating [<code>NcCell</code>]’s foreground or …","[<code>NcBlitter</code>] mode using: space, compatible with ASCII","[<code>NcBlitter</code>] mode using: halves + 1x1 (space) ▄▀","[<code>NcBlitter</code>] mode using: quadrants + 2x1 ▗▐ …","[<code>NcBlitter</code>] mode using: sextants …","[<code>NcBlitter</code>] mode using: four vertical levels █▆▄▂","[<code>NcBlitter</code>] mode using: eight vertical levels …","[<code>NcBlitter</code>] mode using: 4 rows, 2 cols (braille) …","[<code>NcBlitter</code>] mode where the blitter is automatically chosen","Sixel/Pixel mode","[NcBoxMask] corner mask to control the drawing of boxes …","The number of bits [NCBOXCORNER_MASK] is shifted in […","[NcBoxMask] bottom gradient mask.","[NcBoxMask] left gradient mask.","[NcBoxMask] right gradient mask.","[NcBoxMask] top gradient mask.","[NcBoxMask] bottom border mask.","[NcBoxMask] left border mask.","[NcBoxMask] right border mask.","[NcBoxMask] top border mask.","Extract these bits to get a channel’s alpha value","Flag that avoids placing the terminal into cbreak mode …","Flag that avoids calling setlocale(LC_ALL, NULL)","Flag that inhibits registration of the SIGINT, SIGSEGV, …","Flag that enables showing detailed information.","Flag that enables showing all diagnostics (equivalent to […","backspace (sometimes)","","","","","","","scrollwheel up","scrollwheel down","","","","","","the most truly neutral of keypresses","","“clear-screen or erase”","","","","down + left on keypad","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","generated interally in response to SIGWINCH","","","","","","up + left on keypad","","","this is honestly a bit much","we can’t keep doin’ this, but we can do other things","we’re hanging around, but we’ve had a horrible fault","“detailed information","print diagnostics immediately related to crashing","default. print nothing once fullscreen service begins","there’s probably a better way to do what you want","“detailed information","you probably don’t want what’s happening to happen","","","","","","","Do not call setlocale()","Do not enter alternate mode.","Do not try to clear any preexisting bitmaps.","Do not modify the font.","Do not handle SIG{ING, SEGV, ABRT, QUIT}.","Do not handle SIGWINCH.","Initialize the standard plane’s virtual cursor to match …","Do not print banners.","","Horizontal alignment relative to the parent plane. Use …","Maximize relative to the parent plane, modulo the …","Vertical alignment relative to the parent plane. Use …","ERROR value, for the functions that return an [<code>NcIntResult</code>…","MAX value, for the functions that return [<code>NcIntResult</code>].","OK value, for the functions that return [<code>NcIntResult</code>].","Maintains original size.","Maintains original size, admitting high-resolution …","Maintains aspect ratio.","Maintains aspect ratio, admitting high-resolution blitters…","Throws away aspect ratio.","","","","","","","","","Treats as transparent the color specified in the …","Uses [<code>NCALPHA_BLEND</code>][crate::NCALPHA_BLEND] with visual.","allows you to indicate that the n field of …","X is an alignment, not absolute.","Fails rather than gracefully degrade. See [NcBlitter].","Uses non-interpolative scaling.","Y is an alignment, not absolute.","The full <strong>notcurses</strong> context.","Alignment within a plane or terminal. …","2 bits of alpha (surrounded by context dependent bits). …","The blitter mode to use for rasterizing an [<code>NcVisual</code>].","Controls the drawing of borders, gradients and corners.","Capabilities, derived from terminfo, environment …","A coordinate on an [<code>NcPlane</code>][crate::NcPlane] storing 128 …","32 bits of context-dependent info containing RGB + 2 bits …","Enables the [<code>NcChannel</code>] methods.","64 bits containing a foreground and background [<code>NcChannel</code>]","Enables the [<code>NcChannels</code>] methods.","8 bits representing an R/G/B color component or an alpha …","Represents a dimension in rows or columns. Can’t be …","Minimal notcurses instance for styling text.","A type alias of [<code>NcVisual</code>] (NcDirect <em><strong>F</strong>rame</em>) intended to …","Flags (options) for [<code>NcDirect</code>]","An <code>u8</code> always at zero, part of the [<code>NcCell</code>] struct","The error type for the Rust methods API.","Called for each fade iteration on the NcPlane.","Context for a palette fade operation","I/O wrapper to dump file descriptor to [<code>NcPlane</code>]","Options struct for [<code>NcFdPlane</code>]","A wrapper struct around <code>libc::FILE</code>","Reads and decodes input events","The [<code>i32</code>] value used to return errors by the underlying C …","Log level for [<code>NcOptions</code>]","Represents an offset in rows or columns. Can be negative.","Options struct for [<code>Notcurses</code>]","NcPalette structure consisting of an array of 256 […","8-bit value used for indexing into a [<code>NcPalette</code>]","An ABGR pixel.","Contains the pixel geometry information as returned by the…","Enables the [NcPixel] methods.","Fundamental drawing surface.","Options struct for [<code>NcPlane</code>]","A callback function called when an [NcPlane] is resized.","Enables the [NcResizeCb] methods.","The unsafe version of [NcResizeCb] expected by the …","The result type for the Rust methods API.","24 bits broken into 3x 8bpp channels.","32 bits broken into 3x 8bpp RGB channels + 8ppp alpha.","Indicates how to scale an [<code>NcVisual</code>] during rendering.","notcurses runtime statistics","An <code>u16</code> of <code>NCSTYLE_*</code> boolean styling attribute flags","Enables the [<code>NcStyle</code>] methods.","","Describes all geometries of an [<code>NcVisual</code>] ncvisual–both …","A visual bit of multimedia.","Options struct for [<code>NcVisual</code>]","Intended to be passed into the CFile::open method. It …","Intended to be passed into the CFile::open method. It …","Intended to be passed into the CFile::open method. It …","Intended to be passed into the CFile::open method. It …","Intended to be passed into the CFile::open method. It …","","Extracts the 8-bit alpha [<code>NcComponent</code>] from an ABGR pixel.","Returns the <code>NcPlane</code> above this one, or None if already at …","Gets the origin of this plane relative to its pile, in …","Gets the origin of this plane relative to its pile, in …","Gets the origin of this plane relative to its pile.","","Adds the <code>other_style</code> to the current style.","Returns the offset into <code>availcols</code> at which <code>cols</code> ought be …","","Gets the [<code>NcAlphaBits</code>].","Returns the file pointer in the format expected by the […","Returns the file pointer in the format expected by …","Creates an RGBA flat array from the selected region of …","Retrieves the current contents of the [<code>NcCell</code>] under the …","Retrieves the current contents of the [<code>NcCell</code>] under the …","Retrieves the current contents of the specified [NcCell][…","Retrieves the current contents of the specified [<code>NcCell</code>], …","Gets the specified pixel from this NcVisual.","Retrieves the current contents of the specified [<code>NcCell</code>] …","","","Gets the blue [<code>NcComponent</code>].","Extracts the 8 bit blue [<code>NcComponent</code>] from an ABGR pixel.","Extracts this <code>NcPlane</code>’s base [<code>NcCell</code>].","","Extracts the background [<code>NcChannel</code>].","Gets the background [<code>NcChannel</code>] from an [NcPlane].","","Combines this [<code>NcChannel</code>] as background, with another as …","Returns the <code>NcPlane</code> below this one, or None if already at …","","Extracts the background [<code>NcAlphaBits</code>] (shifted to LSBs).","Gets the background [<code>NcAlphaBits</code>].","Gets the background [<code>NcAlphaBits</code>] for this <code>NcPlane</code>, …","","Gets the background blue [<code>NcComponent</code>].","Is this <code>NcPlane</code>’s background using the “default …","","Is the background [<code>NcChannel</code>] using the “default …","Is the background using the “default background color”…","","Gets the background green [<code>NcComponent</code>].","Gets the [<code>NcPaletteIndex</code>] of the background [<code>NcChannel</code>].","","Is the background [<code>NcChannel</code>] using an [<code>NcPaletteIndex</code>] …","Is the background of using an [indexed][NcPaletteIndex] […","","Gets the background red [<code>NcComponent</code>].","","Gets the background [<code>NcRgb</code>] (shifted to LSBs).","Gets the background [<code>NcRgb</code>].","Gets the background [<code>NcRgb</code>] from this <code>NcPlane</code>, shifted to …","","Gets the background RGB [<code>NcComponent</code>]s.","Gets the three background RGB [<code>NcComponent</code>]s (r, g, b).","Gets the background RGB [<code>NcComponent</code>]s from this <code>NcPlane</code>.","","Sets the background blue [<code>NcComponent</code>], and returns the …","","Sets the background green [<code>NcComponent</code>], and returns the …","","Sets the background red [<code>NcComponent</code>], and returns the …","","","","","","","Returns the bottommost [<code>NcPlane</code>] on the standard pile, of …","Returns the bottommost <code>NcPlane</code> of the current pile.","Draws a box with its upper-left corner at the current …","Draws a box with its upper-left corner at the current …","Draws a box with its upper-left corner at the current …","Can we reliably use Unicode braille?","Returns true if we can reliably use Unicode Braille.","Can we set the “hardware” palette?","Returns true if it’s possible to set the “hardware” …","Can we fade?","Returns true if fading is possible.","Is there support for acquiring the cursor’s current …","Can we reliably use Unicode halfblocks?","Returns true if we can reliably use Unicode half blocks.","Can we load images?","Returns true if loading images is possible.","Can we load videos?","Returns true if loading videos is possible.","Can we reliably use Unicode quadrants?","Returns true if we can reliably use Unicode quadrant …","Can we reliably use Unicode sextants?","Returns true if we can reliably use Unicode 13 sextants.","Can we directly specify RGB values per cell, or only use …","Returns true if it’s possible to directly specify RGB …","Is our encoding UTF-8?","Returns true if the encoding is UTF-8.","Returns the [<code>NcCapabilities</code>].","","","<em>C style function: [ncplane_center_abs()][…","Returns the [<code>NcChannels</code>] of this <code>NcCell</code>.","Gets the current [<code>NcChannels</code>] from this <code>NcPlane</code>.","Checks for pixel support.","Checks for pixel support.","Clears the screen.","","","","","Return the cols of this <code>NcPlane</code>.","","Combines two [<code>NcChannel</code>]s into an [<code>NcChannels</code>].","Returns true if the two cells have distinct <code>EGC</code>s, …","Creates a flat string from the <code>EGC</code>’s of the selected …","Returns the current position in the file.","Disables the terminal’s cursor, if supported.","Disables the terminal’s cursor, if supported.","Moves the cursor down any number of rows.","Enables the terminal’s cursor, if supported.","Enables the terminal’s cursor, if supported, placing it …","Moves the cursor to 0, 0.","Moves the cursor left any number of columns.","Moves the cursor the number of columns specified (forward …","Moves the cursor relatively, the number of rows and …","Moves the cursor the number of rows specified (forward or …","Moves the cursor to the specified column within this …","Moves the cursor to the specified row within this <code>NcPlane</code>.","Moves the cursor to the specified position within this …","Pops the cursor location from the terminal’s stack.","Pushes the cursor location to the terminal’s stack.","Moves the cursor right any number of columns.","Sets the cursor to the specified column <code>x</code>.","Sets the cursor to the specified row <code>y</code>.","Sets the cursor to the specified row <code>y</code>, column <code>x</code>.","Moves the cursor up any number of rows.","Returns the current column of the cursor within this …","Returns the current row of the cursor within this <code>NcPlane</code>.","Gets the cursor (y, x) position, when supported.","Returns the current position of the cursor within this …","Dumps notcurses state to the supplied <code>debugfp</code>.","Extracts the next frame from the NcVisual.","Extracts the next frame from the NcVisual, ala [decode][…","","New <code>NcChannel</code>, set to black and using the “default color…","","","Is this <code>NcChannel</code> using the “default color” rather …","","Destroys this <code>NcPlane</code>.","Destroys this NcVisual.","Returns the name of the detected terminal.","Returns the name of the detected terminal.","Gets the current number of columns.","Return the columns of this <code>NcPlane</code>.","Gets the current number of rows.","Return the rows of this <code>NcPlane</code>.","Gets the current number of rows and columns.","Returns the dimensions of this <code>NcPlane</code>.","NcCell.[load_box()][NcCell#method.box] with the double …","NcDirect.[box()][NcDirect#method.box] with the double …","NcPlane.[box()][NcPlane#method.box] with the double …","<em>C style function: [ncplane_double_box_sized()][…","Does this NcCell contain a wide codepoint?","Ensures the file stream is closed before abandoning the …","Destroys all [<code>NcPlane</code>]s other than the stdplane.","Duplicates this <code>NcPlane</code>.","Duplicate this <code>NcCell</code> into another one.","Returns the <code>EGC</code> of the <code>NcCell</code>.","Erases every [<code>NcCell</code>] in this <code>NcPlane</code>, resetting all …","Saves the [<code>NcStyle</code>] and the [<code>NcChannels</code>], and returns the …","Fades this <code>NcPlane</code> in, over the specified time, calling …","Fades in through ‘iter’ iterations, where ‘iter’ <…","Fades this <code>NcPlane</code> out, over the specified time, calling …","Fades out through ‘iter’ iterations, where ‘iter’ …","","Extracts the foreground [<code>NcChannel</code>].","Gets the foreground [<code>NcChannel</code>] from an [NcPlane].","","Combines this [<code>NcChannel</code>] as foreground, with another as …","Rust FFI bindings, automatically generated with bindgen.","","Extracts the foreground [<code>NcAlphaBits</code>] (shifted to LSBs).","Gets the foreground [<code>NcAlphaBits</code>].","Gets the foreground [<code>NcAlphaBits</code>] from this <code>NcPlane</code>, …","","Gets the foreground blue [<code>NcComponent</code>].","Is this <code>NcPlane</code>’s foreground using the “default …","","Is the foreground [<code>NcChannel</code>] using the “default …","Is the background using the “default background color”…","","Gets the foreground green [<code>NcComponent</code>].","Gets the [<code>NcPaletteIndex</code>] of the foreground [<code>NcChannel</code>].","","Is the foreground [<code>NcChannel</code>] using an [<code>NcPaletteIndex</code>] …","Is the foreground of using an [indexed][NcPaletteIndex] […","","Gets the foreground red [<code>NcComponent</code>].","","Gets the foreground [<code>NcRgb</code>] (shifted to LSBs).","Gets the foreground [<code>NcRgb</code>].","Gets the foreground [<code>NcRgb</code>] from this <code>NcPlane</code>, shifted to …","","Gets the foreground RGB [<code>NcComponent</code>]s.","Gets the three foreground RGB [<code>NcComponent</code>]s (r, g, b).","Gets the foreground RGB [<code>NcComponent</code>]s from this <code>NcPlane</code>.","","Sets the foreground blue [<code>NcComponent</code>], and returns the …","","Sets the foreground green [<code>NcComponent</code>], and returns the …","","Sets the foreground red [<code>NcComponent</code>], and returns the …","Forces a flush.","","","","","Sets the given style throughout the specified region, …","Releases the resources associated.","Frees this <code>NcPalette</code>.","","","","Like [from_rgba][NcVisual#method.from_rgba], but ‘bgra…","New <code>NcCell</code>, expects an [<code>NcPlane</code>] and a [<code>char</code>].","New <code>NcCell</code>, expects a 7-bit [<code>char</code>].","Opens a visual at <code>file</code>, extracts the codec and parameters …","<code>NcFile</code> constructor from a file produced by the libc crate","<code>NcFile</code> constructor from a file produced by notcurses","Promotes an NcPlane to an NcVisual.","","","New <code>NcChannel</code>, expects [<code>NcRgb</code>].","New <code>NcChannels</code>, expects two separate [<code>NcRgb</code>]s for the …","","","New <code>NcChannel</code>, expects three RGB [<code>NcComponent</code>] components.","New <code>NcChannels</code>, expects three RGB [<code>NcComponent</code>] components…","","","New <code>NcChannel</code>, expects three RGB [<code>NcComponent</code>] components …","New <code>NcChannels</code>, expects three RGB [<code>NcComponent</code>]s and […","","New <code>NcChannel</code>, expects three RGB [<code>NcComponent</code>]s.","","New <code>NcChannels</code>, expects three RGB [<code>NcComponent</code>] …","","","New <code>NcChannel</code>, expects [<code>NcRgb</code>] & [<code>NcAlphaBits</code>].","New <code>NcChannels</code>, expects two separate [<code>NcRgb</code>] & […","","New <code>NcChannels</code>, expects [<code>NcRgb</code>] & [<code>NcAlphaBits</code>] for both …","","New <code>NcChannels</code>, expects a single [<code>NcRgb</code>] for both …","Like [<code>from_rgba</code>][NcVisual#method.from_rgba], but the …","Like [<code>from_rgba</code>][NcVisual#method.from_rgba], but the …","Prepares an NcVisual, and its underlying NcPlane, based …","New <code>NcCell</code>, expects an [<code>NcPlane</code>] and a &[<code>str</code>].","","","","Gets the green [<code>NcComponent</code>].","Extracts the 8 bit green [<code>NcComponent</code>] from an ABGR pixel.","Gets the size and ratio of NcVisual pixels to output …","Extracts the [<code>NcComponent</code>]s from an [<code>NcChannel</code>] entry …","Returns the [<code>NcComponent</code>]s from the [<code>NcChannel</code>] in this …","Returns a [char] representing a single unicode point.","Returns a [char] representing a single unicode point.","<em>C style function: [ncdirect_getc_blocking()][…","Blocks until a codepoint or special key is read, or until …","<em>C style function: [ncdirect_getc_nblock()][…","If no event is ready, returns 0.","Draws a gradient with its upper-left corner at the …","Draw a gradient with its upper-left corner at the current …","Converts this <code>NcPlane</code>’s content to greyscale.","Returns the column at which <code>cols</code> columns ought start in …","","Returns true if the current style has included the …","Draws a high-resolution gradient using upper blocks and …","[<code>gradient_sized</code>][NcPlane#method.gradient_sized] meets […","Draws horizontal lines using the specified [NcChannels]s, …","Initializes (zeroes out) this <code>NcCell</code>.","Get a file descriptor suitable for input event poll()ing.","Gets a file descriptor suitable for input event poll()ing.","[NcIntResult].","","","","Returns the number of iterations through which will fade.","Returns an [<code>NcBlitter</code>] from a string representation.","Lexes a margin argument according to the standard …","Returns an [<code>NcScale</code>] from a string representation.","Returns an [<code>NcStyle</code>] from a string representation.","Disables signals originating from the terminal’s line …","Restores signals originating from the terminal’s line …","Breaks the UTF-8 string in <code>egc</code> down, setting up this …","Loads up six cells with the <code>EGC</code>s necessary to draw a box.","","","Gets the default media (not plot) blitter for this …","Merge the <code>NcPlane</code> <code>source</code> down onto the current <code>NcPlane</code> (…","Merges <code>source</code> down onto this <code>NcPlane</code>.","Disables mouse events.","Enable the mouse in “button-event tracking” mode with …","Relocates this <code>NcPlane</code> above the <code>above</code> NcPlane, in the …","Relocates this <code>NcPlane</code> below the <code>below</code> NcPlane, in the …","Relocates this <code>NcPlane</code> at the bottom of the z-buffer.","Moves this <code>NcPlane</code> relative to its current location.","Relocates this <code>NcPlane</code> at the top of the z-buffer.","Moves this <code>NcPlane</code> relative to the standard plane, or the …","","Same as ncblit_rgba(), but for BGRx.","Supply an alpha value [0..255] to be applied throughout. …","Supply an alpha value [0..255] to be applied throughout.","Blit a flat array ‘data’ of RGBA 32-bit values to the …","Can we set the “hardware” palette?","Extracts the background [<code>NcAlphaBits</code>] from an [<code>NcCell</code>] …","Is the background [<code>NcChannel</code>] of this [<code>NcCell</code>] using the …","Gets the [<code>NcPaletteIndex</code>] of the background [<code>NcChannel</code>] …","Is the background [<code>NcChannel</code>] of this [<code>NcCell</code>] using an […","Gets the background [<code>NcRgb</code>] from an [<code>NcCell</code>] (shifted to …","Gets the background [<code>NcComponent</code>]s of an [<code>NcCell</code>], and …","Returns the number of columns occupied by ‘c’. see …","Does the [<code>NcCell</code>] contain an East Asian Wide codepoint?","Duplicate ‘c’ into ‘targ’; both must be/will be …","return a pointer to the NUL-terminated EGC referenced by …","Saves the [<code>NcStyle</code>] and the [<code>NcChannels</code>], and returns the …","Extracts the foreground [<code>NcAlphaBits</code>] from an [<code>NcCell</code>] …","Is the foreground [<code>NcChannel</code>] of this [<code>NcCell</code>] using the …","Gets the [<code>NcPaletteIndex</code>] of the foreground [<code>NcChannel</code>] …","Is the foreground [<code>NcChannel</code>] of this [<code>NcCell</code>] using an […","Gets the foreground [<code>NcRgb</code>] from an [<code>NcCell</code>] (shifted to …","Gets the foreground [<code>NcComponent</code>]s of an [<code>NcCell</code>], and …","Initializes (zeroes out) an [<code>NcCell</code>].","Breaks the UTF-8 string in ‘gcluster’ down, setting …","Removes the specified [<code>NcStyle</code>] bits from an [<code>NcCell</code>]’s …","Adds the specified [<code>NcStyle</code>] bits to an [<code>NcCell</code>]’s …","Same as [<code>nccell_load</code>][crate::nccell_load], plus blasts …","Release resources held by the nccell ‘c’.","Sets the background [<code>NcAlphaBits</code>] of an [<code>NcCell</code>].","Indicates to use the “default color” for the …","Sets an [<code>NcCell</code>]’s background [<code>NcPaletteIndex</code>].","Sets the background [<code>NcRgb</code>] of an [<code>NcCell</code>], and marks it …","Sets the background [<code>NcComponent</code>]s of the [<code>NcCell</code>], and …","Sets the foreground [<code>NcAlphaBits</code>] of an [<code>NcCell</code>].","Indicates to use the “default color” for the …","Sets an [<code>NcCell</code>]’s foreground [<code>NcPaletteIndex</code>].","Sets the foreground [<code>NcRgb</code>] of an [<code>NcCell</code>], and marks it …","Sets the foreground [<code>NcComponent</code>]s of the [<code>NcCell</code>], and …","Sets <em>just</em> the specified [<code>NcStyle</code>] bits for an [<code>NcCell</code>], …","Copies the UTF8-encoded <code>EGC</code> out of the [<code>NcCell</code>], whether …","Extracts the [<code>NcStyle</code>] bits from an [<code>NcCell</code>].","Is this the left half of a wide character?","Is this the right half of a wide character?","","Returns true if the two cells are distinct <code>EGC</code>s, …","","Loads up six cells with the <code>EGC</code>s necessary to draw a box.","","Gets the [<code>NcAlphaBits</code>] from an [<code>NcChannel</code>].","Gets the blue [<code>NcComponent</code>] from an [<code>NcChannel</code>].","Is this [<code>NcChannel</code>] using the “default color” rather …","Gets the green [<code>NcComponent</code>] from an [<code>NcChannel</code>].","Is this [<code>NcChannel</code>] using palette-indexed color rather …","Gets the red [<code>NcComponent</code>] from an [<code>NcChannel</code>].","Gets the [<code>NcRgb</code>] of an [<code>NcChannel</code>].","Gets the three RGB [<code>NcComponent</code>]s from an [<code>NcChannel</code>], …","Sets the [<code>NcRgb</code>] of an [<code>NcChannel</code>], and marks it as NOT …","Sets the [<code>NcAlphaBits</code>] of an [<code>NcChannel</code>].","Sets the blue [<code>NcComponent</code>] of an [<code>NcChannel</code>], and …","Marks an [<code>NcChannel</code>] as using its “default color”, …","Sets the green [<code>NcComponent</code>] of an [<code>NcChannel</code>], and …","Marks an [<code>NcChannel</code>] as NOT using its “default color”,…","Sets the red [<code>NcComponent</code>] of an [<code>NcChannel</code>], and returns …","Sets the three RGB [<code>NcComponent</code>]s an [<code>NcChannel</code>], and …","Extracts the background [<code>NcChannel</code>] from a [<code>NcChannels</code>].","Gets the background [<code>NcAlphaBits</code>] from an [<code>NcChannels</code>], …","Is the background using the “default background color”…","Is the background of an [<code>NcChannels</code>] using an [indexed][…","Gets the background [<code>NcRgb</code>] from an [<code>NcChannels</code>], shifted …","Gets the three background RGB [<code>NcComponent</code>]s from an […","Combines two [<code>NcChannel</code>]s into an [<code>NcChannels</code>].","Extracts the foreground [<code>NcChannel</code>] from an [<code>NcChannels</code>].","Gets the foreground [<code>NcAlphaBits</code>] from an [<code>NcChannels</code>], …","Is the foreground of an [<code>NcChannels</code>] using the “default …","Is the foreground of an [<code>NcChannels</code>] using an [indexed][…","Gets the foreground [<code>NcRgb</code>] from an [<code>NcChannels</code>], shifted …","Gets the three foreground RGB [<code>NcComponent</code>]s from an […","Sets the background [<code>NcChannel</code>] of an [<code>NcChannels</code>].","Sets the [<code>NcAlphaBits</code>] of the background [<code>NcChannel</code>] of …","Marks the background of an [<code>NcChannels</code>] as using its “…","Marks the background of an [<code>NcChannels</code>] as NOT using its …","Sets the background of an [<code>NcChannels</code>] as using an […","Sets the foreground [<code>NcRgb</code>] of an [<code>NcChannels</code>], and marks …","Sets the three background RGB [<code>NcComponent</code>]s of an […","Marks both the foreground and background of an [<code>NcChannels</code>…","Sets the foreground [<code>NcChannel</code>] of an [<code>NcChannels</code>].","Sets the [<code>NcAlphaBits</code>] of the foreground [<code>NcChannel</code>] of …","Marks the foreground of an [<code>NcChannels</code>] as using its “…","Marks the foreground of an [<code>NcChannels</code>] as NOT using its …","Sets the foreground of an [<code>NcChannels</code>] as using an […","Sets the foreground [<code>NcRgb</code>] of an [<code>NcChannels</code>], and marks …","Sets the three foreground RGB [<code>NcComponent</code>]s of an […","Marks both the foreground and background of an [<code>NcChannels</code>…","Draw a box with its upper-left corner at the current …","Can we reliably use Unicode Braille?","Can we set the “hardware” palette? Requires the “ccc…","Can we fade? Fading requires either the “rgb” or “…","Is there support for acquiring the cursor’s current …","Can we reliably use Unicode halfblocks?","Can we load images? This requires being built against …","Can we load videos? This requires being built against …","Can we reliably use Unicode quadrants?","Can we reliably use Unicode 13 sextants?","Can we directly specify RGB values per cell, or only use …","Is our encoding UTF-8? Requires LANG being set to a UTF8 …","Returns the detected [<code>NcCapabilities</code>].","Can we blit pixel-accurate bitmaps?","Clear the screen.","The same as ncdirect_init(), but without any multimedia …","","","","","Move the cursor in direct mode. -1 to retain current …","","Push or pop the cursor location to the terminal’s …","","","Get the cursor position, when supported. This requires …","Capabilites","Get the current number of columns/rows.","","ncdirect_box() with the double box-drawing characters","Force a flush. Returns 0 on success, -1 on failure.","Deprecated, to be removed for ABI3. Use ncdirect_get() in …","‘input’ may be NULL if the caller is uninterested in …","If no event is ready, returns 0.","Draws horizontal lines using the specified [NcChannels]s, …","Initialize a direct-mode Notcurses context on the …","Get a file descriptor suitable for input event poll()ing. …","","","Returns the number of simultaneous colors claimed to be …","Output the string |utf8| according to the channels …","Takes the result of ncdirect_render_frame() and writes it …","Read a (heap-allocated) line of text using the Readline …","Render an image using the specified blitter and scaling, …","Display an image using the specified blitter and scaling. …","ncdirect_box() with the rounded box-drawing characters","","","","Sets the background [NcComponent] components.","","","Direct mode. This API can be used to colorize and stylize …","Sets the foreground [NcComponent] components.","ncplane_styles_*() analogues","Release ‘nc’ and any associated resources. 0 on …","Load successive frames from a file, invoking ‘streamer…","","Returns a 16-bit bitmask of supported curses-style …","Draws horizontal lines using the specified [NcChannels]s, …","Free a ncdirectf returned from ncdirectf_from_file().","Frees a [<code>NcDirectF</code>] returned from ncdirectf_from_file().","Load media from disk, but do not yet render it …","Loads media from disk, but do not yet renders it …","Having loaded the frame ‘frame’, get the geometry of …","Having loaded the <code>frame</code>, get the geometry of a potential …","Same as ncdirect_render_frame(), except ‘frame’ must …","Same as <code>NcDirect.render_frame()</code>, except <code>frame</code> must …","","","","","","","Release the resources associated with ‘nctx’.","Return the number of iterations through which ‘nctx’ …","Rather than the simple ncplane_fade{in/out}(), …","Create an ncfdplane around the fd ‘fd’. Consider this …","","","Compares two ncinput structs for data equality by doing a …","Are all the modifiers off (alt, control, shift)?","Is the event a synthesized mouse event?","Is this [char] a Supplementary Private Use Area-B …","Create a menu with the specified options, bound to the …","Destroy a menu created with ncmenu_create().","Disable or enable a menu item. Returns 0 if the item was …","Return the item description corresponding to the mouse …","Move to the previous/next item within the currently …","Unroll the previous/next section (relative to current …","Offer the input to the ncmenu. If it’s relevant, this …","Return the ncplane backing this ncmenu.","","","Roll up any unrolled menu section, and hide the menu if …","Return the selected item description, or NULL if no …","Unroll the specified menu section, making the menu …","Takes an arbitrarily large number, and prints it into a …","","Destroy the ncmultiselector.","Offer the input to the ncmultiselector. If it’s …","Return a reference to the ncmultiselector’s underlying …","Return selected vector. An array of bools must be …","Free the palette store ‘p’.","Extracts the RGB [<code>NcComponent</code>]s from an [<code>NcChannel</code>] entry …","Create a new palette store. It will be initialized with …","Sets the [<code>NcRgb</code>] value of the [<code>NcChannel</code>] entry inside an …","Sets the RGB [<code>NcComponent</code>]s of the [<code>NcChannel</code>] entry …","Attempt to configure the terminal with the provided …","Return the bottommost plane of the pile containing ‘n’…","Same as ncplane_create(), but creates a new pile. The …","Make the physical screen match the last rendered frame …","Renders the pile of which ‘n’ is a part. Rendering …","Return the topmost plane of the pile containing ‘n’.","Constructs a libav-compatible ABGR pixel from RGB […","Extracts the 8-bit alpha [<code>NcComponent</code>] from an ABGR pixel.","Extracts the 8 bit blue [<code>NcComponent</code>] from an ABGR pixel.","Extracts the 8 bit green [<code>NcComponent</code>] from an ABGR pixel.","Extracts the 8 bit red [<code>NcComponent</code>] from an ABGR pixel.","Sets the 8-bit alpha [<code>NcComponent</code>] of an ABGR pixel.","Sets the 8-bit blue [<code>NcComponent</code>] of an ABGR pixel.","Sets the 8-bit green [<code>NcComponent</code>] of an ABGR pixel.","Sets the 8-bit red [<code>NcComponent</code>] of an ABGR pixel.","Sets the RGB [<code>NcComponent</code>]s of an ABGR pixel.","Return the plane above this one, or NULL if this is at …","","","Get the origin of plane ‘n’ relative to its pile. …","Create an RGBA flat array from the selected region of the …","Retrieve the current contents of the cell under the …","Retrieve the current contents of the cell under the …","Retrieve the current contents of the specified cell. The …","Retrieve the current contents of the specified cell into …","Extract the ncplane’s base nccell into ‘c’. The …","Gets the background [NcChannel] from an [NcPlane].","Return the plane below this one, or NULL if this is at …","Gets the background [NcAlphaBits] from the [NcPlane], …","Is the plane’s background using the “default …","Gets the background [NcRgb] from an [NcPlane], shifted to …","Gets the background RGB [NcComponent]s from an [NcPlane], …","Draw a box with its upper-left corner at the current …","Draws a box with its upper-left corner at the current …","","Gets the [NcChannels] of an [NcPlane].","Create a flat string from the EGCs of the selected region …","Create a new ncplane bound to plane ‘n’, at the …","Move the cursor to the specified position (the cursor …","Get the current position of the cursor within n. y and/or …","Destroy the specified ncplane. None of its contents will …","Gets the columns of the [NcPlane].","Gets the rows of the [NcPlane].","Return the dimensions of this ncplane.","<em>Method: NcPlane.[double_box()][NcPlane#method.double_box].</em>","<em>Method: NcPlane.[double_box_sized()][…","Duplicate an existing ncplane. The new plane will have …","Erase every cell in the ncplane (each cell is initialized …","Erase every cell in the region starting at {ystart, …","Fade the ncplane in over the specified time. Load the …","Fade in through ‘iter’ iterations, where ‘iter’ < …","Fade the ncplane out over the provided time, calling ‘…","Fade out through ‘iter’ iterations, where ‘iter’ <…","Gets the foreground [NcChannel] from an [NcPlane].","Gets the foreground [NcAlphaBits] from the [NcPlane], …","Is the plane’s foreground using the “default …","Gets the foreground [NcRgb] from an [NcPlane], shifted to …","Gets the foreground RGB [NcComponent]s from an [NcPlane]. …","Set the given style throughout the specified region, …","Draws a gradient with its upper-left corner at the …","Draw a gradient with its upper-left corner at the current …","Convert the plane’s content to greyscale.","Returns the column at which <code>cols</code> columns ought start in …","Do a high-resolution gradient using upper blocks and …","ncplane_gradent_sized() meets ncplane_highgradient().","Draws horizontal lines using the specified NcCell, …","Draw horizontal or vertical lines using the specified …","Move the cursor to 0, 0. Can’t fail.","Merge the ncplane ‘src’ down onto the ncplane ‘dst…","Merge the entirety of ‘src’ down onto the ncplane ‘…","Splice ncplane ‘n’ out of the z-buffer, and reinsert …","Splice ncplane ‘n’ out of the z-buffer, and reinsert …","","Splice ncplane ‘n’ out of the z-buffer, and reinsert …","Move this plane relative to the standard plane, or the …","Moves this <code>NcPlane</code> relative to its current location.","Extract the Notcurses context to which this plane is …","","Remove the specified styles from the ncplane’s existing …","Add the specified styles to the ncplane’s existing spec.","Get the plane to which the plane ‘n’ is bound, if any.","","<em>Method: NcPlane.[perimeter()][NcPlane#method.perimeter].</em>","<em>Method: NcPlane.[perimeter_double()][…","<em>Method: NcPlane.[perimeter_rounded()][…","Retrieve pixel geometry for the display region (‘pxy’…","Starting at the specified coordinate, if its glyph is …","Pulse the plane in and out until the callback returns …","Calls [ncplane_putc_yx()][crate::ncplane_putc_yx] for the …","Replace the cell at the specified coordinates with the …","Calls ncplane_putchar_yx() at the current cursor location.","Replace the EGC underneath us, but retain the styling. …","Replaces the [NcCell] at the specified coordinates with …","Replace the EGC underneath us, but retain the styling. …","Replace the cell at the specified coordinates with the …","<em>Method: NcPlane.[putnstr()][NcPlane#method.putnstr].</em>","","Write a series of EGCs to the current location, using the …","Writes a series of <code>EGC</code>s to the current location, using …","","Replace a string’s worth of glyphs at the current …","Write a series of EGCs to the current location, using the …","Write the specified text to the plane, breaking lines …","Replace the EGC underneath us, but retain the styling. …","","Draw a QR code at the current position on the plane. If …","Plane ‘n’ will be unbound from its parent plane, and …","The same as ncplane_reparent(), except any planes bound …","Resize the specified ncplane. The four parameters ‘keepy…","Suitable for use as a ‘resizecb’ with planes created …","Suitable for use as a ‘resizecb’, this will resize …","Suitable for use as a ‘resizecb’. This will realign …","Resizes the plane, retaining what data we can …","Returns the ncplane’s current resize callback.","","Rotate the plane π/2 radians clockwise or …","<em>Method: NcPlane.[rounded_box()][NcPlane#method.rounded_box…","<em>Method: NcPlane.[rounded_box_sized()][…","","Set the ncplane’s base nccell. It will be used for …","Set the ncplane’s base nccell to ‘c’. The base cell …","Sets the background [NcChannel] on an [NcPlane], and …","","","Marks the background as NOT using the “default color”,…","","","","Same, but clipped to [0..255].","Sets the [NcChannels] of an [NcPlane].","Marks both the foreground and background as using the “…","Sets the foreground [NcChannel] on an [NcPlane], and …","Set the alpha parameters for ncplane ‘n’.","Use the default color for the foreground/background.","Marks the foreground as NOT using the “default color”,…","Set the ncplane’s foreground palette index, set the …","Same, but with rgb assembled into a channel (i.e. lower …","Set the current fore/background color using RGB …","","Marks both the foreground and background as NOT using the …","Replace the ncplane’s existing resizecb with ‘resizecb…","All planes are created with scrolling disabled. Scrolling …","Set the specified style bits for the ncplane ‘n’, …","Manipulate the opaque user pointer associated with this …","Set the given channels throughout the specified region, …","Return the current styling for this ncplane.","","","","provided a coordinate relative to the origin of ‘src’…","Fed absolute ‘y’/‘x’ coordinates, determine …","","Returns the row at which <code>rows</code> rows ought start in order …","Draws vertical lines using the specified NcCell, starting …","","The ncplane equivalents of printf(3) and vprintf(3).","","","","","Get the origin of plane ‘n’ relative to its bound …","Takes ownership of the ncplane ‘n’, which will be …","Destroy the progress bar and its underlying ncplane.","Return a reference to the ncprogbar’s underlying …","Get the progress bar’s completion, a double on [0, 1].","Set the progress bar’s completion, a double 0 <= ‘p’…","empty the ncreader of any user input, and home the cursor.","return a heap-allocated copy of the current (UTF-8) …","ncreaders provide freeform input in a (possibly …","destroy the reader and its bound plane. if ‘contents’ …","","Atttempt to move in the specified direction. Returns 0 if …","","","Offer the input to the ncreader. If it’s relevant, this …","","Destructively write the provided EGC to the current …","Add a new nctablet to the provided ncreel ‘nr’, …","Take over the ncplane ‘nc’ and use it to draw a reel …","Delete the tablet specified by t from the ncreel ‘nr’…","Destroy an ncreel allocated with ncreel_create().","Return the focused tablet, if any tablets are present. …","Change focus to the next tablet, if one exists","Offer input ‘ni’ to the ncreel ‘nr’. If it’s …","Returns the ncplane on which this ncreel lives.","Change focus to the previous tablet, if one exists","Redraw the ncreel ‘nr’ in its entirety. The reel will …","Return the number of nctablets in the ncreel ‘nr’.","Converts [NcResizeCb] to [NcResizeCbUnsafe].","Converts [NcResizeCbUnsafe] to [NcResizeCb].","Dynamically add or delete items. It is usually sufficient …","","","Destroy the ncselector. If ‘item’ is not NULL, the …","","Offer the input to the ncselector. If it’s relevant, …","Return a reference to the ncselector’s underlying …","Move up or down in the list. A reference to the …","Return reference to the selected option, or NULL if there …","Returns the number of columns occupied by a multibyte …","Access the ncplane associated with nctablet ‘t’, if …","Returns a pointer to a user pointer associated with this …","|opts| may <em>not</em> be NULL, since it is necessary to define a …","Destroy the nctree.","Return the focused item, if any items are present. This …","Go to the item specified by the array |spec|, terminated …","Change focus to the next item.","Offer input ‘ni’ to the nctree ‘n’. If it’s …","Returns the ncplane on which this nctree lives.","Change focus to the previous item.","Redraw the nctree ‘n’ in its entirety. The tree will …","Add to or set the value corresponding to this x. If x is …","Use the provided plane ‘n’ for plotting according to …","","Return a reference to the ncplot’s underlying ncplane.","","","Get the specified pixel from the specified ncvisual.","Get the size and ratio of ncvisual pixels to output cells …","extract the next frame from an ncvisual. returns 1 on end …","decode the next frame ala ncvisual_decode(), but if we …","Destroy an ncvisual. Rendered elements will not be …","ncvisual_from_rgba(), but ‘bgra’ is arranged as BGRA. …","Open a visual at ‘file’, extract a codec and …","Promote an ncplane ‘n’ to an ncvisual. The plane may …","ncvisual_from_rgba(), but the pixels are 4-byte RGBx. A …","ncvisual_from_rgba(), but the pixels are 3-byte RGB. A is …","Prepare an ncvisual, and its underlying plane, based off …","Get the default <em>media</em> (not plot) blitter for this …","Polyfill at the specified location within the ncvisual ‘…","Render the decoded frame to the specified ncplane. If one …","Scale the visual to ‘rows’ X ‘columns’ pixels, …","Scale the visual to ‘rows’ X ‘columns’ pixels, …","Rotate the visual ‘rads’ radians. Only M_PI/2 and …","Set the specified pixel in the specified ncvisual.","Shut up and display my frames! Provide as an argument to …","Stream the entirety of the media, according to its own …","","","","","New empty <code>NcCell</code>.","New <code>NcChannel</code>, set to black and NOT using the “default …","New <code>NcChannels</code>, set to black and NOT using the “default …","New NcDirect with the default options.","New NcInput.","New notcurses context (without banners).","New NcOptions.","New <code>NcPalette</code>.","Constructs a libav-compatible ABGR pixel from RGB […","New <code>NcPlane</code>.","New NcPlaneOptions using the horizontal x.","Allocates an NcStats object.","","Returns a new <code>NcVGeom</code> with zeroed fields.","New NcError with default [NCRESULT_ERR] error number, and …","New NcPlaneOptions with horizontal alignment.","New <code>NcPlane</code>, bound to another NcPlane.","New empty NcInput.","New NcError with custom error number, and without message.","New NcError with default [NCRESULT_ERR] error number and …","Gets a mutable reference to the [<code>Nc</code>] context of this …","Returns the offset into <code>availcols</code> at which <code>cols</code> ought be …","Retrieve the contents of the specified cell as last …","Return the bottommost ncplane of the standard pile.","Can we reliably use Unicode Braille?","","Can we fade? Fading requires either the “rgb” or “…","Can we reliably use Unicode halfblocks?","Can we load images? This requires being built against …","Can we load videos? This requires being built against …","Can we reliably use Unicode quadrants?","Can we reliably use Unicode 13 sextants?","Can we directly specify RGB values per cell, or only use …","Is our encoding UTF-8? Requires LANG being set to a UTF8 …","Can we blit pixel-accurate bitmaps?","Gets an immutable reference to the [<code>Nc</code>] context of this …","The same as notcurses_init(), but without any multimedia …","Disable the hardware cursor. It is an error to call this …","Enable or disable the terminal’s cursor, if supported, …","Get the current location of the terminal’s cursor, …","Dump selected Notcurses state to the supplied ‘debugfp…","Returns the name (and sometimes version) of the terminal, …","Destroy all ncplanes other than the stdplane.","Backwards-compatibility wrapper; this will be removed for …","Blocks until an event is processed or a signal is …","If no event is ready, returns 0.","Initialize a Notcurses context on the connected terminal …","Get a file descriptor suitable for input event poll()ing. …","Lex a blitter.","Lex a margin argument according to the standard Notcurses …","Lex a scaling mode (one of “none”, “stretch”, “…","Disable signals originating from the terminal’s line …","Restore signals originating from the terminal’s line …","Disable mouse events. Any events in the input queue can …","Enable the mouse in “button-event tracking” mode with …","Returns the number of simultaneous colors claimed to be …","Refresh the physical screen to match what was last …","Renders and rasterizes the standard pile in one shot. …","","","Acquire an atomic snapshot of the Notcurses object’s …","Allocate an ncstats object. Use this rather than …","Reset all cumulative stats (immediate ones, such as …","[notcurses_stdplane()][crate::notcurses_stdplane], plus …","[notcurses_stdplane_const()][…","Get a reference to the standard plane (one matching our …","","Destroy a Notcurses context.","Get the name of a blitter.","Get the name of a scaling mode.","Returns a 16-bit bitmask of supported curses-style …","Returns our current idea of the terminal dimensions in …","Return the topmost ncplane of the standard pile.","input functions like notcurses_get() return ucs32-encoded …","Get a human-readable string describing the running …","Cannot be inline, as we want to get the versions of the …","notcurses render sleep: [<code>Nc::render</code>][Nc#method.render](<code>$nc</code>…","Removes the specified styles from this <code>NcPlane</code>’s …","Adds the specified styles to this <code>NcPlane</code>’s existing …","Returns the number of simultaneous colors claimed to be …","Returns the number of simultaneous colors claimed to be …","","Is this NcChannel using palette-indexed color rather than …","Gets the parent to which this <code>NcPlane</code> is bound, if any.","Gets the parent to which this <code>NcPlane</code> is bound, if any.","Draws the perimeter around this <code>NcPlane</code>.","NcPlane.[perimeter()][NcPlane#method.perimeter] with the …","NcPlane.[perimeter()][NcPlane#method.perimeter] with the …","Returns an [NcPixelGeometry] structure filled with pixel …","Polyfills at the specified location using <code>rgba</code>.","Same as [load][NcCell#method.load], plus blasts the …","plane render sleep: [<code>NcPlane::render</code>][…","Pulses this <code>NcPlane</code> in and out until the callback returns …","Replaces the [<code>NcCell</code>] at the <strong>current</strong> coordinates with the …","Replaces the <code>NcCell</code> at the <strong>specified</strong> coordinates with the …","Calls [<code>putchar_yx</code>][NcPlane#method.putchar_yx] at the …","Replaces the [NcCell] at the <code>y</code>,<code>x</code> coordinates with the …","Moves the cursor to the beginning of the next row.","Outputs the <code>string</code> according to the <code>channels</code>, and returns …","Writes a string to the current location, using the …","Same as [<code>putstr_yx()</code>][NcPlane#method.putstr_yx] but […","Writes a string to the current location, but retains the …","Writes a string to the provided location, using the …","Same as [<code>putstr</code>][NcPlane#method.putstr], but it also …","","","Gets the red [<code>NcComponent</code>].","Extracts the 8 bit red [<code>NcComponent</code>] from an ABGR pixel.","Takes the result of [<code>render_frame</code>][…","Makes the physical screen match the last rendered frame …","Reads exactly the number of bytes required to fill buf.","Reads the file from start to end. Convenience method","Reads exactly the number of bytes required to fill buf.","Reads the entire file starting from the current_position …","Reads the entire file from the beginning and stores it in …","Reads a (heap-allocated) line of text using the Readline …","Refreshes the physical screen to match what was last …","Releases resources held by the current cell in the […","Renders and rasterizes the standard pile in one shot. …","Renders the pile of which this <code>NcPlane</code> is a part. …","Renders the decoded frame to the specified [<code>NcPlane</code>].","Renders an image using the specified blitter and scaling, …","Displays an image using the specified blitter and scaling.","Performs the rendering and rasterization portion of […","Writes the last rendered frame, in its entirety, to ‘fp…","Unbounds this <code>NcPlane</code> from its parent, makes it a bound …","Like [<code>reparent</code>][NcPlane#method.reparent], except any bound…","Resets all cumulative stats (immediate ones are not …","Resizes this <code>NcPlane</code>.","Resizes the visual to <code>cols</code> X <code>rows</code> pixels.","Suitable for use as a ‘resizecb’ with planes created …","Suitable for use as a ‘resizecb’, this will resize …","Resizes the visual to  in the image to <code>rows</code> X <code>cols</code> …","Realigns this <code>NcPlane</code> against its parent, using the …","Resizes this <code>NcPlane</code>, retaining what data we can …","Returns this <code>NcPlane</code>’s current resize callback.","","Gets the [<code>NcRgb</code>].","","Gets the three [<code>NcComponent</code>]s.","Rotates the visual <code>rads</code> radians.","Rotate the plane π/2 radians counter-clockwise.","Rotate the plane π/2 radians clockwise.","NcCell.[load_box()][NcCell#method.box] with the rounded …","NcDirect.[box()][NcDirect#method.box] with the rounded …","Return the rows of this <code>NcPlane</code>.","Returns <code>true</code> if this <code>NcPlane</code> has scrolling enabled, or …","Changes the current position in the file using the […","","Sets the [<code>NcRgb</code>], and marks the NcChannel as NOT using the…","Sets the [<code>NcRgb</code>] value of the [<code>NcChannel</code>][crate::NcChannel…","","Sets the 8-bit alpha [<code>NcComponent</code>] of an ABGR pixel.","","Sets the [<code>NcAlphaBits</code>].","","","Sets the blue [<code>NcComponent</code>], and returns the new <code>NcChannel</code>…","Sets the 8-bit blue [<code>NcComponent</code>] of an ABGR pixel.","Sets this <code>NcPlane</code>’s base [<code>NcCell</code>] from its components.","Sets this <code>NcPlane</code>’s base [<code>NcCell</code>].","","Sets the background [<code>NcChannel</code>].","Sets the current background [<code>NcChannel</code>] for this <code>NcPlane</code>. …","","Sets the background [<code>NcAlphaBits</code>].","Sets the background [<code>NcAlphaBits</code>].","Sets the background [<code>NcAlphaBits</code>] for this <code>NcPlane</code>.","","Indicates to use the “default color” for the …","Marks the background as using its “default color”, and…","Indicates to use the “default color” for the …","Uses the default color for the background.","","Marks the background as NOT using its “default color”…","Marks the background as NOT using the default color.","","Sets the background [<code>NcPaletteIndex</code>].","Sets the background of an [<code>NcChannels</code>] as using an […","Sets the background [NcPaletteIndex].","Sets this <code>NcPlane</code>’s background [NcPaletteIndex].","","Sets the background [<code>NcRgb</code>] and marks it as not using the …","Sets the background [<code>NcRgb</code>].","Sets the background [NcRgb].","Sets the background [<code>NcRgb</code>] for this <code>NcPlane</code>.","","Sets the background RGB [<code>NcComponent</code>]s, and marks it as …","Sets the three background RGB [<code>NcComponent</code>]s (r, g, b), …","Sets the background [NcComponent] components.","Sets the background RGB [<code>NcComponent</code>]s for this <code>NcPlane</code>.","Sets the current [<code>NcChannels</code>] for this <code>NcPlane</code>.","","","Marks this <code>NcChannel</code> as using its “default color”, …","Marks both the foreground and background as using its “…","Marks both the foreground and background as using the …","","Sets the foreground [<code>NcChannel</code>].","Sets the current foreground [<code>NcChannel</code>] for this <code>NcPlane</code>. …","","Sets the foreground [<code>NcAlphaBits</code>].","Sets the foreground [<code>NcAlphaBits</code>].","Sets the foreground [<code>NcAlphaBits</code>] from this <code>NcPlane</code>.","","Indicates to use the “default color” for the …","Marks the foreground as using its “default color”, and…","Indicates to use the “default color” for the …","Uses the default color for the foreground.","","Marks the foreground as NOT using its “default color”…","Marks the foreground as NOT using the default color.","","Sets the foreground [<code>NcPaletteIndex</code>].","Sets the foreground of an [<code>NcChannels</code>] as using an […","Sets the foreground [NcPaletteIndex].","Sets this <code>NcPlane</code>’s foreground [NcPaletteIndex].","","Sets the foreground [<code>NcRgb</code>] and marks it as not using the …","Sets the foreground [<code>NcRgb</code>].","Sets the foreground [NcRgb].","Sets the foreground [<code>NcRgb</code>] for this <code>NcPlane</code>.","","Sets the foreground RGB [<code>NcComponent</code>]s, and marks it as …","Sets the three foreground RGB [<code>NcComponent</code>]s (r, g, b), …","Sets the foreground [NcComponent] components.","Sets the foreground RGB [<code>NcComponent</code>]s for this <code>NcPlane</code>.","","","Sets the green [<code>NcComponent</code>], and returns the new …","Sets the 8-bit green [<code>NcComponent</code>] of an ABGR pixel.","","","Marks this <code>NcChannel</code> as <em>not</em> using its “default color”.","Marks both the foreground and background as NOT using its …","Marks both the foreground and background as NOT using the …","","","Sets the red [<code>NcComponent</code>], and returns the new <code>NcChannel</code>.","Sets the 8-bit red [<code>NcComponent</code>] of an ABGR pixel.","Replaces this <code>NcPlane</code>’s existing resize callback (which …","","","Sets the three [<code>NcComponent</code>]s, and marks the NcChannel as …","Sets the RGB [<code>NcComponent</code>]s of an ABGR pixel.","Sets the scrolling behaviour of the plane, and returns …","Sets just the specified styles for this <code>NcPlane</code>.","Sets the specified pixel.","NcFadeCtx constructor.","Displays frames.","Sleeps for <code>$s</code> seconds + <code>$ms</code> milliseconds + <code>$us</code> …","Sets the given [<code>NcChannels</code>]s throughout the specified …","Acquires an atomic snapshot of the notcurses object’s …","Acquires an atomic snapshot of the notcurses object’s …","Allocates an [<code>NcStats</code>] object.","Resets all cumulative stats (immediate ones, such as …","Returns a mutable reference to the standard [<code>NcPlane</code>] for …","Returns a reference to the standard [<code>NcPlane</code>] for this …","Releases this NcDirect and any associated resources.","Destroys the notcurses context.","Gets the name of an [<code>NcBlitter</code>] blitter.","Gets the name of an [<code>NcScale</code>] scaling mode.","Gets the lowercase name (or names) of the styles included …","Copies the UTF8-encoded <code>EGC</code> out of this NcCell, whether …","Returns the [<code>NcStyle</code>] bits.","Returns the current styling for this <code>NcPlane</code>.","Removes the specified [<code>NcStyle</code>] bits.","Removes the specified styles.","Adds the specified [<code>NcStyle</code>] bits.","Adds the specified styles.","Sets just the specified [<code>NcStyle</code>] bits.","Sets just the specified styles.","If a subtitle ought be displayed at this time, returns a …","Returns an [<code>NcStyle</code>] with the supported curses-style …","Returns our current idea of the terminal dimensions in …","","Geometry of the display region","","Returns [NcResizeCbUnsafe].","no-op.","","","","no-op.","Returns [NcResizeCb].","","","Returns a <code>Vec</code> with all the styles contained in the …","Returns the topmost [<code>NcPlane</code>], of which there is always …","Returns the topmost <code>NcPlane</code> of the current pile.","Maps the provided coordinates relative to the origin of …","Returns true if the provided absolute <code>y</code>/<code>x</code> coordinates are …","","","","","","","","","","Attempts to configure the terminal with this NcPalette.","Returns the row at which <code>rows</code> rows ought start in order …","Returns a human-readable string describing the running …","Returns the running notcurses version components (major, …","Draws horizontal lines using the specified [NcChannels]s, …","Is this the left half of a wide character?","Is this the right side of a wide character?","All the notcurses widgets.","New NcInput, expecting all the arguments.","New NcOptions, with all the options.","New NcInput with alt key.","New notcurses context, with banners.","New NcInput with ctrl key.","New notcurses context, expects [NcLogLevel] and flags.","","New <code>NcChannels</code>, set to black and using the “default …","New NcDirect with optional flags.","New notcurses context, expects <code>NCOPTION_*</code> flags.","New NcOptions, with flags.","New NcPlaneOptions, with flags.","New NcPlaneOptions, with flags and horizontal alignment.","New NcOptions, with margins.","New NcError with both a custom error number and a custom …","New notcurses context, expects [NcOptions].","New <code>NcPlane</code>, expects an [NcPlaneOptions] struct.","New <code>NcPlane</code>, bound to another plane, expects an […","Specify an existing plane.","New NcInput with shift key.","New <code>NcPlane</code>, with the same dimensions of the terminal.","New notcurses context, without an alternate screen (nor …","","Gets the <code>x</code> origin of this <code>NcPlane</code> relative to the …","Gets the <code>y</code> origin of this <code>NcPlane</code> relative to the …","Gets the <code>y</code>, <code>x</code> origin of this <code>NcPlane</code> relative to the …","","","","","","","","","","","","","","","","","","The opaque type of streams.  This is the definition used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tag name of this struct is _G_fpos64_t to preserve …","The tag name of this struct is _G_fpos_t to preserve …","","","","","","The tag name of this struct is _IO_FILE to preserve …","","Pointer to first valid character of backup area","Start of reserve area.","End of reserve area.","","","","Start of putback+get area.","End of get area.","Current read pointer","Pointer to start of non-current get area.","Pointer to end of non-current get area.","","Start of put area.","End of put area.","Current put pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ancillary data.","","","","","","The tag name of this struct is _G_fpos64_t to preserve …","The tag name of this struct is _G_fpos_t to preserve …","","","","","","","","","","","","","","","","","Fixed-size types, underlying types depend on word size …","","","","Smallest types with at least a given width.","","","","","","","These few don’t really vary by system, they always …","Conversion state information.","","","","","","","","","","","","","","C99: An integer type that can be accessed as an atomic …","","Type of a signal handler.","","","Types of sockets.","Atomically set close-on-exec flag for the new …","Datagram Congestion Control Protocol.","Connectionless, unreliable datagrams of fixed maximum …","Atomically mark descriptor(s) as non-blocking.","Linux specific way of getting packets at the dev level.  …","Raw protocol interface.","Reliably-delivered messages.","Sequenced, reliable, connection-based, datagrams of fixed …","Sequenced, reliable, connection-based byte streams.","","Force desired alignment.","","","","","","","","","","","","","","","Seconds east of UTC.","Timezone abbreviation.","","","","","Convenience types.","","","","","","","","","","","","","","","","","","","Value so far.","","","","","Wide character stream stuff.","1+column number of pbase(); 0 is unknown.","","High-order word is _IO_MAGIC; rest is flags.","","","","","","","","This used to be _offset but it’s too small.","","Make sure we don’t get into trouble again.","","","Returns the <code>NcPlane</code> above this one, or None if already at …","Gets the origin of this plane relative to its pile, in …","Gets the origin of this plane relative to its pile, in …","Gets the origin of this plane relative to its pile.","Returns the offset into <code>availcols</code> at which <code>cols</code> ought be …","was alt held?","how many application-synchronized updates?","","","","Creates an RGBA flat array from the selected region of …","","Retrieves the current contents of the [<code>NcCell</code>] under the …","Retrieves the current contents of the [<code>NcCell</code>] under the …","Retrieves the current contents of the specified [NcCell][…","Retrieves the current contents of the specified [<code>NcCell</code>], …","Gets the specified pixel from this NcVisual.","Retrieves the current contents of the specified [<code>NcCell</code>] …","Extracts this <code>NcPlane</code>’s base [<code>NcCell</code>].","Gets the background [<code>NcChannel</code>] from an [NcPlane].","origin of rendered section","origin of rendered section","Returns the <code>NcPlane</code> below this one, or None if already at …","Gets the background [<code>NcAlphaBits</code>] for this <code>NcPlane</code>, …","Extracts the background [<code>NcAlphaBits</code>] (shifted to LSBs).","Is this <code>NcPlane</code>’s background using the “default …","Is the background [<code>NcChannel</code>] using the “default …","Gets the [<code>NcPaletteIndex</code>] of the background [<code>NcChannel</code>].","Is the background [<code>NcChannel</code>] using an [<code>NcPaletteIndex</code>] …","Gets the background [<code>NcRgb</code>] from this <code>NcPlane</code>, shifted to …","Gets the background [<code>NcRgb</code>] (shifted to LSBs).","Gets the background RGB [<code>NcComponent</code>]s from this <code>NcPlane</code>.","Gets the background RGB [<code>NcComponent</code>]s.","RGB bg elision count","RGB bg emissions","“bottom” is the direction of origin. for monochromatic","glyph set to use (maps input to output cells)","blitter that will be used","","attributes used for ncreel border","bitfield; 1s will not be drawn (see bordermaskbits)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bottommost [<code>NcPlane</code>] on the standard pile, of …","Returns the bottommost <code>NcPlane</code> of the current pile.","Draws a box with its upper-left corner at the current …","Draws a box with its upper-left corner at the current …","Draws a box with its upper-left corner at the current …","border channels","border channels","do we have Braille support? (linux console does not)","bar, all four channels ought be the same.","can we change the palette? terminfo ‘ccc’","Returns true if we can reliably use Unicode Braille.","Can we reliably use Unicode braille?","Returns true if it’s possible to set the “hardware” …","Can we set the “hardware” palette?","Returns true if fading is possible.","Can we fade?","Is there support for acquiring the cursor’s current …","Returns true if we can reliably use Unicode half blocks.","Can we reliably use Unicode halfblocks?","Returns true if loading images is possible.","Can we load images?","Returns true if loading videos is possible.","Can we load videos?","Returns true if we can reliably use Unicode quadrant …","Can we reliably use Unicode quadrants?","Returns true if we can reliably use Unicode 13 sextants.","Can we reliably use Unicode sextants?","Returns true if it’s possible to directly specify RGB …","Can we directly specify RGB values per cell, or only use …","Returns true if the encoding is UTF-8.","Is our encoding UTF-8?","Returns the [<code>NcCapabilities</code>].","terminal cell geometry when this was calculated","terminal cell geometry when this was calculated","","cells we elided entirely thanks to damage maps","total number of cells emitted to terminal","<em>C style function: [ncplane_center_abs()][…","Gets the current [<code>NcChannels</code>] from this <code>NcPlane</code>.","Returns the [<code>NcChannels</code>] of this <code>NcCell</code>.","8B == 16B","RGB values as regular ol’ channels","Checks for pixel support.","Checks for pixel support.","Clears the screen.","Returned by `clock’.","Clock ID used in clock and timer functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Length of data in cmsg_data plus length of cmsghdr …","Originating protocol.","Protocol specific type.","Structure used for storage of ancillary data object …","size of palette for indexed colors","Return the cols of this <code>NcPlane</code>.","columns, must be positive (unless …","Returns true if the two cells have distinct <code>EGC</code>s, …","Creates a flat string from the <code>EGC</code>’s of the selected …","size of |items|","was ctrl held?","","parameter provided to callbacks","","Disables the terminal’s cursor, if supported.","Disables the terminal’s cursor, if supported.","Moves the cursor down any number of rows.","Enables the terminal’s cursor, if supported, placing it …","Enables the terminal’s cursor, if supported.","Moves the cursor to 0, 0.","Moves the cursor left any number of columns.","Moves the cursor the number of columns specified (forward …","Moves the cursor relatively, the number of rows and …","Moves the cursor the number of rows specified (forward or …","Moves the cursor to the specified column within this …","Moves the cursor to the specified row within this <code>NcPlane</code>.","Moves the cursor to the specified position within this …","Pops the cursor location from the terminal’s stack.","Pushes the cursor location to the terminal’s stack.","Moves the cursor right any number of columns.","Sets the cursor to the specified column <code>x</code>.","Sets the cursor to the specified row <code>y</code>.","Sets the cursor to the specified row <code>y</code>, column <code>x</code>.","Moves the cursor up any number of rows.","Returns the current column of the cursor within this …","Returns the current row of the cursor within this <code>NcPlane</code>.","Returns the current position of the cursor within this …","Gets the cursor (y, x) position, when supported.","","Dumps notcurses state to the supplied <code>debugfp</code>.","Extracts the next frame from the NcVisual.","Extracts the next frame from the NcVisual, ala [decode][…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default color was emitted","default color was elided","default item (selected at start), must be < itemcount …","","","utf-8 menu item, NULL for horizontal separator","description channels","description channels","filled in by library","Destroys this <code>NcPlane</code>.","Destroys this NcVisual.","Destroy the progress bar and its underlying ncplane.","Destroys an NcTree created with [new()][NcTree#method.new]…","Destroys an <code>NcMenu</code> created with [<code>new</code>][NcMenu#method.new].","Returns the name of the detected terminal.","Returns the name of the detected terminal.","","Return the columns of this <code>NcPlane</code>.","Gets the current number of columns.","Return the rows of this <code>NcPlane</code>.","Gets the current number of rows.","Returns the dimensions of this <code>NcPlane</code>.","Gets the current number of rows and columns.","Returned by `div’.","NcPlane.[box()][NcPlane#method.box] with the double …","NcCell.[load_box()][NcCell#method.box] with the double …","NcDirect.[box()][NcDirect#method.box] with the double …","<em>C style function: [ncplane_double_box_sized()][…","Does this NcCell contain a wide codepoint?","Destroys all [<code>NcPlane</code>]s other than the stdplane.","Duplicates this <code>NcPlane</code>.","Duplicate this <code>NcCell</code> into another one.","Returns the <code>EGC</code> of the <code>NcCell</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Erases every [<code>NcCell</code>] in this <code>NcPlane</code>, resetting all …","Saves the [<code>NcStyle</code>] and the [<code>NcChannels</code>], and returns the …","Called for each fade iteration on ‘ncp’. If anything …","Fades this <code>NcPlane</code> in, over the specified time, calling …","Fades in through ‘iter’ iterations, where ‘iter’ <…","Fades this <code>NcPlane</code> out, over the specified time, calling …","Fades out through ‘iter’ iterations, where ‘iter’ …","aborted renders, should be 0","aborted writes","","total bytes devoted to all active framebuffers","Gets the foreground [<code>NcChannel</code>] from an [NcPlane].","Gets the foreground [<code>NcAlphaBits</code>] from this <code>NcPlane</code>, …","Extracts the foreground [<code>NcAlphaBits</code>] (shifted to LSBs).","Is this <code>NcPlane</code>’s foreground using the “default …","Is the foreground [<code>NcChannel</code>] using the “default …","Gets the [<code>NcPaletteIndex</code>] of the foreground [<code>NcChannel</code>].","Is the foreground [<code>NcChannel</code>] using an [<code>NcPaletteIndex</code>] …","Gets the foreground [<code>NcRgb</code>] from this <code>NcPlane</code>, shifted to …","Gets the foreground [<code>NcRgb</code>] (shifted to LSBs).","Gets the foreground RGB [<code>NcComponent</code>]s from this <code>NcPlane</code>.","Gets the foreground RGB [<code>NcComponent</code>]s.","RGB fg elision count","RGB fg emissions","General flags; see NCOPTION_*. This is expressed as a …","closure over NCPLANE_OPTION_*","bitmask over NCVISUAL_OPTION_*","bitfield over NCREEL_OPTION_*","bitfield of NCSELECTOR_OPTION_*","bitfield of NCMULTISELECTOR_OPTION_*","bitfield of NCTREE_OPTION_*","flag word of NCMENU_OPTION_*","","bitmask of NCTABBED_OPTION_*","bitfield over NCPLOT_OPTION_*","bitfield over NCOPTION_FDPLANE_*","bitfield over NCOPTION_SUBPROC_*","bitfield of NCREADER_OPTION_*","Forces a flush.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the focused item, if any items are present.","focused tablet border styling channel","keep reading after hitting end? (think tail -f)","secondary and footer channels","secondary and footer channels","footer may be NULL","footer may be NULL","Sets the given style throughout the specified region, …","","","Releases the resources associated.","Frees this <code>NcPalette</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like [from_rgba][NcVisual#method.from_rgba], but ‘bgra…","New <code>NcCell</code>, expects an [<code>NcPlane</code>] and a [<code>char</code>].","New <code>NcCell</code>, expects a 7-bit [<code>char</code>].","Opens a visual at <code>file</code>, extracts the codec and parameters …","Promotes an NcPlane to an NcVisual.","Like [<code>from_rgba</code>][NcVisual#method.from_rgba], but the …","Like [<code>from_rgba</code>][NcVisual#method.from_rgba], but the …","Prepares an NcVisual, and its underlying NcPlane, based …","New <code>NcCell</code>, expects an [<code>NcPlane</code>] and a &[<code>str</code>].","","","","4B → 4B little endian EGC","1B → 5B (8 bits of zero)","Gets the size and ratio of NcVisual pixels to output …","Extracts the [<code>NcComponent</code>]s from an [<code>NcChannel</code>] entry …","Returns the [<code>NcComponent</code>]s from the [<code>NcChannel</code>] in this …","Returns a [char] representing a single unicode point.","Returns a [char] representing a single unicode point.","Blocks until a codepoint or special key is read, or until …","<em>C style function: [ncdirect_getc_blocking()][…","If no event is ready, returns 0.","<em>C style function: [ncdirect_getc_nblock()][…","","","Draws a gradient with its upper-left corner at the …","Draw a gradient with its upper-left corner at the current …","Converts this <code>NcPlane</code>’s content to greyscale.","number of “pixels” per row x column","we assume halfblocks, but some are known to lack them","Returns the column at which <code>cols</code> columns ought start in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","channel for unselected tab headers","Returns the styling for the header.","Returns a mutable reference of the styling for the …","styling for header","Draws a high-resolution gradient using upper blocks and …","[<code>gradient_sized</code>][NcPlane#method.gradient_sized] meets […","Draws horizontal lines using the specified [NcChannels]s, …","identifier. Unicode codepoint or synthesized NCKEY event","","IPv6 address","","","","","Internet address.","Type to represent a port.","columns to indent per level of hierarchy","Initializes (zeroes out) this <code>NcCell</code>.","","errors processing control sequences/utf8","characters returned to userspace","Gets a file descriptor suitable for input event poll()ing.","Get a file descriptor suitable for input event poll()ing.","","","","Signed.","","","","Signed.","Largest integral types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pointer to data.","Length of data.","Structure for scatter/gather I/O.","Disables or enables an [<code>NcMenuItem</code>].","","initial items and descriptions","initial items, descriptions, and statuses","top-level nctree_item array","","Returns the number of iterations through which will fade.","","Time to linger.","Nonzero to linger on close.","","styling used for the legend, if NCPLOT_OPTION_LABELTICKSD …","size of rendered section","size of rendered section","Returns an [<code>NcBlitter</code>] from a string representation.","Lexes a margin argument according to the standard …","Returns an [<code>NcScale</code>] from a string representation.","Returns an [<code>NcStyle</code>] from a string representation.","Disables signals originating from the terminal’s line …","Restores signals originating from the terminal’s line …","Structure used to manipulate the SO_LINGER option.","Returned by `lldiv’.","Breaks the UTF-8 string in <code>egc</code> down, setting up this …","Loads up six cells with the <code>EGC</code>s necessary to draw a box.","Progressively higher log levels result in more logging to …","Desirable margins. If all are 0 (default), we will render …","margins (require NCPLANE_OPTION_MARGINALIZED)","Desirable margins. If all are 0 (default), we will render …","Desirable margins. If all are 0 (default), we will render …","margins (require NCPLANE_OPTION_MARGINALIZED)","Desirable margins. If all are 0 (default), we will render …","channels for the maximum and minimum levels. linear or …","maximum number of options to display at once, 0 to use …","maximum number of options to display at once, 0 to use …","only defined for NCBLIT_PIXEL","only defined for NCBLIT_PIXEL","Gets the default media (not plot) blitter for this …","Merge the <code>NcPlane</code> <code>source</code> down onto the current <code>NcPlane</code> (…","Merges <code>source</code> down onto this <code>NcPlane</code>.","","Disables mouse events.","Enable the mouse in “button-event tracking” mode with …","Returns the [<code>NcMenuItem</code>] description corresponding to the …","Relocates this <code>NcPlane</code> above the <code>above</code> NcPlane, in the …","Relocates this <code>NcPlane</code> below the <code>below</code> NcPlane, in the …","Relocates this <code>NcPlane</code> at the bottom of the z-buffer.","Moves this <code>NcPlane</code> relative to its current location.","Relocates this <code>NcPlane</code> at the top of the z-buffer.","Moves this <code>NcPlane</code> relative to the standard plane, or the …","if no ncplane is provided, one will be created using the …","name (used only for debugging), may be NULL","utf-8 c string","Alignment within a plane or terminal. …","","","","","Same as ncblit_rgba(), but for BGRx.","Supply an alpha value [0..255] to be applied throughout. …","Supply an alpha value [0..255] to be applied throughout.","Blit a flat array ‘data’ of RGBA 32-bit values to the …","we never blit full blocks, but instead spaces (more …","space, compatible with ASCII","halves + 1x1 (space)     ▄▀","quadrants + 2x1          ▗▐ ▖▀▟▌▙","sextants (<em>NOT</em> 2x2)     …","four vertical levels     █▆▄▂","eight vertical levels    █▇▆▅▄▃▂▁","4 rows, 2 cols (braille) …","let the ncvisual pick","pixel graphics","Capabilities, derived from terminfo, environment …","An nccell corresponds to a single character cell on some …","Duplicate ‘c’ into ‘targ’; both must be/will be …","return a pointer to the NUL-terminated EGC referenced by …","Breaks the UTF-8 string in ‘gcluster’ down, setting …","Release resources held by the nccell ‘c’.","","","","","Draw a box with its upper-left corner at the current …","Is there support for acquiring the cursor’s current …","Can we load images? This requires being built against …","Is our encoding UTF-8? Requires LANG being set to a UTF8 …","","Can we blit pixel-accurate bitmaps?","Clear the screen.","The same as ncdirect_init(), but without any multimedia …","","","","","Move the cursor in direct mode. -1 to retain current …","","Push or pop the cursor location to the terminal’s …","","","Get the cursor position, when supported. This requires …","Capabilites","Get the current number of columns/rows.","","ncdirect_box() with the double box-drawing characters","Force a flush. Returns 0 on success, -1 on failure.","Provide a NULL ‘ts’ to block at length, a ‘ts’ of …","Deprecated, to be removed for ABI3. Use ncdirect_get() in …","Draw horizontal/vertical lines using the specified …","Initialize a direct-mode Notcurses context on the …","Get a file descriptor suitable for input event poll()ing. …","","","Returns the number of simultaneous colors claimed to be …","Formatted printing (plus alignment relative to the …","Output a single EGC (this might be several characters) …","Output the string |utf8| according to the channels …","Takes the result of ncdirect_render_frame() and writes it …","Read a (heap-allocated) line of text using the Readline …","Render an image using the specified blitter and scaling, …","Display an image using the specified blitter and scaling. …","ncdirect_box() with the rounded box-drawing characters","","","","","","Direct mode. This API can be used to colorize and stylize …","ncplane_styles_*() analogues","Release ‘nc’ and any associated resources. 0 on …","Load successive frames from a file, invoking ‘streamer…","","","","Deprecated forms of above.","Returns a 16-bit bitmask of supported curses-style …","","","Free a ncdirectf returned from ncdirectf_from_file().","Frees a [<code>NcDirectF</code>] returned from ncdirectf_from_file().","Load media from disk, but do not yet render it …","Loads media from disk, but do not yet renders it …","Having loaded the frame ‘frame’, get the geometry of …","Having loaded the <code>frame</code>, get the geometry of a potential …","Same as ncdirect_render_frame(), except ‘frame’ must …","Same as <code>NcDirect.render_frame()</code>, except <code>frame</code> must …","","","","","","","","","","Release the resources associated with ‘nctx’.","Return the number of iterations through which ‘nctx’ …","Rather than the simple ncplane_fade{in/out}(), …","","","Create an ncfdplane around the fd ‘fd’. Consider this …","","","read from an fd until EOF (or beyond, if follow is set), …","","An input event. Cell coordinates are currently defined …","These log levels consciously map cleanly to those of …","this is honestly a bit much","we can’t keep doing this, but we can do other things","we’re hanging around, but we’ve had a horrible fault","“standard information”","print diagnostics related to catastrophic failure","default. print nothing once fullscreen service begins","there’s probably a better way to do what you want","“detailed information”","you probably don’t want what’s happening to happen","","Create a menu with the specified options, bound to the …","Destroy a menu created with ncmenu_create().","Menus. Horizontal menu bars are supported, on the top …","Disable or enable a menu item. Returns 0 if the item was …","Return the item description corresponding to the mouse …","Move to the previous/next item within the currently …","Unroll the previous/next section (relative to current …","Offer the input to the ncmenu. If it’s relevant, this …","","Return the ncplane backing this ncmenu.","","","Roll up any unrolled menu section, and hide the menu if …","","Return the selected item description, or NULL if no …","Unroll the specified menu section, making the menu …","Floating-point is never used, because an IEEE758 double …","","","","Destroy the ncmultiselector.","Offer the input to the ncmultiselector. If it’s …","multiselection widget – a selector supporting multiple …","Return a reference to the ncmultiselector’s underlying …","Return selected vector. An array of bools must be …","Palette API. Some terminals only support 256 colors, but …","Free the palette store ‘p’.","Create a new palette store. It will be initialized with …","Attempt to configure the terminal with the provided …","Return the bottommost plane of the pile containing ‘n’…","Same as ncplane_create(), but creates a new pile. The …","Make the physical screen match the last rendered frame …","Renders the pile of which ‘n’ is a part. Rendering …","Perform the rendering and rasterization portion of …","Write the last rendered frame, in its entirety, to ‘fp…","Return the topmost plane of the pile containing ‘n’.","","Return the plane above this one, or NULL if this is at …","","","Get the origin of plane ‘n’ relative to its pile. …","Create an RGBA flat array from the selected region of the …","Retrieve the current contents of the cell under the …","Retrieve the current contents of the cell under the …","Retrieve the current contents of the specified cell. The …","Retrieve the current contents of the specified cell into …","Extract the ncplane’s base nccell into ‘c’. The …","Return the plane below this one, or NULL if this is at …","Get the head of the list of planes bound to ‘n’.","Draw a box with its upper-left corner at the current …","","Get the current channels or attribute word for ncplane ‘…","Create a flat string from the EGCs of the selected region …","Create a new ncplane bound to plane ‘n’, at the …","Move the cursor relative to the current cursor position …","Move the cursor to the specified position (the cursor …","Get the current position of the cursor within n. y and/or …","Destroy the specified ncplane. None of its contents will …","Return the dimensions of this ncplane.","Duplicate an existing ncplane. The new plane will have …","Erase every cell in the ncplane (each cell is initialized …","Erase every cell in the region starting at {ystart, …","Fade the ncplane in over the specified time. Load the …","Fade in through ‘iter’ iterations, where ‘iter’ < …","Fade the ncplane out over the provided time, calling ‘…","Fade out through ‘iter’ iterations, where ‘iter’ <…","Set the given style throughout the specified region, …","Draw a gradient with its upper-left corner at the current …","Convert the plane’s content to greyscale.","Do a high-resolution gradient using upper blocks and …","ncplane_gradent_sized() meets ncplane_highgradient().","Draw horizontal or vertical lines using the specified …","Move the cursor to 0, 0. Can’t fail.","Merge the ncplane ‘src’ down onto the ncplane ‘dst…","Merge the entirety of ‘src’ down onto the ncplane ‘…","Splice ncplane ‘n’ out of the z-buffer, and reinsert …","Splice ncplane ‘n’ out of the z-buffer, and reinsert …","","Splice ncplane ‘n’ out of the z-buffer, and reinsert …","Move this plane relative to the standard plane, or the …","This function will be removed in ABI3 in favor of …","Extract the Notcurses context to which this plane is …","","Remove the specified styles from the ncplane’s existing …","Add the specified styles to the ncplane’s existing spec.","","Get the plane to which the plane ‘n’ is bound, if any.","","Retrieve pixel geometry for the display region (‘pxy’…","Starting at the specified coordinate, if its glyph is …","Pulse the plane in and out until the callback returns …","Replace the cell at the specified coordinates with the …","Replace the EGC underneath us, but retain the styling. …","Replace the EGC underneath us, but retain the styling. …","Replace the cell at the specified coordinates with the …","","Write a series of EGCs to the current location, using the …","","Replace a string’s worth of glyphs at the current …","Write a series of EGCs to the current location, using the …","Write the specified text to the plane, breaking lines …","Replace the EGC underneath us, but retain the styling. …","","Draw a QR code at the current position on the plane. If …","Plane ‘n’ will be unbound from its parent plane, and …","The same as ncplane_reparent(), except any planes bound …","Resize the specified ncplane. The four parameters ‘keepy…","Suitable for use as a ‘resizecb’ with planes created …","Suitable for use as a ‘resizecb’, this will resize …","Suitable for use as a ‘resizecb’. This will realign …","Returns the ncplane’s current resize callback.","","Rotate the plane π/2 radians clockwise or …","","Effect |r| scroll events on the plane |n|. Returns an …","Scroll |n| up until |child| is no longer hidden beneath …","Set the ncplane’s base nccell. It will be used for …","Set the ncplane’s base nccell to ‘c’. The base cell …","","","","","","","Same, but clipped to [0..255].","","Set an entire 32-bit channel of the plane","Set the alpha parameters for ncplane ‘n’.","Use the default color for the foreground/background.","Set the ncplane’s foreground palette index, set the …","Same, but with rgb assembled into a channel (i.e. lower …","Set the current fore/background color using RGB …","","Replace the ncplane’s existing resizecb with ‘resizecb…","All planes are created with scrolling disabled. Scrolling …","Set the specified style bits for the ncplane ‘n’, …","Manipulate the opaque user pointer associated with this …","Set the given channels throughout the specified region, …","Return the current styling for this ncplane.","","","","provided a coordinate relative to the origin of ‘src’…","Fed absolute ‘y’/‘x’ coordinates, determine …","","","The ncplane equivalents of printf(3) and vprintf(3).","","","","","Get the origin of plane ‘n’ relative to its bound …","","","Takes ownership of the ncplane ‘n’, which will be …","Destroy the progress bar and its underlying ncplane.","","Return a reference to the ncprogbar’s underlying …","Get the progress bar’s completion, a double on [0, 1].","Set the progress bar’s completion, a double 0 <= ‘p’…","","empty the ncreader of any user input, and home the cursor.","return a heap-allocated copy of the current (UTF-8) …","ncreaders provide freeform input in a (possibly …","destroy the reader and its bound plane. if ‘contents’ …","","Atttempt to move in the specified direction. Returns 0 if …","","","Offer the input to the ncreader. If it’s relevant, this …","","","Destructively write the provided EGC to the current …","","Add a new nctablet to the provided ncreel ‘nr’, …","Take over the ncplane ‘nc’ and use it to draw a reel …","Delete the tablet specified by t from the ncreel ‘nr’…","Destroy an ncreel allocated with ncreel_create().","Return the focused tablet, if any tablets are present. …","Change focus to the next tablet, if one exists","Offer input ‘ni’ to the ncreel ‘nr’. If it’s …","","Returns the ncplane on which this ncreel lives.","Change focus to the previous tablet, if one exists","Redraw the ncreel ‘nr’ in its entirety. The reel will …","Return the number of nctablets in the ncreel ‘nr’.","How to scale an ncvisual during rendering. NCSCALE_NONE …","","","","","","","Dynamically add or delete items. It is usually sufficient …","","","Destroy the ncselector. If ‘item’ is not NULL, the …","selection widget – an ncplane with a title header and a …","","Offer the input to the ncselector. If it’s relevant, …","","Return a reference to the ncselector’s underlying …","Move up or down in the list. A reference to the …","Return reference to the selected option, or NULL if there …","whenever a new field is added here, ensure we add the …","Called for each frame rendered from ‘ncv’. If …","Returns the number of columns occupied by a multibyte …","","see exec(2). p-types use $PATH. e-type passes environment …","","","","","","","Returns the tab callback.","Move ‘t’ after ‘after’ (if not NULL) and before …","Move ‘t’ to the right by one tab, looping around to …","Move ‘t’ to the right by one tab, looping around to …","Returns the tab name. This is not a copy and it should …","Returns the width (in columns) of the tab’s name.","Returns the tab to the right of ‘t’. This does not …","Returns the tab to the left of ‘t’. This does not …","Set the tab callback function for ‘t’. Returns the …","Change the name of ‘t’. Returns -1 if ‘newname’ …","Set the user pointer of ‘t’. Returns the previous …","Returns the tab’s user pointer.","","Add a new tab to ‘nt’ with the given tab callback, …","Write the channels for tab headers, the selected tab …","Returns the tab content plane.","Creates a new nctabbed widget, associated with the given …","Remove a tab ‘t’ from ‘nt’. Its neighboring tabs …","Destroy an nctabbed widget. All memory belonging to ‘nt…","Make sure the tab header of the currently selected tab is …","Returns the leftmost tab, or NULL if there are no tabs.","Select the tab after the currently selected tab, and …","","Returns the plane associated to ‘nt’.","Select the tab before the currently selected tab, and …","Redraw the widget. This calls the tab callback of the …","Rotate the tabs of ‘nt’ right by ‘amt’ tabs, or …","Change the selected tab to be ‘t’. Returns the …","Returns the currently selected tab, or NULL if there are …","Returns the tab separator. This is not a copy and it …","Returns the tab separator width, or zero if there is no …","Set the tab headers channel for ‘nt’.","Set the selected tab header channel for ‘nt’.","Change the tab separator for ‘nt’. Returns -1 if ‘…","Set the tab separator channel for ‘nt’.","Returns the number of tabs in the widget.","","Deprecated form of nctablet_plane().","Access the ncplane associated with nctablet ‘t’, if …","Returns a pointer to a user pointer associated with this …","","|opts| may <em>not</em> be NULL, since it is necessary to define a …","Destroy the nctree.","Return the focused item, if any items are present. This …","Go to the item specified by the array |spec|, terminated …","each item has a curry, and zero or more subitems.","Change focus to the next item.","Offer input ‘ni’ to the nctree ‘n’. If it’s …","","Returns the ncplane on which this nctree lives.","Change focus to the previous item.","Redraw the nctree ‘n’ in its entirety. The tree will …","item callback function","","Add to or set the value corresponding to this x. If x is …","Use the provided plane ‘n’ for plotting according to …","","Return a reference to the ncplot’s underlying ncplane.","","","FIXME this ought be used in the rendered mode API as …","","Get the specified pixel from the specified ncvisual.","Get the size and ratio of ncvisual pixels to output cells …","extract the next frame from an ncvisual. returns 1 on end …","decode the next frame ala ncvisual_decode(), but if we …","Destroy an ncvisual. Rendered elements will not be …","ncvisual_from_rgba(), but ‘bgra’ is arranged as BGRA. …","Open a visual at ‘file’, extract a codec and …","ncvisual_from_rgba(), but ‘data’ is ‘pstride’…","Promote an ncplane ‘n’ to an ncvisual. The plane may …","ncvisual_from_rgba(), but the pixels are 4-byte RGBx. A …","ncvisual_from_rgba(), but the pixels are 3-byte RGB. A is …","Prepare an ncvisual, and its underlying plane, based off …","Inflate each pixel in the image to ‘scale’x’scale’…","Get the default <em>media</em> (not plot) blitter for this …","","Polyfill at the specified location within the ncvisual ‘…","Render the decoded frame to the specified ncplane. If one …","Scale the visual to ‘rows’ X ‘columns’ pixels, …","Scale the visual to ‘rows’ X ‘columns’ pixels, …","Rotate the visual ‘rads’ radians. Only M_PI/2 and …","Set the specified pixel in the specified ncvisual.","Shut up and display my frames! Provide as an argument to …","Stream the entirety of the media, according to its own …","","If a subtitle ought be displayed at this time, return a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","New notcurses context (without banners).","New <code>NcPlane</code>.","New NcProgBar.","<code>NcReader</code> simple constructor","New empty <code>NcCell</code>.","New NcOptions.","New NcInput.","New NcPlaneOptions using the horizontal x.","New <code>NcPalette</code>.","Allocates an NcStats object.","Creates an [NcTreeItem].","New NcTreeOptions for [<code>NcTree</code>].","Creates an [NcTree] with the specified options.","New NcMenuItem for [<code>NcMenu</code>].","New NcMenuSection for [<code>NcMenu</code>].","New NcMenuOptions for [<code>NcMenu</code>].","Creates an [<code>NcMenu</code>] with the specified options.","New NcProgBarOptions for [NcProgBar].","<code>NcReaderOptions</code> simple constructor","New NcDirect with the default options.","Returns a new <code>NcVGeom</code> with zeroed fields.","New NcPlaneOptions with horizontal alignment.","New <code>NcPlane</code>, bound to another NcPlane.","New empty NcInput.","New empty NcMenuItem for [<code>NcMenu</code>].","New NcMenuSection separator for [<code>NcMenu</code>].","Changes the focus to the next item, and returns it.","Moves to the next item within the currently unrolled …","Unrolls the next section (relative to current unrolled).","","","Gets a mutable reference to the [<code>Nc</code>] context of this …","Returns a heap-allocated copy of the user name under …","Retrieve the contents of the specified cell as last …","Return the bottommost ncplane of the standard pile.","Can we reliably use Unicode Braille?","","Can we fade? Fading requires either the “rgb” or “…","Can we reliably use Unicode halfblocks?","Can we load images? This requires being built against …","Can we load videos? This requires being built against …","Can we reliably use Unicode quadrants?","Can we reliably use Unicode 13 sextants?","Can we directly specify RGB values per cell, or only use …","Is our encoding UTF-8? Requires LANG being set to a UTF8 …","Can we blit pixel-accurate bitmaps?","Gets an immutable reference to the [<code>Nc</code>] context of this …","The same as notcurses_init(), but without any multimedia …","Disable the hardware cursor. It is an error to call this …","Enable or disable the terminal’s cursor, if supported, …","Get the current location of the terminal’s cursor, …","Dump selected Notcurses state to the supplied ‘debugfp…","","Returns the name (and sometimes version) of the terminal, …","Destroy all ncplanes other than the stdplane.","Shift to the alternate screen, if available. If already …","Read a UTF-32-encoded Unicode codepoint from input. This …","Backwards-compatibility wrapper; this will be removed for …","Returns a heap-allocated copy of the local host name.","Initialize a Notcurses context on the connected terminal …","Get a file descriptor suitable for input event poll()ing. …","Exit the alternate screen. Immediately returns 0 if not …","Lex a blitter.","Lex a margin argument according to the standard Notcurses …","Lex a scaling mode (one of “none”, “stretch”, “…","Disable signals originating from the terminal’s line …","Restore signals originating from the terminal’s line …","Disable mouse events. Any events in the input queue can …","Enable the mouse in “button-event tracking” mode with …","Configuration for notcurses_init().","Returns the number of simultaneous colors claimed to be …","Refresh the physical screen to match what was last …","Renders and rasterizes the standard pile in one shot. …","","","Acquire an atomic snapshot of the Notcurses object’s …","Allocate an ncstats object. Use this rather than …","Reset all cumulative stats (immediate ones, such as …","Get a reference to the standard plane (one matching our …","","Destroy a Notcurses context.","Get the name of a blitter.","Get the name of a scaling mode.","Returns a 16-bit bitmask of supported curses-style …","Return the topmost ncplane of the standard pile.","input functions like notcurses_get() return ucs32-encoded …","Get a human-readable string describing the running …","Cannot be inline, as we want to get the versions of the …","Removes the specified styles from this <code>NcPlane</code>’s …","","Offers the <code>input</code> to this NcTree.","Offers the <code>input</code> to this <code>NcMenu</code>.","Adds the specified styles to this <code>NcPlane</code>’s existing …","option channels","option channels","filled in by library","","","","","","","","Returns the number of simultaneous colors claimed to be …","Returns the number of simultaneous colors claimed to be …","Gets the parent to which this <code>NcPlane</code> is bound, if any.","Gets the parent to which this <code>NcPlane</code> is bound, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the perimeter around this <code>NcPlane</code>.","NcPlane.[perimeter()][NcPlane#method.perimeter] with the …","NcPlane.[perimeter()][NcPlane#method.perimeter] with the …","","Returns an [NcPixelGeometry] structure filled with pixel …","true pixel geometry of ncvisual data","true pixel geometry of ncvisual data","Return a reference to the ncprogbar’s underlying …","Returns the [NcPlane] backing this NcTree.","Returns the [<code>NcPlane</code>] backing this <code>NcMenu</code>.","number of planes currently in existence","Polyfills at the specified location using <code>rgba</code>.","Changes the focus to the previous item, and returns it.","Moves to the previous item within the currently unrolled …","Unrolls the previous section (relative to current …","Same as [load][NcCell#method.load], plus blasts the …","Get the progress bar’s completion, an [f64] on [0, 1].","Pulses this <code>NcPlane</code> in and out until the callback returns …","Replaces the [<code>NcCell</code>] at the <strong>current</strong> coordinates with the …","Replaces the <code>NcCell</code> at the <strong>specified</strong> coordinates with the …","Calls [<code>putchar_yx</code>][NcPlane#method.putchar_yx] at the …","Replaces the [NcCell] at the <code>y</code>,<code>x</code> coordinates with the …","Moves the cursor to the beginning of the next row.","Writes a string to the current location, using the …","Outputs the <code>string</code> according to the <code>channels</code>, and returns …","Same as [<code>putstr_yx()</code>][NcPlane#method.putstr_yx] but […","Writes a string to the current location, but retains the …","Writes a string to the provided location, using the …","Same as [<code>putstr</code>][NcPlane#method.putstr], but it also …","do we have (good, vetted) Unicode 1 quadrant support?","Quotient.","Quotient.","Quotient.","independent variable can either be a contiguous range, or …","Takes the result of [<code>render_frame</code>][…","max ns spent in raster for a frame","min ns spent in raster for a frame","nanoseconds spent rasterizing","Makes the physical screen match the last rendered frame …","rendered cell geometry","rendered cell geometry","Reads a (heap-allocated) line of text using the Readline …","Redraws the NcTree in its entirety.","Refreshes the physical screen to match what was last …","refresh requests (non-optimized redraw)","","","Releases resources held by the current cell in the […","Remainder.","Remainder.","Remainder.","Renders and rasterizes the standard pile in one shot. …","Renders the pile of which this <code>NcPlane</code> is a part. …","Renders the decoded frame to the specified [<code>NcPlane</code>].","bytes emitted to ttyfp","Renders an image using the specified blitter and scaling, …","Displays an image using the specified blitter and scaling.","max bytes emitted for a frame","max ns spent in render for a frame","min bytes emitted for a frame","min ns spent in render for a frame","nanoseconds spent rendering","Performs the rendering and rasterization portion of […","Writes the last rendered frame, in its entirety, to ‘fp…","deprecated, must be NULL, will be removed for ABI3 FIXME","successful ncpile_render() runs","Unbounds this <code>NcPlane</code> from its parent, makes it a bound …","Like [<code>reparent</code>][NcPlane#method.reparent], except any bound…","Resets all cumulative stats (immediate ones are not …","Resizes this <code>NcPlane</code>.","Resizes the visual to <code>cols</code> X <code>rows</code> pixels.","Suitable for use as a ‘resizecb’ with planes created …","Suitable for use as a ‘resizecb’, this will resize …","Resizes the visual to  in the image to <code>rows</code> X <code>cols</code> …","Realigns this <code>NcPlane</code> against its parent, using the …","Resizes this <code>NcPlane</code>, retaining what data we can …","Returns this <code>NcPlane</code>’s current resize callback.","callback when parent is resized","restart this many seconds after an exit (watch)","24bit color? COLORTERM/heuristics/terminfo ‘rgb’","Rolls up any unrolled [<code>NcMenuSection</code>] and hides this …","Rotates the visual <code>rads</code> radians.","Rotate the plane π/2 radians counter-clockwise.","Rotate the plane π/2 radians clockwise.","NcCell.[load_box()][NcCell#method.box] with the rounded …","NcDirect.[box()][NcDirect#method.box] with the rounded …","Return the rows of this <code>NcPlane</code>.","rows, must be positive (unless …","rendered pixel geometry","rendered pixel geometry","","Address data.","","POSIX.1g specifies this type name for the `sa_family’ …","Special flags.","","Additional set of signals to be blocked.","Restore handler.","pixels per filled cell","pixels per filled cell","the scaling is ignored if no ncplane is provided (it …","Returns <code>true</code> if this <code>NcPlane</code> has scrolling enabled, or …","secondary may be NULL","secondary may be NULL","Returns the styling for the sections.","Returns a mutable reference of the styling for the …","styling for sections","must be positive","array of ‘sectioncount’ menu_sections","channel for the selected tab header","Returns the selected item description, if there’s an …","","separator string (copied by nctabbed_create())","channel for the tab separator","input event number","Sets the [<code>NcRgb</code>] value of the [<code>NcChannel</code>][crate::NcChannel…","Sets this <code>NcPlane</code>’s base [<code>NcCell</code>] from its components.","Sets this <code>NcPlane</code>’s base [<code>NcCell</code>].","Sets the current background [<code>NcChannel</code>] for this <code>NcPlane</code>. …","Sets the background [<code>NcAlphaBits</code>] for this <code>NcPlane</code>.","Sets the background [<code>NcAlphaBits</code>].","Uses the default color for the background.","Indicates to use the “default color” for the …","Indicates to use the “default color” for the …","Marks the background as NOT using the default color.","Sets this <code>NcPlane</code>’s background [NcPaletteIndex].","Sets the background [<code>NcPaletteIndex</code>].","Sets the background [NcPaletteIndex].","Sets the background [<code>NcRgb</code>] for this <code>NcPlane</code>.","Sets the background [<code>NcRgb</code>] and marks it as not using the …","Sets the background [NcRgb].","Sets the background RGB [<code>NcComponent</code>]s for this <code>NcPlane</code>.","Sets the background RGB [<code>NcComponent</code>]s, and marks it as …","Sets the background [NcComponent] components.","Sets the current [<code>NcChannels</code>] for this <code>NcPlane</code>.","Marks both the foreground and background as using the …","Sets the current foreground [<code>NcChannel</code>] for this <code>NcPlane</code>. …","Sets the foreground [<code>NcAlphaBits</code>] from this <code>NcPlane</code>.","Sets the foreground [<code>NcAlphaBits</code>].","Uses the default color for the foreground.","Indicates to use the “default color” for the …","Indicates to use the “default color” for the …","Marks the foreground as NOT using the default color.","Sets this <code>NcPlane</code>’s foreground [NcPaletteIndex].","Sets the foreground [<code>NcPaletteIndex</code>].","Sets the foreground [NcPaletteIndex].","Sets the foreground [<code>NcRgb</code>] for this <code>NcPlane</code>.","Sets the foreground [<code>NcRgb</code>] and marks it as not using the …","Sets the foreground [NcRgb].","Sets the foreground RGB [<code>NcComponent</code>]s for this <code>NcPlane</code>.","Sets the foreground RGB [<code>NcComponent</code>]s, and marks it as …","Sets the foreground [NcComponent] components.","Marks both the foreground and background as NOT using the …","Sets the progress bar’s completion, an 0 <= [f64] <= 1.","Replaces this <code>NcPlane</code>’s existing resize callback (which …","Sets the scrolling behaviour of the plane, and returns …","Sets just the specified styles for this <code>NcPlane</code>.","Sets the specified pixel.","NcFadeCtx constructor.","do we have (good, vetted) Unicode 13 sextant support?","was shift held?","shortcut, all should be distinct","shortcut, will be underlined if present in name","An integral type that can be modified atomically, without …","Structure describing the action to be taken when a signal …","Get and/or set the action for signal SIG.","Add SIGNO to SET.","Remove SIGNO from SET.","Clear all signals from SET.","Set all signals in SET.","Return 1 if SIGNO is in SET, 0 if not.","","Put in SET all signals that are blocked and waiting to be …","Get and/or change the set of blocked signals.","A set of signals to be blocked, unblocked, or waited for.","Change the set of blocked signals to SET, wait until a …","Displays frames.","IPv6 address","","IPv6 flow information","Transport layer port #","IPv6 scope-id","Internet address.","","Port number.","Pad to size of `struct sockaddr’.","","Structure describing a generic socket address.","Structure describing an Internet socket address.","Ditto, for IPv6.","","","sprixel bytes emitted","sprixel elision count","sprixel draw count","","","Sets the given [<code>NcChannels</code>]s throughout the specified …","Acquires an atomic snapshot of the notcurses object’s …","Acquires an atomic snapshot of the notcurses object’s …","Allocates an [<code>NcStats</code>] object.","Resets all cumulative stats (immediate ones, such as …","","","","Returns a mutable reference to the standard [<code>NcPlane</code>] for …","Returns a reference to the standard [<code>NcPlane</code>] for this …","Destroys the notcurses context.","Releases this NcDirect and any associated resources.","Gets the name of an [<code>NcBlitter</code>] blitter.","Gets the name of an [<code>NcScale</code>] scaling mode.","Gets the lowercase name (or names) of the styles included …","Copies the UTF8-encoded <code>EGC</code> out of this NcCell, whether …","2B → 8B (16 bits of NCSTYLE_* attributes)","Returns the current styling for this <code>NcPlane</code>.","Returns the [<code>NcStyle</code>] bits.","Removes the specified [<code>NcStyle</code>] bits.","Removes the specified styles.","Adds the specified [<code>NcStyle</code>] bits.","Adds the specified styles.","Sets just the specified [<code>NcStyle</code>] bits.","Sets just the specified styles.","","","If a subtitle ought be displayed at this time, returns a …","Returns an [<code>NcStyle</code>] with the supported curses-style …","","Tab content drawing callback. Takes the tab it was …","Tablet draw callback, provided a tablet (from which the …","tablet border styling channel","bitfield; same as bordermask but for tablet borders","attributes used for input","channels used for input","Returns our current idea of the terminal dimensions in …","The name of the terminfo database entry describing this …","Returned by `time’.","Timer ID returned by `timer_create’.","POSIX.1b structure for a time value.  This is like a `…","","title may be NULL, inhibiting riser, saving two rows.","title may be NULL, inhibiting riser, saving two rows.","optional, printed by the labels","title channels","title channels","ISO C `broken-down time’ structure.","Hours.\\t[0-23]","DST.\\t\\t[-1/0/1]","Day.\\t\\t[1-31]","Minutes.\\t[0-59]","Month.\\t[0-11]","Seconds.\\t[0-60] (1 leap second)","Day of week.\\t[0-6]","Days in year.[0-365]","Year\\t- 1900.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the topmost [<code>NcPlane</code>], of which there is always …","Returns the topmost <code>NcPlane</code> of the current pile.","treat this color as transparent under …","Maps the provided coordinates relative to the origin of …","Returns true if the provided absolute <code>y</code>/<code>x</code> coordinates are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nanoseconds.","Seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These were defined by ISO C without the first `_’.","","","","","Unsigned.","","","","Unsigned.","","upper-left channel. in the context of a progress bar,","Unrolls the specified [<code>NcMenuSection</code>], making the menu …","“up” is the direction we are progressing towards, and","Attempts to configure the terminal with this NcPalette.","","user curry, may be NULL","are we using utf-8 encoding? from nl_langinfo(3)","","Returns the row at which <code>rows</code> rows ought start in order …","Returns a human-readable string describing the running …","Returns the running notcurses version components (major, …","Draws horizontal lines using the specified [NcChannels]s, …","","Scalar type that can hold values which represent …","Is this the left half of a wide character?","Is this the right side of a wide character?","1B → 6B (8 bits of EGC column width)","","New NcInput, expecting all the arguments.","New NcTreeOptions for [<code>NcTree</code>], with all args.","New NcMenuOptions for [<code>NcMenu</code>], with all args.","New NcOptions, with all the options.","New NcInput with alt key.","New notcurses context, with banners.","New NcInput with ctrl key.","New notcurses context, expects [NcLogLevel] and flags.","New notcurses context, expects <code>NCOPTION_*</code> flags.","New NcOptions, with flags.","New NcPlaneOptions, with flags.","New NcDirect with optional flags.","New NcPlaneOptions, with flags and horizontal alignment.","New NcOptions, with margins.","New notcurses context, expects [NcOptions].","New <code>NcPlane</code>, expects an [NcPlaneOptions] struct.","New NcProgBar. Expects an [NcProgBarOptions] struct.","<code>NcReader</code> constructor with options","New <code>NcPlane</code>, bound to another plane, expects an […","Specify an existing plane.","New NcInput with shift key.","New <code>NcPlane</code>, with the same dimensions of the terminal.","New notcurses context, without an alternate screen (nor …","","max ns spent writing out a frame","min ns spent writing out a frame","nanoseconds spent writing frames to terminal","successful ncpile_rasterize() runs","Gets the <code>x</code> origin of this <code>NcPlane</code> relative to the …","x cell coordinate of event, -1 for undefined","horizontal placement relative to parent plane","if an ncplane is provided, y and x specify where the …","Gets the <code>y</code> origin of this <code>NcPlane</code> relative to the …","y cell coordinate of event, -1 for undefined","vertical placement relative to parent plane","if an ncplane is provided, y and x specify where the …","Gets the <code>y</code>, <code>x</code> origin of this <code>NcPlane</code> relative to the …","[NcMenuOptions] flag: Bottom row (as opposed to top row).","[NcMenuOptions] flag: Hide the menu when not unrolled","Use domain detection only for max","Exponential dependent axis","Show labels for dependent axis","Use domain detection only for max","Independent axis is vertical","proceed left/down","Make the terminal cursor visible across the lifetime of …","Enable horizontal scrolling. Virtual lines can then grow …","Disable all editing shortcuts. By default, emacs-style …","Enable vertical scrolling. You can then use arbitrarily …","is navigation circular (does moving down from the last …","is scrolling infinite (can one move down or up forever, …","menus on the top or bottom rows","Item for [<code>NcMenu</code>].","Options struct for [<code>NcMenu</code>].","Section for [<code>NcMenu</code>].","high-level widget for selecting items from a set","an item for [<code>NcMultiSelector</code>]","Options structure for [<code>NcMultiSelector</code>]","A histogram, bound to an [<code>NcPlane</code>][crate::NcPlane] (uses …","Options struct for [<code>NcPlotF64</code>] or [<code>NcPlotU64</code>]","A histogram, bound to an [<code>NcPlane</code>][crate::NcPlane] (uses …","Progress bars. They proceed linearly in any of four …","Options struct for [<code>NcProgBar</code>]","Provides a freeform input in a (possibly multiline) region","Options struct for [<code>NcReader</code>]","A wheel with [<code>NcTablet</code>]s on the outside.","Options struct for [<code>NcReel</code>]","high-level widget for selecting one item from a set","an item for [<code>NcSelector</code>]","Options structur for [<code>NcSelector</code>]","Visual tablet for [<code>NcReel</code>]","High-level hierarchical line-based data.","Item for [<code>NcTree</code>].","An [NcTreeItem] callback function.","An [NcTreeItem] callback function (unsafe).","Options struct for [<code>NcTree</code>].","Destroys an <code>NcMenu</code> created with [<code>new</code>][NcMenu#method.new].","Destroy the progress bar and its underlying ncplane.","Destroys an NcTree created with [new()][NcTree#method.new]…","Returns the focused item, if any items are present.","Returns the styling for the header.","Returns a mutable reference of the styling for the …","Disables or enables an [<code>NcMenuItem</code>].","Returns the [<code>NcMenuItem</code>] description corresponding to the …","Creates an [<code>NcMenu</code>] with the specified options.","New NcMenuOptions for [<code>NcMenu</code>].","New NcMenuItem for [<code>NcMenu</code>].","New NcMenuSection for [<code>NcMenu</code>].","New NcProgBar.","New NcProgBarOptions for [NcProgBar].","<code>NcReader</code> simple constructor","<code>NcReaderOptions</code> simple constructor","Creates an [NcTree] with the specified options.","Creates an [NcTreeItem].","New NcTreeOptions for [<code>NcTree</code>].","New empty NcMenuItem for [<code>NcMenu</code>].","New NcMenuSection separator for [<code>NcMenu</code>].","Changes the focus to the next item, and returns it.","Moves to the next item within the currently unrolled …","Unrolls the next section (relative to current unrolled).","Offers the <code>input</code> to this <code>NcMenu</code>.","Offers the <code>input</code> to this NcTree.","Returns the [<code>NcPlane</code>] backing this <code>NcMenu</code>.","Return a reference to the ncprogbar’s underlying …","Returns the [NcPlane] backing this NcTree.","Changes the focus to the previous item, and returns it.","Moves to the previous item within the currently unrolled …","Unrolls the previous section (relative to current …","Get the progress bar’s completion, an [f64] on [0, 1].","Redraws the NcTree in its entirety.","Rolls up any unrolled [<code>NcMenuSection</code>] and hides this …","Returns the styling for the sections.","Returns a mutable reference of the styling for the …","Returns the selected item description, if there’s an …","Sets the progress bar’s completion, an 0 <= [f64] <= 1.","Unrolls the specified [<code>NcMenuSection</code>], making the menu …","New NcMenuOptions for [<code>NcMenu</code>], with all args.","New NcTreeOptions for [<code>NcTree</code>], with all args.","New NcProgBar. Expects an [NcProgBarOptions] struct.","<code>NcReader</code> constructor with options"],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["nccomponent",6]],[[],["nccomponent",6]],[[],[["ncplane",6],["ncresult",6]]],[[],["ncdim",6]],[[],["ncdim",6]],[[]],[[["ncstyle",6]]],[[["ncstyle",6]]],[[["ncalign",6],["ncdim",6]],["ncresult",6]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[]],[[]],[[["option",4],["ncblitter",6],["ncdim",6]],["ncresult",6]],[[["ncchannels",6],["ncstyle",6]],[["string",3],["ncresult",6]]],[[["nccell",6]],[["u32",15],["ncresult",6]]],[[["ncchannels",6],["ncdim",6],["ncstyle",6]],[["option",4],["string",3]]],[[["ncchannels",6],["ncdim",6],["ncstyle",6]],[["string",3],["ncresult",6]]],[[["ncdim",6]],[["ncresult",6],["ncpixel",6]]],[[["ncdim",6],["nccell",6]],[["u32",15],["ncresult",6]]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],[["nccell",6],["ncresult",6]]],[[],["ncchannel",6]],[[],["ncchannel",6]],[[],["ncchannel",6]],[[["ncchannel",6]],["ncchannels",6]],[[["ncchannel",6]],["ncchannels",6]],[[],[["ncplane",6],["ncresult",6]]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["ncpaletteindex",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[]],[[]],[[]],[[]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ncplane",6]],[[],["ncplane",6]],[[["ncchannels",6],["ncdim",6],["u32",15]],["ncresult",6]],[[["nccell",6],["ncdim",6],["ncboxmask",6]],["ncresult",6]],[[["nccell",6],["ncdim",6],["ncboxmask",6]],["ncresult",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["nccapabilities",6]],null,null,[[["ncdim",6]]],[[["ncplane",6]],["ncchannels",6]],[[],["ncchannels",6]],[[],[["ncresult",6],["bool",15]]],[[],[["ncresult",6],["bool",15]]],[[],["ncresult",6]],[[],["ncerror",3]],[[],["ncpixelgeometry",3]],[[]],[[]],[[],["ncdim",6]],[[["ncchannel",6]]],[[["ncchannel",6]]],[[["ncplane",6],["nccell",6]],["bool",15]],[[["bool",15],["ncdim",6]],["string",3]],[[],[["result",4],["error",3],["u64",15]]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[]],[[["ncoffset",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[],["ncdim",6]],[[],["ncdim",6]],[[],["ncresult",6]],[[]],[[["ncfile",3]]],[[],[["ncintresult",6],["ncresult",6]]],[[],[["ncintresult",6],["ncresult",6]]],[[]],[[]],[[],["ncerror",3]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],["ncresult",6]],[[]],[[],["string",3]],[[],["string",3]],[[],["ncdim",6]],[[],["ncdim",6]],[[],["ncdim",6]],[[],["ncdim",6]],[[]],[[]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["nccell",6]],["ncresult",6]],[[["ncchannels",6],["ncdim",6],["u32",15]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6],["ncdim",6]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6],["ncdim",6]],["ncresult",6]],[[],["bool",15]],[[]],[[]],[[],["ncplane",6]],[[["ncplane",6],["nccell",6]],["ncresult",6]],[[["ncplane",6]],["string",3]],[[]],[[["ncchannels",6],["ncplane",6],["ncstyle",6]],["string",3]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[],["ncchannel",6]],[[],["ncchannel",6]],[[],["ncchannel",6]],[[["ncchannel",6]],["ncchannels",6]],[[["ncchannel",6]],["ncchannels",6]],null,[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["ncpaletteindex",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[]],[[]],[[]],[[]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[],["ncresult",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["ncdim",6],["ncstyle",6]],[["ncresult",6],["ncdim",6]]],[[]],[[]],[[]],[[]],[[]],[[["ncdim",6]],[["ncresult",6],["ncvisual",6]]],[[["ncplane",6],["char",15]]],[[["char",15]]],[[["str",15]],[["ncresult",6],["ncvisual",6]]],[[]],[[]],[[["ncplane",6],["ncblitter",6],["ncdim",6]],[["ncresult",6],["ncvisual",6]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["ncalphabits",6],["nccomponent",6]]],[[["ncalphabits",6],["nccomponent",6]]],[[["ncalphabits",6],["nccomponent",6]]],[[["ncalphabits",6],["nccomponent",6]]],[[["ncalphabits",6],["nccomponent",6]]],[[["ncalphabits",6],["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["ncalphabits",6],["ncrgb",6]]],[[["ncalphabits",6],["ncrgb",6]]],[[["ncalphabits",6],["ncrgb",6]]],[[["ncalphabits",6],["ncrgb",6]]],[[["ncalphabits",6],["ncrgb",6]]],[[["ncalphabits",6],["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncdim",6],["nccomponent",6]],[["ncresult",6],["ncvisual",6]]],[[["ncdim",6],["nccomponent",6]],[["ncresult",6],["ncvisual",6]]],[[["ncdim",6]],[["ncresult",6],["ncvisual",6]]],[[["ncplane",6],["str",15]]],[[["ncdim",6]]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[["nc",6],["ncvisualoptions",6]],["ncresult",6]],[[["ncpaletteindex",6]],["ncchannel",6]],[[["ncpaletteindex",6]]],[[["nctime",6],["option",4],["ncinput",6],["option",4]],[["char",15],["ncresult",6]]],[[["nctime",6],["option",4],["ncinput",6],["option",4]],[["char",15],["ncresult",6]]],[[["ncinput",6]],["char",15]],[[["option",4],["ncinput",6]],[["char",15],["ncresult",6]]],[[["ncinput",6]],["char",15]],[[["ncinput",6]],["char",15]],[[["ncchannels",6],["str",15],["ncstyle",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["ncchannels",6],["str",15],["ncstyle",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[]],[[["ncalign",6],["ncdim",6]],["ncresult",6]],[[["ncstyle",6]],["bool",15]],[[["ncstyle",6]],["bool",15]],[[["ncchannel",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["ncchannel",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["ncchannels",6],["str",15],["ncdim",6]],["ncresult",6]],[[]],[[],["ncresult",6]],[[],["ncresult",6]],null,[[]],[[]],[[]],[[],["u32",15]],[[["str",15]],[["ncresult",6],["ncblitter",6]]],[[["str",15],["ncoptions",6]],["ncresult",6]],[[["str",15]],[["ncresult",6],["ncscale",6]]],[[["str",15]],[["ncresult",6],["ncstyle",6]]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncplane",6],["str",15],["nccell",6]],[["u32",15],["ncresult",6]]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["str",15],["nccell",6]],["ncresult",6]],null,null,[[["nc",6],["ncscale",6]],["ncblitter",6]],[[["ncplane",6],["ncdim",6]],["ncresult",6]],[[["ncplane",6]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncplane",6]],["ncresult",6]],[[["ncplane",6]],["ncresult",6]],[[]],[[["ncoffset",6]],["ncresult",6]],[[]],[[["ncoffset",6]],["ncresult",6]],null,null,null,null,null,[[["nccapabilities",6]],["bool",15]],[[["nccell",6]],["ncalphabits",6]],[[["nccell",6]],["bool",15]],[[["nccell",6]],["ncpaletteindex",6]],[[["nccell",6]],["bool",15]],[[["nccell",6]],["ncrgb",6]],[[["nccomponent",6],["nccell",6]],["ncchannel",6]],[[["nccell",6]],["u8",15]],[[["nccell",6]],["bool",15]],null,null,[[["ncplane",6],["nccell",6],["ncstyle",6],["ncchannels",6]],["string",3]],[[["nccell",6]],["ncalphabits",6]],[[["nccell",6]],["bool",15]],[[["nccell",6]],["ncpaletteindex",6]],[[["nccell",6]],["bool",15]],[[["nccell",6]],["ncrgb",6]],[[["nccomponent",6],["nccell",6]],["ncchannel",6]],[[["nccell",6]]],null,[[["ncstyle",6],["nccell",6]]],[[["ncstyle",6],["nccell",6]]],[[["ncplane",6],["str",15],["ncstyle",6],["ncchannels",6],["nccell",6]],["ncintresult",6]],null,[[["ncalphabits",6],["nccell",6]]],[[["nccell",6]]],[[["ncpaletteindex",6],["nccell",6]]],[[["ncrgb",6],["nccell",6]]],[[["nccomponent",6],["nccell",6]]],[[["ncalphabits",6],["nccell",6]]],[[["nccell",6]]],[[["ncpaletteindex",6],["nccell",6]]],[[["ncrgb",6],["nccell",6]]],[[["nccomponent",6],["nccell",6]]],[[["ncstyle",6],["nccell",6]]],[[["ncplane",6],["nccell",6]],["string",3]],[[["nccell",6]],["ncstyle",6]],[[["nccell",6]],["bool",15]],[[["nccell",6]],["bool",15]],[[["ncplane",6],["nccell",6]],["ncintresult",6]],[[["ncplane",6],["nccell",6]],["bool",15]],null,[[["ncplane",6],["ncchannels",6],["ncstyle",6],["str",15],["nccell",6]],["ncintresult",6]],null,[[["ncchannel",6]],["ncalphabits",6]],[[["ncchannel",6]],["nccomponent",6]],[[["ncchannel",6]],["bool",15]],[[["ncchannel",6]],["nccomponent",6]],[[["ncchannel",6]],["bool",15]],[[["ncchannel",6]],["nccomponent",6]],[[["ncchannel",6]],["ncrgb",6]],[[["nccomponent",6],["ncchannel",6]],["ncchannel",6]],[[["ncchannel",6],["ncrgb",6]]],[[["ncchannel",6],["ncalphabits",6]]],[[["ncchannel",6],["nccomponent",6]],["ncchannel",6]],[[["ncchannel",6]],["ncchannel",6]],[[["ncchannel",6],["nccomponent",6]],["ncchannel",6]],[[["ncchannel",6]],["ncchannel",6]],[[["ncchannel",6],["nccomponent",6]],["ncchannel",6]],[[["ncchannel",6],["nccomponent",6]]],[[["ncchannels",6]],["ncchannel",6]],[[["ncchannels",6]],["ncalphabits",6]],[[["ncchannels",6]],["bool",15]],[[["ncchannels",6]],["bool",15]],[[["ncchannels",6]],["ncrgb",6]],[[["nccomponent",6],["ncchannels",6]],["ncchannel",6]],[[["ncchannel",6]],["ncchannels",6]],[[["ncchannels",6]],["ncchannel",6]],[[["ncchannels",6]],["ncalphabits",6]],[[["ncchannels",6]],["bool",15]],[[["ncchannels",6]],["bool",15]],[[["ncchannels",6]],["ncrgb",6]],[[["nccomponent",6],["ncchannels",6]],["ncchannel",6]],[[["ncchannels",6],["ncchannel",6]],["ncchannels",6]],[[["ncchannels",6],["ncalphabits",6]]],[[["ncchannels",6]],["ncchannels",6]],[[["ncchannels",6]],["ncchannels",6]],[[["ncchannels",6],["ncpaletteindex",6]]],[[["ncchannels",6],["ncrgb",6]]],[[["ncchannels",6],["nccomponent",6]],["ncchannels",6]],[[["ncchannels",6]],["ncchannels",6]],[[["ncchannels",6],["ncchannel",6]],["ncchannels",6]],[[["ncchannels",6],["ncalphabits",6]]],[[["ncchannels",6]],["ncchannels",6]],[[["ncchannels",6]],["ncchannels",6]],[[["ncchannels",6],["ncpaletteindex",6]]],[[["ncchannels",6],["ncrgb",6]]],[[["ncchannels",6],["nccomponent",6]],["ncchannels",6]],[[["ncchannels",6]],["ncchannels",6]],null,[[["ncdirect",6]],["bool",15]],[[["ncdirect",6]],["bool",15]],[[["ncdirect",6]],["bool",15]],null,[[["ncdirect",6]],["bool",15]],null,[[["ncdirect",6]],["bool",15]],[[["ncdirect",6]],["bool",15]],[[["ncdirect",6]],["bool",15]],[[["ncdirect",6]],["bool",15]],null,[[["ncdirect",6]],["nccapabilities",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ncdirect",6],["ncinput",6]],["char",15]],[[["ncdirect",6],["ncinput",6]],["char",15]],[[["ncdirect",6],["ncchannels",6],["str",15],["ncdim",6]],["ncintresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ncdirect",6],["nccomponent",6]],["ncintresult",6]],null,null,null,[[["ncdirect",6],["nccomponent",6]],["ncintresult",6]],null,null,null,null,null,[[["ncdirect",6],["ncchannels",6],["str",15],["ncdim",6]],["ncintresult",6]],null,[[]],null,[[["ncdirect",6],["str",15]],[["ncresult",6],["ncdirectf",6]]],null,[[["ncdirect",6],["ncvisualoptions",6]],[["ncresult",6],["ncvgeom",6]]],null,[[["ncdirect",6],["ncvisualoptions",6]],[["ncplane",6],["ncresult",6]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["ncinput",6]],["bool",15]],[[["ncinput",6]],["bool",15]],[[["char",15]],["bool",15]],[[["char",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["i32",15],["u64",15]],["str",15]],null,null,null,null,null,null,[[["ncpaletteindex",6],["nccomponent",6],["ncpalette",6]],["ncchannel",6]],null,[[["ncpaletteindex",6],["ncrgb",6],["ncpalette",6]]],[[["ncpaletteindex",6],["ncpalette",6],["nccomponent",6]]],null,null,null,null,null,null,[[["nccomponent",6]],["ncpixel",6]],[[["ncpixel",6]],["nccomponent",6]],[[["ncpixel",6]],["nccomponent",6]],[[["ncpixel",6]],["nccomponent",6]],[[["ncpixel",6]],["nccomponent",6]],[[["ncpixel",6],["nccomponent",6]]],[[["ncpixel",6],["nccomponent",6]]],[[["ncpixel",6],["nccomponent",6]]],[[["ncpixel",6],["nccomponent",6]]],[[["ncpixel",6],["nccomponent",6]]],null,null,null,null,null,null,null,null,null,null,[[["ncplane",6]],["ncchannel",6]],null,[[["ncplane",6]],["ncalphabits",6]],[[["ncplane",6]],["bool",15]],[[["ncplane",6]],["ncrgb",6]],[[["ncplane",6],["nccomponent",6]],["ncchannel",6]],null,[[["ncplane",6],["nccell",6],["ncboxmask",6],["ncdim",6]],["ncintresult",6]],null,[[["ncplane",6]],["ncchannels",6]],null,null,null,null,null,[[["ncplane",6]],["ncdim",6]],[[["ncplane",6]],["ncdim",6]],null,[[["ncplane",6],["ncchannels",6],["ncstyle",6],["ncboxmask",6],["ncdim",6]],["ncintresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["ncboxmask",6],["ncdim",6]],["ncintresult",6]],null,null,null,null,null,null,null,[[["ncplane",6]],["ncchannel",6]],[[["ncplane",6]],["ncalphabits",6]],[[["ncplane",6]],["bool",15]],[[["ncplane",6]],["ncrgb",6]],[[["ncplane",6],["nccomponent",6]],["ncchannel",6]],null,[[["ncplane",6],["str",15],["ncstyle",6],["ncchannels",6],["ncdim",6]],["ncintresult",6]],[[["ncplane",6],["str",15],["ncstyle",6],["ncchannels",6],["ncdim",6]],["ncintresult",6]],null,[[["ncplane",6],["ncalign",6],["ncdim",6]],["ncintresult",6]],null,null,[[["ncplane",6],["nccell",6],["ncdim",6]],["ncintresult",6]],null,null,null,null,null,null,null,null,null,[[["ncplane",6],["ncoffset",6]],["ncintresult",6]],null,null,null,null,null,null,[[["ncplane",6],["nccell",6],["ncboxmask",6]],["ncintresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["ncboxmask",6]],["ncintresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["ncboxmask",6]],["ncintresult",6]],null,null,null,[[["ncplane",6],["nccell",6]],["ncintresult",6]],null,[[["ncplane",6],["char",15]],["ncintresult",6]],null,[[["ncplane",6],["ncdim",6],["char",15]],["ncintresult",6]],null,null,[[["ncplane",6],["u32",15]],["ncintresult",6]],null,null,[[["ncplane",6],["str",15]],["ncintresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ncplane",6],["ncdim",6]],["ncintresult",6]],null,null,null,[[["ncplane",6],["ncchannels",6],["ncstyle",6],["ncboxmask",6],["ncdim",6]],["ncintresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["ncboxmask",6],["ncdim",6]],["ncintresult",6]],null,null,null,[[["ncplane",6],["ncchannel",6]],["ncchannels",6]],null,null,[[["ncplane",6]],["ncchannels",6]],null,null,null,null,[[["ncplane",6],["ncchannels",6]]],[[["ncplane",6]],["ncchannels",6]],[[["ncplane",6],["ncchannel",6]],["ncchannels",6]],null,null,[[["ncplane",6]],["ncchannels",6]],null,null,null,null,[[["ncplane",6]],["ncchannels",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[["ncplane",6],["ncalign",6],["ncdim",6]],["ncintresult",6]],[[["ncplane",6],["nccell",6],["ncdim",6]],["ncintresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["option",4],["ncresizecb",6]],[["option",4],["ncresizecbunsafe",6]]],[[["option",4],["ncresizecbunsafe",6]],[["option",4],["ncresizecb",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["nccomponent",6]]],[[]],[[]],[[]],[[],[["ncresult",6],["ncdirect",6]]],[[["char",15]],["ncinput",6]],[[],[["ncresult",6],["nc",6]]],[[]],[[["nc",6]]],[[["nccomponent",6]]],[[["nc",6],["ncdim",6],["ncoffset",6]],[["ncresult",6],["ncplane",6]]],[[["ncdim",6],["ncoffset",6]]],[[["nc",6]]],[[]],[[]],[[]],[[["ncalign",6],["ncdim",6],["ncoffset",6]]],[[["ncplane",6],["ncdim",6],["ncoffset",6]],[["ncresult",6],["ncplane",6]]],[[],["ncinput",6]],[[["ncintresult",6]]],[[["str",15]]],[[],[["ncresult",6],["nc",6]]],[[["ncalign",6],["ncdim",6]],["ncoffset",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["nc",6],["ncresult",6]]],null,null,null,null,null,null,null,null,[[["option",4],["ncinput",6],["nc",6]],["char",15]],[[["ncinput",6],["nc",6]],["char",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["nc",6],["ncdim",6]],[["ncresult",6],["ncplane",6]]],[[["nc",6],["ncdim",6]],[["ncplane",6],["ncresult",6]]],null,null,null,null,null,null,[[["nc",6]]],null,null,null,null,null,[[["ncstyle",6]]],[[["ncstyle",6]]],[[],[["u32",15],["ncresult",6]]],[[],[["u32",15],["ncresult",6]]],[[],["bool",15]],[[],["bool",15]],[[],[["ncplane",6],["ncresult",6]]],[[],[["ncplane",6],["ncresult",6]]],[[["nccell",6],["ncboxmask",6]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6]],["ncresult",6]],[[],["ncpixelgeometry",3]],[[["ncdim",6],["ncrgba",6]],["ncresult",6]],[[["ncplane",6],["str",15],["ncstyle",6],["ncchannels",6],["nccell",6]],[["u32",15],["ncresult",6]]],null,[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nccell",6]],[["ncresult",6],["ncdim",6]]],[[["nccell",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["char",15]],[["ncresult",6],["ncdim",6]]],[[["ncdim",6],["char",15]],[["ncresult",6],["ncdim",6]]],[[],["ncresult",6]],[[["ncchannels",6],["str",15]],["ncresult",6]],[[["str",15]],[["ncresult",6],["ncdim",6]]],[[["ncalign",6],["ncdim",6],["str",15]],[["ncresult",6],["ncdim",6]]],[[["str",15]],[["ncresult",6],["ncdim",6]]],[[["ncdim",6],["str",15]],[["ncresult",6],["ncdim",6]]],[[["str",15]],[["ncresult",6],["ncdim",6]]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[],["nccomponent",6]],[[["ncplane",6],["ncalign",6]],["ncresult",6]],[[],["ncresult",6]],[[],[["result",4],["usize",15],["error",3]]],[[["vec",3]],[["result",4],["usize",15],["error",3]]],[[],[["error",3],["result",4]]],[[["vec",3]],[["result",4],["usize",15],["error",3]]],[[["string",3]],[["result",4],["usize",15],["error",3]]],[[["str",15]],[["ncresult",6],["str",15]]],[[],["ncresult",6]],[[["ncplane",6]]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncvisualoptions",6],["nc",6]],[["ncplane",6],["ncresult",6]]],[[["str",15],["ncscale",6],["ncblitter",6],["ncdim",6]],[["ncresult",6],["ncplane",6]]],[[["ncalign",6],["str",15],["ncscale",6],["ncblitter",6]],["ncresult",6]],[[["vec",3]],["ncresult",6]],[[["ncfile",3]],["ncresult",6]],[[["ncplane",6]],[["ncresult",6],["ncplane",6]]],[[["ncplane",6]],[["ncresult",6],["ncplane",6]]],[[["nc",6]]],[[["ncdim",6],["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],[["option",4],["ncresizecb",6]]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[]],[[]],[[["f64",15]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["nccell",6]],["ncresult",6]],[[["ncchannels",6],["ncdim",6],["u32",15]],["ncresult",6]],[[],["ncdim",6]],[[],["bool",15]],[[["seekfrom",4]],[["result",4],["error",3],["u64",15]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6],["ncpaletteindex",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["ncalphabits",6]]],[[["ncalphabits",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["ncchannels",6],["str",15],["ncstyle",6]],[["u32",15],["ncresult",6]]],[[["nccell",6]],["ncresult",6]],[[["ncchannel",6]]],[[["ncchannel",6]]],[[["ncchannel",6]],["ncchannels",6]],[[["ncalphabits",6]]],[[["ncalphabits",6]]],[[["ncalphabits",6]]],[[["ncalphabits",6]],["ncresult",6]],[[]],[[]],[[]],[[],["ncresult",6]],[[]],[[]],[[]],[[],["ncchannels",6]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]],["ncresult",6]],[[["ncpaletteindex",6]]],[[["ncalphabits",6]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]],["ncresult",6]],[[["ncrgb",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]],["ncresult",6]],[[["nccomponent",6]]],[[["ncchannels",6]]],[[]],[[]],[[]],[[]],[[],["ncchannels",6]],[[["ncchannel",6]]],[[["ncchannel",6]]],[[["ncchannel",6]],["ncchannels",6]],[[["ncalphabits",6]]],[[["ncalphabits",6]]],[[["ncalphabits",6]]],[[["ncalphabits",6]],["ncresult",6]],[[]],[[]],[[]],[[],["ncresult",6]],[[]],[[]],[[]],[[],["ncchannels",6]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]],["ncresult",6]],[[["ncpaletteindex",6]]],[[["ncalphabits",6]]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]],["ncresult",6]],[[["ncrgb",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]],["ncresult",6]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[]],[[]],[[]],[[]],[[],["ncchannels",6]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["option",4],["ncresizecb",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["bool",15]],["bool",15]],[[["ncstyle",6]]],[[["ncdim",6],["ncpixel",6]],["ncresult",6]],[[["ncplane",6]],["ncfadectx",6]],[[["ncvisualoptions",6],["option",4],["ncplane",6],["nctime",6]],["ncresult",6]],null,[[["ncchannels",6],["ncdim",6]],[["u32",15],["ncresult",6]]],[[["ncstats",6]]],[[["nc",6]]],[[],["ncstats",6]],[[["ncstats",6]]],[[],["ncplane",6]],[[],["ncplane",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncblitter",6]],["string",3]],[[["ncscale",6]],["string",3]],[[["ncstyle",6]],["string",3]],[[["ncplane",6]],["string",3]],[[],["ncstyle",6]],[[],["ncstyle",6]],[[["ncstyle",6]]],[[["ncstyle",6]],["ncresult",6]],[[["ncstyle",6]]],[[["ncstyle",6]],["ncresult",6]],[[["ncstyle",6]]],[[["ncstyle",6]],["ncresult",6]],[[],[["ncresult",6],["str",15]]],[[],["ncstyle",6]],[[]],null,null,[[],[["option",4],["ncresizecbunsafe",6]]],[[],[["option",4],["ncresizecbunsafe",6]]],[[],[["option",4],["ncresizecbunsafe",6]]],[[]],[[]],[[],[["option",4],["ncresizecb",6]]],[[],[["option",4],["ncresizecb",6]]],[[],[["option",4],["ncresizecb",6]]],[[],["string",3]],[[],[["vec",3],["ncstyle",6]]],[[],[["vec",3],["ncstyle",6]]],[[],["ncplane",6]],[[],["ncplane",6]],[[["ncplane",6],["ncdim",6]]],[[["ncdim",6]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["nc",6]],["ncresult",6]],[[["ncalign",6],["ncdim",6]],["ncresult",6]],[[],["string",3]],[[]],[[["ncchannels",6],["str",15],["ncdim",6]],["ncresult",6]],[[],["bool",15]],[[],["bool",15]],null,[[["bool",15],["option",4],["char",15],["ncdim",6],["u64",15]],["ncinput",6]],[[["u64",15],["ncloglevel",6],["ncdim",6]]],[[["char",15]],["ncinput",6]],[[],[["ncresult",6],["nc",6]]],[[["char",15]],["ncinput",6]],[[["ncloglevel",6],["u64",15]],[["ncresult",6],["nc",6]]],[[]],[[]],[[["ncdirectflags",6]],[["ncresult",6],["ncdirect",6]]],[[["u64",15]],[["ncresult",6],["nc",6]]],[[["u64",15]]],[[["ncresizecb",6],["u64",15],["option",4],["ncdim",6],["ncoffset",6]]],[[["ncresizecb",6],["ncalign",6],["u64",15],["option",4],["ncdim",6],["ncoffset",6]]],[[["ncdim",6]]],[[["ncintresult",6],["str",15]]],[[["ncoptions",6]],[["ncresult",6],["nc",6]]],[[["ncplaneoptions",6],["nc",6]],[["ncresult",6],["ncplane",6]]],[[["ncplaneoptions",6],["ncplane",6]],[["ncresult",6],["ncplane",6]]],[[["ncrgba",6],["ncplane",6],["ncscale",6],["ncblitter",6],["ncdim",6],["u32",15]]],[[["char",15]],["ncinput",6]],[[["nc",6]],[["ncresult",6],["ncplane",6]]],[[],[["ncresult",6],["nc",6]]],[[["ncblitter",6],["ncdim",6],["u32",15]]],[[],["ncoffset",6]],[[],["ncoffset",6]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["ncplane",6],["ncresult",6]]],[[],["ncdim",6]],[[],["ncdim",6]],[[]],[[["ncalign",6],["ncdim",6]],["ncresult",6]],null,null,[[]],[[["usize",15]]],[[]],[[["option",4],["ncblitter",6],["ncdim",6]],["ncresult",6]],[[["usize",15]]],[[["ncchannels",6],["ncstyle",6]],[["string",3],["ncresult",6]]],[[["nccell",6]],[["u32",15],["ncresult",6]]],[[["ncchannels",6],["ncdim",6],["ncstyle",6]],[["option",4],["string",3]]],[[["ncchannels",6],["ncdim",6],["ncstyle",6]],[["string",3],["ncresult",6]]],[[["ncdim",6]],[["ncresult",6],["ncpixel",6]]],[[["ncdim",6],["nccell",6]],[["u32",15],["ncresult",6]]],[[],[["nccell",6],["ncresult",6]]],[[],["ncchannel",6]],null,null,[[],[["ncplane",6],["ncresult",6]]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["bool",15]],[[],["bool",15]],[[],["ncpaletteindex",6]],[[],["bool",15]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[]],[[]],null,null,null,null,null,null,null,nullncplane",6]],[[],["ncplane",6]],[[["nccell",6],["ncdim",6],["ncboxmask",6]],["ncresult",6]],[[["ncchannels",6],["ncdim",6],["u32",15]],["ncresult",6]],[[["nccell",6],["ncdim",6],["ncboxmask",6]],["ncresult",6]],null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["nccapabilities",6]],null,null,null,null,null,[[["ncdim",6]]],[[],["ncchannels",6]],[[["ncplane",6]],["ncchannels",6]],null,null,[[],[["ncresult",6],["bool",15]]],[[],[["ncresult",6],["bool",15]]],[[],["ncresult",6]],null,null,[[],["__fsid_t",3]],[[],["tm",3]],[[],["timespec",3]],[[],["__mbstate_t",3]],[[],["__mbstate_t__bindgen_ty_1",19]],[[],["_g_fpos_t",3]],[[],["_g_fpos64_t",3]],[[],["_io_marker",3]],[[],["_io_codecvt",3]],[[],["_io_wide_data",3]],[[],["_io_file",3]],[[],["div_t",3]],[[],["ldiv_t",3]],[[],["lldiv_t",3]],[[],["__sigset_t",3]],[[],["iovec",3]],[[],["sockaddr",3]],[[],["sockaddr_storage",3]],[[],["linger",3]],[[],["in_addr",3]],[[],["in6_addr",3]],[[],["in6_addr__bindgen_ty_1",19]],[[],["sockaddr_in",3]],[[],["sockaddr_in6",3]],[[],["ncprogbar",3]],[[],["ncsubproc",3]],[[],["ncfadectx",3]],[[],["nctablet",3]],[[],["nctab",3]],[[],["nctabbed",3]],[[],["nccell",3]],[[],["notcurses_options",3]],[[],["ncinput",3]],[[],["ncplane_options",3]],[[],["ncpalette",3]],[[],["nccapabilities",3]],[[],["ncstats",3]],[[],["ncvisual_options",3]],[[],["ncreel_options",3]],[[],["ncselector_item",3]],[[],["ncselector_options",3]],[[],["ncmselector_item",3]],[[],["ncmultiselector_options",3]],[[],["nctree_item",3]],[[],["nctree_options",3]],[[],["nctree",3]],[[],["ncmenu_item",3]],[[],["ncmenu_section",3]],[[],["ncmenu_options",3]],[[],["ncprogbar_options",3]],[[],["nctabbed_options",3]],[[],["ncplot_options",3]],[[],["ncfdplane_options",3]],[[],["ncsubproc_options",3]],[[],["ncreader_options",3]],[[],["ncvgeom",3]],[[],["__va_list_tag",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["__fsid_t",3]],["ordering",4]],[[["tm",3]],["ordering",4]],[[["timespec",3]],["ordering",4]],[[["_io_file",3]],["ordering",4]],[[["div_t",3]],["ordering",4]],[[["ldiv_t",3]],["ordering",4]],[[["lldiv_t",3]],["ordering",4]],[[["__sigset_t",3]],["ordering",4]],[[["iovec",3]],["ordering",4]],[[["sockaddr",3]],["ordering",4]],[[["linger",3]],["ordering",4]],[[["in_addr",3]],["ordering",4]],[[["sockaddr_in",3]],["ordering",4]],[[["nccell",3]],["ordering",4]],[[["notcurses_options",3]],["ordering",4]],[[["ncinput",3]],["ordering",4]],[[["ncplane_options",3]],["ordering",4]],[[["nccapabilities",3]],["ordering",4]],[[["ncstats",3]],["ordering",4]],[[["ncvisual_options",3]],["ordering",4]],[[["ncreel_options",3]],["ordering",4]],[[["ncselector_item",3]],["ordering",4]],[[["ncselector_options",3]],["ordering",4]],[[["ncmselector_item",3]],["ordering",4]],[[["ncmultiselector_options",3]],["ordering",4]],[[["nctree_item",3]],["ordering",4]],[[["nctree_options",3]],["ordering",4]],[[["ncmenu_item",3]],["ordering",4]],[[["ncmenu_section",3]],["ordering",4]],[[["ncmenu_options",3]],["ordering",4]],[[["ncprogbar_options",3]],["ordering",4]],[[["nctabbed_options",3]],["ordering",4]],[[["ncplot_options",3]],["ordering",4]],[[["ncfdplane_options",3]],["ordering",4]],[[["ncsubproc_options",3]],["ordering",4]],[[["ncreader_options",3]],["ordering",4]],[[["ncvgeom",3]],["ordering",4]],[[["__va_list_tag",3]],["ordering",4]],null,null,null,null,null,[[],["ncdim",6]],null,[[["ncplane",6],["nccell",6]],["bool",15]],[[["bool",15],["ncdim",6]],["string",3]],null,null,null,null,null,[[],["ncresult",6]],[[],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[]],[[["ncoffset",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[["ncoffset",6]],["ncresult",6]],[[],["ncdim",6]],[[],["ncdim",6]],[[]],[[],["ncresult",6]],null,[[["ncfile",3]]],[[],[["ncintresult",6],["ncresult",6]]],[[],[["ncintresult",6],["ncresult",6]]],[[]],[[],["__incompletearrayfield",3]],[[],["__fsid_t",3]],[[]],[[],["timespec",3]],[[]],[[]],[[]],[[]],[[]],[[],["div_t",3]],[[],["ldiv_t",3]],[[],["lldiv_t",3]],[[],["__sigset_t",3]],[[]],[[],["sockaddr",3]],[[]],[[],["cmsghdr",3]],[[],["linger",3]],[[],["in_addr",3]],[[]],[[]],[[],["sockaddr_in",3]],[[]],[[],["nccell",3]],[[]],[[],["ncinput",3]],[[]],[[]],[[],["nccapabilities",3]],[[],["ncstats",3]],[[]],[[],["ncreel_options",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ncprogbar_options",3]],[[]],[[]],[[]],[[]],[[],["ncreader_options",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["ncresult",6]],[[]],[[]],[[]],[[],["ncresult",6]],[[],["string",3]],[[],["string",3]],null,[[],["ncdim",6]],[[],["ncdim",6]],[[],["ncdim",6]],[[],["ncdim",6]],[[]],[[]],null,[[["ncchannels",6],["ncboxmask",6],["ncstyle",6],["ncdim",6]],["ncresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["nccell",6]],["ncresult",6]],[[["ncchannels",6],["ncdim",6],["u32",15]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6],["ncdim",6]],["ncresult",6]],[[],["bool",15]],[[]],[[],["ncplane",6]],[[["ncplane",6],["nccell",6]],["ncresult",6]],[[["ncplane",6]],["string",3]],[[["__fsid_t",3]],["bool",15]],[[["tm",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["_io_file",3]],["bool",15]],[[["div_t",3]],["bool",15]],[[["ldiv_t",3]],["bool",15]],[[["lldiv_t",3]],["bool",15]],[[["__sigset_t",3]],["bool",15]],[[["iovec",3]],["bool",15]],[[["sockaddr",3]],["bool",15]],[[["linger",3]],["bool",15]],[[["in_addr",3]],["bool",15]],[[["sockaddr_in",3]],["bool",15]],[[["nccell",3]],["bool",15]],[[["notcurses_options",3]],["bool",15]],[[["ncinput",3]],["bool",15]],[[["ncplane_options",3]],["bool",15]],[[["nccapabilities",3]],["bool",15]],[[["ncstats",3]],["bool",15]],[[["ncvisual_options",3]],["bool",15]],[[["ncreel_options",3]],["bool",15]],[[["ncselector_item",3]],["bool",15]],[[["ncselector_options",3]],["bool",15]],[[["ncmselector_item",3]],["bool",15]],[[["ncmultiselector_options",3]],["bool",15]],[[["nctree_item",3]],["bool",15]],[[["nctree_options",3]],["bool",15]],[[["ncmenu_item",3]],["bool",15]],[[["ncmenu_section",3]],["bool",15]],[[["ncmenu_options",3]],["bool",15]],[[["ncprogbar_options",3]],["bool",15]],[[["nctabbed_options",3]],["bool",15]],[[["ncplot_options",3]],["bool",15]],[[["ncfdplane_options",3]],["bool",15]],[[["ncsubproc_options",3]],["bool",15]],[[["ncreader_options",3]],["bool",15]],[[["ncvgeom",3]],["bool",15]],[[["__va_list_tag",3]],["bool",15]],[[]],[[["ncchannels",6],["ncplane",6],["ncstyle",6]],["string",3]],null,[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],null,null,null,null,[[],["ncchannel",6]],[[],["ncalphabits",6]],[[],["ncalphabits",6]],[[],["bool",15]],[[],["bool",15]],[[],["ncpaletteindex",6]],[[],["bool",15]],[[],["ncrgb",6]],[[],["ncrgb",6]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ncresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["nctreeitem",6],["ncresult",6]]],null,null,null,null,null,null,[[["ncdim",6],["ncstyle",6]],[["ncresult",6],["ncdim",6]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ncdim",6]],[["ncresult",6],["ncvisual",6]]],[[["ncplane",6],["char",15]]],[[["char",15]]],[[["str",15]],[["ncresult",6],["ncvisual",6]]],[[["ncplane",6],["ncblitter",6],["ncdim",6]],[["ncresult",6],["ncvisual",6]]],[[["ncdim",6],["nccomponent",6]],[["ncresult",6],["ncvisual",6]]],[[["ncdim",6],["nccomponent",6]],[["ncresult",6],["ncvisual",6]]],[[["ncdim",6]],[["ncresult",6],["ncvisual",6]]],[[["ncplane",6],["str",15]]],null,null,[[["ncdim",6]]],null,null,[[["nc",6],["ncvisualoptions",6]],["ncresult",6]],[[["ncpaletteindex",6]],["ncchannel",6]],[[["ncpaletteindex",6]]],[[["nctime",6],["option",4],["ncinput",6],["option",4]],[["char",15],["ncresult",6]]],[[["nctime",6],["option",4],["ncinput",6],["option",4]],[["char",15],["ncresult",6]]],[[["option",4],["ncinput",6]],[["char",15],["ncresult",6]]],[[["ncinput",6]],["char",15]],[[["ncinput",6]],["char",15]],[[["ncinput",6]],["char",15]],null,null,[[["ncchannels",6],["str",15],["ncstyle",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["ncchannels",6],["str",15],["ncstyle",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[]],null,null,[[["ncalign",6],["ncdim",6]],["ncresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["ncchannels",6]],[[],["ncchannels",6]],null,[[["ncchannel",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["ncchannel",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["ncchannels",6],["str",15],["ncdim",6]],["ncresult",6]],null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[],["ncresult",6]],[[],["ncresult",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["bool",15],["str",15]],["ncresult",6]],null,null,null,null,null,[[],["u32",15]],null,null,null,null,null,null,null,[[["str",15]],[["ncresult",6],["ncblitter",6]]],[[["str",15],["ncoptions",6]],["ncresult",6]],[[["str",15]],[["ncresult",6],["ncscale",6]]],[[["str",15]],[["ncresult",6],["ncstyle",6]]],[[],["ncresult",6]],[[],["ncresult",6]],null,null,[[["ncplane",6],["str",15],["nccell",6]],[["u32",15],["ncresult",6]]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["str",15],["nccell",6]],["ncresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[["nc",6],["ncscale",6]],["ncblitter",6]],[[["ncplane",6],["ncdim",6]],["ncresult",6]],[[["ncplane",6]],["ncresult",6]],null,[[],["ncresult",6]],[[],["ncresult",6]],[[["ncinput",6],["option",4],["ncinput",6]],[["string",3],["ncresult",6]]],[[["ncplane",6]],["ncresult",6]],[[["ncplane",6]],["ncresult",6]],[[]],[[["ncoffset",6]],["ncresult",6]],[[]],[[["ncoffset",6]],["ncresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[["ncdirect",6],["str",15]],[["ncresult",6],["ncdirectf",6]]],null,[[["ncdirect",6],["ncvisualoptions",6]],[["ncresult",6],["ncvgeom",6]]],null,[[["ncdirect",6],["ncvisualoptions",6]],[["ncplane",6],["ncresult",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["__fsid_t",3]],["bool",15]],[[["tm",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["_io_file",3]],["bool",15]],[[["div_t",3]],["bool",15]],[[["ldiv_t",3]],["bool",15]],[[["lldiv_t",3]],["bool",15]],[[["__sigset_t",3]],["bool",15]],[[["iovec",3]],["bool",15]],[[["sockaddr",3]],["bool",15]],[[["linger",3]],["bool",15]],[[["in_addr",3]],["bool",15]],[[["sockaddr_in",3]],["bool",15]],[[["nccell",3]],["bool",15]],[[["notcurses_options",3]],["bool",15]],[[["ncinput",3]],["bool",15]],[[["ncplane_options",3]],["bool",15]],[[["nccapabilities",3]],["bool",15]],[[["ncstats",3]],["bool",15]],[[["ncvisual_options",3]],["bool",15]],[[["ncreel_options",3]],["bool",15]],[[["ncselector_item",3]],["bool",15]],[[["ncselector_options",3]],["bool",15]],[[["ncmselector_item",3]],["bool",15]],[[["ncmultiselector_options",3]],["bool",15]],[[["nctree_item",3]],["bool",15]],[[["nctree_options",3]],["bool",15]],[[["ncmenu_item",3]],["bool",15]],[[["ncmenu_section",3]],["bool",15]],[[["ncmenu_options",3]],["bool",15]],[[["ncprogbar_options",3]],["bool",15]],[[["nctabbed_options",3]],["bool",15]],[[["ncplot_options",3]],["bool",15]],[[["ncfdplane_options",3]],["bool",15]],[[["ncsubproc_options",3]],["bool",15]],[[["ncreader_options",3]],["bool",15]],[[["ncvgeom",3]],["bool",15]],[[["__va_list_tag",3]],["bool",15]],[[]],[[]],[[],[["ncresult",6],["nc",6]]],[[["nc",6],["ncdim",6],["ncoffset",6]],[["ncresult",6],["ncplane",6]]],[[["ncplane",6]]],[[["ncplane",6]],["ncresult",6]],[[]],[[]],[[["char",15]],["ncinput",6]],[[["ncdim",6],["ncoffset",6]]],[[["nc",6]]],[[["nc",6]]],[[["str",15],["option",4],["usize",15]]],[[["ncdim",6]]],[[["ncplane",6],["nctreeoptions",6]],["ncresult",6]],[[["ncinput",6],["str",15]]],[[["ncinput",6],["str",15]]],[[]],[[["ncplane",6],["ncmenuoptions",6]],["ncresult",6]],[[]],[[]],[[],[["ncresult",6],["ncdirect",6]]],[[]],[[["ncalign",6],["ncdim",6],["ncoffset",6]]],[[["ncplane",6],["ncdim",6],["ncoffset",6]],[["ncresult",6],["ncplane",6]]],[[],["ncinput",6]],[[]],[[]],[[],[["nctreeitem",6],["ncresult",6]]],[[],["ncresult",6]],[[],["ncresult",6]],null,null,[[],[["ncresult",6],["nc",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["nc",6],["ncresult",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ncstyle",6]]],null,[[["ncinput",6]],["bool",15]],[[["ncinput",6]],["bool",15]],[[["ncstyle",6]]],null,null,null,null,null,null,null,null,null,null,[[],[["u32",15],["ncresult",6]]],[[],[["u32",15],["ncresult",6]]],[[],[["ncplane",6],["ncresult",6]]],[[],[["ncplane",6],["ncresult",6]]],[[["__fsid_t",3]],[["option",4],["ordering",4]]],[[["tm",3]],[["option",4],["ordering",4]]],[[["timespec",3]],[["option",4],["ordering",4]]],[[["_io_file",3]],[["option",4],["ordering",4]]],[[["div_t",3]],[["option",4],["ordering",4]]],[[["ldiv_t",3]],[["option",4],["ordering",4]]],[[["lldiv_t",3]],[["option",4],["ordering",4]]],[[["__sigset_t",3]],[["option",4],["ordering",4]]],[[["iovec",3]],[["option",4],["ordering",4]]],[[["sockaddr",3]],[["option",4],["ordering",4]]],[[["linger",3]],[["option",4],["ordering",4]]],[[["in_addr",3]],[["option",4],["ordering",4]]],[[["sockaddr_in",3]],[["option",4],["ordering",4]]],[[["nccell",3]],[["option",4],["ordering",4]]],[[["notcurses_options",3]],[["option",4],["ordering",4]]],[[["ncinput",3]],[["option",4],["ordering",4]]],[[["ncplane_options",3]],[["option",4],["ordering",4]]],[[["nccapabilities",3]],[["option",4],["ordering",4]]],[[["ncstats",3]],[["option",4],["ordering",4]]],[[["ncvisual_options",3]],[["option",4],["ordering",4]]],[[["ncreel_options",3]],[["option",4],["ordering",4]]],[[["ncselector_item",3]],[["option",4],["ordering",4]]],[[["ncselector_options",3]],[["option",4],["ordering",4]]],[[["ncmselector_item",3]],[["option",4],["ordering",4]]],[[["ncmultiselector_options",3]],[["option",4],["ordering",4]]],[[["nctree_item",3]],[["option",4],["ordering",4]]],[[["nctree_options",3]],[["option",4],["ordering",4]]],[[["ncmenu_item",3]],[["option",4],["ordering",4]]],[[["ncmenu_section",3]],[["option",4],["ordering",4]]],[[["ncmenu_options",3]],[["option",4],["ordering",4]]],[[["ncprogbar_options",3]],[["option",4],["ordering",4]]],[[["nctabbed_options",3]],[["option",4],["ordering",4]]],[[["ncplot_options",3]],[["option",4],["ordering",4]]],[[["ncfdplane_options",3]],[["option",4],["ordering",4]]],[[["ncsubproc_options",3]],[["option",4],["ordering",4]]],[[["ncreader_options",3]],[["option",4],["ordering",4]]],[[["ncvgeom",3]],[["option",4],["ordering",4]]],[[["__va_list_tag",3]],[["option",4],["ordering",4]]],[[["nccell",6],["ncboxmask",6]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6]],["ncresult",6]],[[["ncchannels",6],["ncboxmask",6],["ncstyle",6]],["ncresult",6]],null,[[],["ncpixelgeometry",3]],null,null,[[],["ncplane",6]],[[],[["ncplane",6],["ncresult",6]]],[[],[["ncplane",6],["ncresult",6]]],null,[[["ncdim",6],["ncrgba",6]],["ncresult",6]],[[],[["nctreeitem",6],["ncresult",6]]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncplane",6],["str",15],["ncstyle",6],["ncchannels",6],["nccell",6]],[["u32",15],["ncresult",6]]],[[],["f64",15]],[[["nctime",6],["ncfadecb",6]],["ncresult",6]],[[["nccell",6]],[["ncresult",6],["ncdim",6]]],[[["nccell",6],["ncdim",6]],[["ncresult",6],["ncdim",6]]],[[["char",15]],[["ncresult",6],["ncdim",6]]],[[["ncdim",6],["char",15]],[["ncresult",6],["ncdim",6]]],[[],["ncresult",6]],[[["str",15]],[["ncresult",6],["ncdim",6]]],[[["ncchannels",6],["str",15]],["ncresult",6]],[[["ncalign",6],["ncdim",6],["str",15]],[["ncresult",6],["ncdim",6]]],[[["str",15]],[["ncresult",6],["ncdim",6]]],[[["ncdim",6],["str",15]],[["ncresult",6],["ncdim",6]]],[[["str",15]],[["ncresult",6],["ncdim",6]]],null,null,null,null,null,[[["ncplane",6],["ncalign",6]],["ncresult",6]],null,null,null,[[],["ncresult",6]],null,null,[[["str",15]],[["ncresult",6],["str",15]]],[[],["ncresult",6]],[[],["ncresult",6]],null,null,null,[[["ncplane",6]]],null,null,null,[[],["ncresult",6]],[[],["ncresult",6]],[[["ncvisualoptions",6],["nc",6]],[["ncplane",6],["ncresult",6]]],null,[[["str",15],["ncscale",6],["ncblitter",6],["ncdim",6]],[["ncresult",6],["ncplane",6]]],[[["ncalign",6],["str",15],["ncscale",6],["ncblitter",6]],["ncresult",6]],null,null,null,null,null,[[["vec",3]],["ncresult",6]],[[["ncfile",3]],["ncresult",6]],null,null,[[["ncplane",6]],[["ncresult",6],["ncplane",6]]],[[["ncplane",6]],[["ncresult",6],["ncplane",6]]],[[["nc",6]]],[[["ncdim",6],["ncoffset",6]],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],["ncresult",6]],[[["ncdim",6]],["ncresult",6]],[[],[["option",4],["ncresizecb",6]]],null,null,null,[[],["ncresult",6]],[[["f64",15]],["ncresult",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncplane",6],["ncchannels",6],["ncstyle",6],["nccell",6]],["ncresult",6]],[[["ncchannels",6],["ncdim",6],["u32",15]],["ncresult",6]],[[],["ncdim",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,[[],["ncchannels",6]],[[],["ncchannels",6]],null,null,null,null,[[["option",4],["ncinput",6]],[["option",4],["string",3]]],null,null,null,null,[[["ncrgb",6],["ncpaletteindex",6]]],[[["ncchannels",6],["str",15],["ncstyle",6]],[["u32",15],["ncresult",6]]],[[["nccell",6]],["ncresult",6]],[[["ncchannel",6]],["ncchannels",6]],[[["ncalphabits",6]],["ncresult",6]],[[["ncalphabits",6]]],[[]],[[]],[[],["ncresult",6]],[[],["ncchannels",6]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]],["ncresult",6]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]],["ncresult",6]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]],["ncresult",6]],[[["ncchannels",6]]],[[],["ncchannels",6]],[[["ncchannel",6]],["ncchannels",6]],[[["ncalphabits",6]],["ncresult",6]],[[["ncalphabits",6]]],[[]],[[]],[[],["ncresult",6]],[[],["ncchannels",6]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]]],[[["ncpaletteindex",6]],["ncresult",6]],[[["ncrgb",6]]],[[["ncrgb",6]]],[[["ncrgb",6]],["ncresult",6]],[[["nccomponent",6]]],[[["nccomponent",6]]],[[["nccomponent",6]],["ncresult",6]],[[],["ncchannels",6]],[[["f64",15]],["ncresult",6]],[[["option",4],["ncresizecb",6]]],[[["bool",15]],["bool",15]],[[["ncstyle",6]]],[[["ncdim",6],["ncpixel",6]],["ncresult",6]],[[["ncplane",6]],["ncfadectx",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ncvisualoptions",6],["option",4],["ncplane",6],["nctime",6]],["ncresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ncchannels",6],["ncdim",6]],[["u32",15],["ncresult",6]]],[[["ncstats",6]]],[[["nc",6]]],[[],["ncstats",6]],[[["ncstats",6]]],null,null,null,[[],["ncplane",6]],[[],["ncplane",6]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncblitter",6]],["string",3]],[[["ncscale",6]],["string",3]],[[["ncstyle",6]],["string",3]],[[["ncplane",6]],["string",3]],null,[[],["ncstyle",6]],[[],["ncstyle",6]],[[["ncstyle",6]]],[[["ncstyle",6]],["ncresult",6]],[[["ncstyle",6]]],[[["ncstyle",6]],["ncresult",6]],[[["ncstyle",6]]],[[["ncstyle",6]],["ncresult",6]],null,null,[[],[["ncresult",6],["str",15]]],[[],["ncstyle",6]],null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ncplane",6]],[[],["ncplane",6]],null,[[["ncplane",6],["ncdim",6]]],[[["ncdim",6]],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["ncresult",6]],null,[[["nc",6]],["ncresult",6]],null,null,null,null,[[["ncalign",6],["ncdim",6]],["ncresult",6]],[[],["string",3]],[[]],[[["ncchannels",6],["str",15],["ncdim",6]],["ncresult",6]],null,null,[[],["bool",15]],[[],["bool",15]],null,null,[[["bool",15],["option",4],["char",15],["ncdim",6],["u64",15]],["ncinput",6]],[[["u64",15],["option",4],["usize",15],["nctreeitemcbunsafe",6],["ncdim",6]]],[[["ncchannels",6],["u64",15]]],[[["u64",15],["ncloglevel",6],["ncdim",6]]],[[["char",15]],["ncinput",6]],[[],[["ncresult",6],["nc",6]]],[[["char",15]],["ncinput",6]],[[["ncloglevel",6],["u64",15]],[["ncresult",6],["nc",6]]],[[["u64",15]],[["ncresult",6],["nc",6]]],[[["u64",15]]],[[["ncresizecb",6],["u64",15],["option",4],["ncdim",6],["ncoffset",6]]],[[["ncdirectflags",6]],[["ncresult",6],["ncdirect",6]]],[[["ncresizecb",6],["ncalign",6],["u64",15],["option",4],["ncdim",6],["ncoffset",6]]],[[["ncdim",6]]],[[["ncoptions",6]],[["ncresult",6],["nc",6]]],[[["ncplaneoptions",6],["nc",6]],[["ncresult",6],["ncplane",6]]],[[["ncplane",6],["ncprogbaroptions",6]]],[[["ncreaderoptions",6],["ncplane",6]],["ncresult",6]],[[["ncplaneoptions",6],["ncplane",6]],[["ncresult",6],["ncplane",6]]],[[["ncrgba",6],["ncplane",6],["ncscale",6],["ncblitter",6],["ncdim",6],["u32",15]]],[[["char",15]],["ncinput",6]],[[["nc",6]],[["ncresult",6],["ncplane",6]]],[[],[["ncresult",6],["nc",6]]],[[["ncblitter",6],["ncdim",6],["u32",15]]],null,null,null,null,[[],["ncoffset",6]],null,null,null,[[],["ncoffset",6]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ncresult",6]],[[]],[[]],[[],[["nctreeitem",6],["ncresult",6]]],[[],["ncchannels",6]],[[],["ncchannels",6]],[[["bool",15],["str",15]],["ncresult",6]],[[["ncinput",6],["option",4],["ncinput",6]],[["string",3],["ncresult",6]]],[[["ncplane",6],["ncmenuoptions",6]],["ncresult",6]],[[]],[[["ncinput",6],["str",15]]],[[["ncinput",6],["str",15]]],[[["ncplane",6]]],[[]],[[["ncplane",6]],["ncresult",6]],[[]],[[["ncplane",6],["nctreeoptions",6]],["ncresult",6]],[[["str",15],["option",4],["usize",15]]],[[["ncdim",6]]],[[]],[[]],[[],[["nctreeitem",6],["ncresult",6]]],[[],["ncresult",6]],[[],["ncresult",6]],[[["ncinput",6]],["bool",15]],[[["ncinput",6]],["bool",15]],[[],[["ncplane",6],["ncresult",6]]],[[],["ncplane",6]],[[],[["ncplane",6],["ncresult",6]]],[[],[["nctreeitem",6],["ncresult",6]]],[[],["ncresult",6]],[[],["ncresult",6]],[[],["f64",15]],[[],["ncresult",6]],[[],["ncresult",6]],[[],["ncchannels",6]],[[],["ncchannels",6]],[[["option",4],["ncinput",6]],[["option",4],["string",3]]],[[["f64",15]],["ncresult",6]],[[["u32",15]],["ncresult",6]],[[["ncchannels",6],["u64",15]]],[[["u64",15],["option",4],["usize",15],["nctreeitemcbunsafe",6],["ncdim",6]]],[[["ncplane",6],["ncprogbaroptions",6]]],[[["ncreaderoptions",6],["ncplane",6]],["ncresult",6]]],"p":[[8,"NcPixelMethods"],[6,"NcPixel"],[6,"NcPlane"],[8,"NcStyleMethods"],[6,"NcStyle"],[6,"Nc"],[8,"NcChannelMethods"],[6,"NcChannel"],[3,"NcFile"],[6,"NcVisual"],[8,"NcChannelsMethods"],[6,"NcChannels"],[6,"NcCell"],[3,"NcError"],[3,"NcPixelGeometry"],[6,"NcDirect"],[6,"NcFadeCtx"],[6,"NcPalette"],[6,"NcVisualOptions"],[6,"NcDirectF"],[6,"NcInput"],[6,"NcOptions"],[6,"NcPlaneOptions"],[6,"NcStats"],[6,"NcTime"],[6,"NcVGeom"],[8,"NcResizeCbMethods"],[6,"NcResizeCb"],[6,"NcResizeCbUnsafe"],[3,"_IO_FILE"],[3,"cmsghdr"],[3,"__mbstate_t"],[3,"in6_addr"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"sockaddr_storage"],[3,"tm"],[19,"in6_addr__bindgen_ty_1"],[3,"__fsid_t"],[3,"__sigset_t"],[19,"__mbstate_t__bindgen_ty_1"],[3,"ncplane"],[3,"notcurses"],[3,"ncinput"],[3,"ncstats"],[3,"__IncompleteArrayField"],[3,"ncvisual"],[3,"ncvisual_options"],[3,"nccell"],[3,"ncprogbar_options"],[3,"ncvgeom"],[3,"ncreel_options"],[3,"sigaction"],[3,"timespec"],[3,"_IO_marker"],[3,"_IO_codecvt"],[3,"_IO_wide_data"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"iovec"],[3,"sockaddr"],[3,"linger"],[3,"in_addr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"ncuplot"],[3,"ncdplot"],[3,"ncprogbar"],[3,"ncfdplane"],[3,"ncsubproc"],[3,"ncselector"],[3,"ncmultiselector"],[3,"ncreader"],[3,"ncfadectx"],[3,"nctablet"],[3,"ncreel"],[3,"nctab"],[3,"nctabbed"],[3,"notcurses_options"],[3,"ncplane_options"],[3,"ncpalette"],[3,"nccapabilities"],[3,"ncselector_item"],[3,"ncselector_options"],[3,"ncmselector_item"],[3,"ncmultiselector_options"],[3,"nctree_item"],[3,"nctree_options"],[3,"nctree"],[3,"ncmenu_item"],[3,"ncmenu_section"],[3,"ncmenu_options"],[3,"ncmenu"],[3,"nctabbed_options"],[3,"ncplot_options"],[3,"ncfdplane_options"],[3,"ncsubproc_options"],[3,"ncreader_options"],[3,"ncdirect"],[3,"__va_list_tag"],[6,"NcMenu"],[6,"NcProgBar"],[6,"NcTree"],[6,"NcMenuOptions"],[6,"NcMenuItem"],[6,"NcMenuSection"],[6,"NcProgBarOptions"],[6,"NcReader"],[6,"NcReaderOptions"],[6,"NcTreeItem"],[6,"NcTreeOptions"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};